

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 21:56:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4520 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	mediumconst
    86  007DBA                     __pmediumconst:
    87                           	callstack 0
    88  007DBA  00                 	db	0
    89  007DBB                     _valor:
    90                           	callstack 0
    91  007DBB  3F                 	db	63
    92  007DBC  06                 	db	6
    93  007DBD  5B                 	db	91
    94  007DBE  4F                 	db	79
    95  007DBF  66                 	db	102
    96  007DC0  6D                 	db	109
    97  007DC1  7D                 	db	125
    98  007DC2  07                 	db	7
    99  007DC3  7F                 	db	127
   100  007DC4  6F                 	db	111
   101  007DC5  77                 	db	119
   102  007DC6  7C                 	db	124
   103  007DC7  39                 	db	57
   104  007DC8  5E                 	db	94
   105  007DC9  79                 	db	121
   106  007DCA  71                 	db	113
   107  007DCB                     __end_of_valor:
   108                           	callstack 0
   109  007DCB                     _charKey:
   110                           	callstack 0
   111  007DCB  55                 	db	85
   112  007DCC  4C                 	db	76
   113  007DCD  44                 	db	68
   114  007DCE  52                 	db	82
   115  007DCF  53                 	db	83
   116  007DD0  58                 	db	88
   117  007DD1  41                 	db	65
   118  007DD2  42                 	db	66
   119  007DD3  59                 	db	89
   120  007DD4  73                 	db	115
   121  007DD5                     __end_of_charKey:
   122                           	callstack 0
   123  0000                     _ADCON1	set	4033
   124  0000                     _TRISE	set	3990
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISA	set	3986
   129  0000                     _PORTE	set	3972
   130  0000                     _PORTD	set	3971
   131  0000                     _PORTC	set	3970
   132  0000                     _PORTB	set	3969
   133  0000                     _PORTA	set	3968
   134  007DD5                     STR_21:
   135  007DD5  45                 	db	69	;'E'
   136  007DD6  73                 	db	115	;'s'
   137  007DD7  63                 	db	99	;'c'
   138  007DD8  6F                 	db	111	;'o'
   139  007DD9  6C                 	db	108	;'l'
   140  007DDA  68                 	db	104	;'h'
   141  007DDB  61                 	db	97	;'a'
   142  007DDC  3A                 	db	58	;':'
   143  007DDD  20                 	db	32
   144  007DDE  20                 	db	32
   145  007DDF  20                 	db	32
   146  007DE0  20                 	db	32
   147  007DE1  20                 	db	32
   148  007DE2  20                 	db	32
   149  007DE3  20                 	db	32
   150  007DE4  20                 	db	32
   151  007DE5  00                 	db	0
   152  007DE6                     STR_20:
   153  007DE6  4A                 	db	74	;'J'
   154  007DE7  6F                 	db	111	;'o'
   155  007DE8  67                 	db	103	;'g'
   156  007DE9  61                 	db	97	;'a'
   157  007DEA  64                 	db	100	;'d'
   158  007DEB  6F                 	db	111	;'o'
   159  007DEC  72                 	db	114	;'r'
   160  007DED  20                 	db	32
   161  007DEE  31                 	db	49	;'1'
   162  007DEF  20                 	db	32
   163  007DF0  20                 	db	32
   164  007DF1  20                 	db	32
   165  007DF2  20                 	db	32
   166  007DF3  20                 	db	32
   167  007DF4  20                 	db	32
   168  007DF5  20                 	db	32
   169  007DF6  00                 	db	0
   170  007DF7                     STR_24:
   171  007DF7  4A                 	db	74	;'J'
   172  007DF8  6F                 	db	111	;'o'
   173  007DF9  67                 	db	103	;'g'
   174  007DFA  61                 	db	97	;'a'
   175  007DFB  64                 	db	100	;'d'
   176  007DFC  6F                 	db	111	;'o'
   177  007DFD  72                 	db	114	;'r'
   178  007DFE  20                 	db	32
   179  007DFF  32                 	db	50	;'2'
   180  007E00  20                 	db	32
   181  007E01  20                 	db	32
   182  007E02  20                 	db	32
   183  007E03  20                 	db	32
   184  007E04  20                 	db	32
   185  007E05  20                 	db	32
   186  007E06  20                 	db	32
   187  007E07  00                 	db	0
   188  007E08                     STR_18:
   189  007E08  4E                 	db	78	;'N'
   190  007E09  75                 	db	117	;'u'
   191  007E0A  6D                 	db	109	;'m'
   192  007E0B  2E                 	db	46
   193  007E0C  20                 	db	32
   194  007E0D  64                 	db	100	;'d'
   195  007E0E  65                 	db	101	;'e'
   196  007E0F  20                 	db	32
   197  007E10  6A                 	db	106	;'j'
   198  007E11  6F                 	db	111	;'o'
   199  007E12  67                 	db	103	;'g'
   200  007E13  6F                 	db	111	;'o'
   201  007E14  73                 	db	115	;'s'
   202  007E15  3A                 	db	58	;':'
   203  007E16  20                 	db	32
   204  007E17  20                 	db	32
   205  007E18  00                 	db	0
   206  007E19                     STR_4:
   207  007E19  56                 	db	86	;'V'
   208  007E1A  65                 	db	101	;'e'
   209  007E1B  6E                 	db	110	;'n'
   210  007E1C  63                 	db	99	;'c'
   211  007E1D  65                 	db	101	;'e'
   212  007E1E  20                 	db	32
   213  007E1F  64                 	db	100	;'d'
   214  007E20  65                 	db	101	;'e'
   215  007E21  20                 	db	32
   216  007E22  54                 	db	84	;'T'
   217  007E23  20                 	db	32
   218  007E24  65                 	db	101	;'e'
   219  007E25  20                 	db	32
   220  007E26  4C                 	db	76	;'L'
   221  007E27  20                 	db	32
   222  007E28  20                 	db	32
   223  007E29  00                 	db	0
   224  007E2A                     STR_10:
   225  007E2A  56                 	db	86	;'V'
   226  007E2B  65                 	db	101	;'e'
   227  007E2C  6E                 	db	110	;'n'
   228  007E2D  63                 	db	99	;'c'
   229  007E2E  65                 	db	101	;'e'
   230  007E2F  20                 	db	32
   231  007E30  64                 	db	100	;'d'
   232  007E31  65                 	db	101	;'e'
   233  007E32  20                 	db	32
   234  007E33  70                 	db	112	;'p'
   235  007E34  20                 	db	32
   236  007E35  65                 	db	101	;'e'
   237  007E36  20                 	db	32
   238  007E37  4C                 	db	76	;'L'
   239  007E38  20                 	db	32
   240  007E39  20                 	db	32
   241  007E3A  00                 	db	0
   242  007E3B                     STR_7:
   243  007E3B  56                 	db	86	;'V'
   244  007E3C  65                 	db	101	;'e'
   245  007E3D  6E                 	db	110	;'n'
   246  007E3E  63                 	db	99	;'c'
   247  007E3F  65                 	db	101	;'e'
   248  007E40  20                 	db	32
   249  007E41  64                 	db	100	;'d'
   250  007E42  65                 	db	101	;'e'
   251  007E43  20                 	db	32
   252  007E44  50                 	db	80	;'P'
   253  007E45  20                 	db	32
   254  007E46  65                 	db	101	;'e'
   255  007E47  20                 	db	32
   256  007E48  53                 	db	83	;'S'
   257  007E49  20                 	db	32
   258  007E4A  20                 	db	32
   259  007E4B  00                 	db	0
   260  007E4C                     STR_16:
   261  007E4C  56                 	db	86	;'V'
   262  007E4D  65                 	db	101	;'e'
   263  007E4E  6E                 	db	110	;'n'
   264  007E4F  63                 	db	99	;'c'
   265  007E50  65                 	db	101	;'e'
   266  007E51  20                 	db	32
   267  007E52  64                 	db	100	;'d'
   268  007E53  65                 	db	101	;'e'
   269  007E54  20                 	db	32
   270  007E55  70                 	db	112	;'p'
   271  007E56  20                 	db	32
   272  007E57  65                 	db	101	;'e'
   273  007E58  20                 	db	32
   274  007E59  53                 	db	83	;'S'
   275  007E5A  20                 	db	32
   276  007E5B  20                 	db	32
   277  007E5C  00                 	db	0
   278  007E5D                     STR_13:
   279  007E5D  56                 	db	86	;'V'
   280  007E5E  65                 	db	101	;'e'
   281  007E5F  6E                 	db	110	;'n'
   282  007E60  63                 	db	99	;'c'
   283  007E61  65                 	db	101	;'e'
   284  007E62  20                 	db	32
   285  007E63  64                 	db	100	;'d'
   286  007E64  65                 	db	101	;'e'
   287  007E65  20                 	db	32
   288  007E66  50                 	db	80	;'P'
   289  007E67  20                 	db	32
   290  007E68  65                 	db	101	;'e'
   291  007E69  20                 	db	32
   292  007E6A  54                 	db	84	;'T'
   293  007E6B  20                 	db	32
   294  007E6C  20                 	db	32
   295  007E6D  00                 	db	0
   296  007E6E                     STR_19:
   297  007E6E  59                 	db	89	;'Y'
   298  007E6F  3D                 	db	61	;'='
   299  007E70  31                 	db	49	;'1'
   300  007E71  7C                 	db	124
   301  007E72  58                 	db	88	;'X'
   302  007E73  3D                 	db	61	;'='
   303  007E74  33                 	db	51	;'3'
   304  007E75  7C                 	db	124
   305  007E76  41                 	db	65	;'A'
   306  007E77  3D                 	db	61	;'='
   307  007E78  37                 	db	55	;'7'
   308  007E79  7C                 	db	124
   309  007E7A  42                 	db	66	;'B'
   310  007E7B  3D                 	db	61	;'='
   311  007E7C  39                 	db	57	;'9'
   312  007E7D  39                 	db	57	;'9'
   313  007E7E  00                 	db	0
   314  007E7F                     STR_8:
   315  007E7F  50                 	db	80	;'P'
   316  007E80  65                 	db	101	;'e'
   317  007E81  72                 	db	114	;'r'
   318  007E82  64                 	db	100	;'d'
   319  007E83  65                 	db	101	;'e'
   320  007E84  20                 	db	32
   321  007E85  70                 	db	112	;'p'
   322  007E86  61                 	db	97	;'a'
   323  007E87  72                 	db	114	;'r'
   324  007E88  61                 	db	97	;'a'
   325  007E89  20                 	db	32
   326  007E8A  54                 	db	84	;'T'
   327  007E8B  20                 	db	32
   328  007E8C  65                 	db	101	;'e'
   329  007E8D  20                 	db	32
   330  007E8E  4C                 	db	76	;'L'
   331  007E8F  00                 	db	0
   332  007E90                     STR_14:
   333  007E90  50                 	db	80	;'P'
   334  007E91  65                 	db	101	;'e'
   335  007E92  72                 	db	114	;'r'
   336  007E93  64                 	db	100	;'d'
   337  007E94  65                 	db	101	;'e'
   338  007E95  20                 	db	32
   339  007E96  70                 	db	112	;'p'
   340  007E97  61                 	db	97	;'a'
   341  007E98  72                 	db	114	;'r'
   342  007E99  61                 	db	97	;'a'
   343  007E9A  20                 	db	32
   344  007E9B  70                 	db	112	;'p'
   345  007E9C  20                 	db	32
   346  007E9D  65                 	db	101	;'e'
   347  007E9E  20                 	db	32
   348  007E9F  4C                 	db	76	;'L'
   349  007EA0  00                 	db	0
   350  007EA1                     STR_11:
   351  007EA1  50                 	db	80	;'P'
   352  007EA2  65                 	db	101	;'e'
   353  007EA3  72                 	db	114	;'r'
   354  007EA4  64                 	db	100	;'d'
   355  007EA5  65                 	db	101	;'e'
   356  007EA6  20                 	db	32
   357  007EA7  70                 	db	112	;'p'
   358  007EA8  61                 	db	97	;'a'
   359  007EA9  72                 	db	114	;'r'
   360  007EAA  61                 	db	97	;'a'
   361  007EAB  20                 	db	32
   362  007EAC  50                 	db	80	;'P'
   363  007EAD  20                 	db	32
   364  007EAE  65                 	db	101	;'e'
   365  007EAF  20                 	db	32
   366  007EB0  53                 	db	83	;'S'
   367  007EB1  00                 	db	0
   368  007EB2                     STR_5:
   369  007EB2  50                 	db	80	;'P'
   370  007EB3  65                 	db	101	;'e'
   371  007EB4  72                 	db	114	;'r'
   372  007EB5  64                 	db	100	;'d'
   373  007EB6  65                 	db	101	;'e'
   374  007EB7  20                 	db	32
   375  007EB8  70                 	db	112	;'p'
   376  007EB9  61                 	db	97	;'a'
   377  007EBA  72                 	db	114	;'r'
   378  007EBB  61                 	db	97	;'a'
   379  007EBC  20                 	db	32
   380  007EBD  70                 	db	112	;'p'
   381  007EBE  20                 	db	32
   382  007EBF  65                 	db	101	;'e'
   383  007EC0  20                 	db	32
   384  007EC1  53                 	db	83	;'S'
   385  007EC2  00                 	db	0
   386  007EC3                     STR_17:
   387  007EC3  50                 	db	80	;'P'
   388  007EC4  65                 	db	101	;'e'
   389  007EC5  72                 	db	114	;'r'
   390  007EC6  64                 	db	100	;'d'
   391  007EC7  65                 	db	101	;'e'
   392  007EC8  20                 	db	32
   393  007EC9  70                 	db	112	;'p'
   394  007ECA  61                 	db	97	;'a'
   395  007ECB  72                 	db	114	;'r'
   396  007ECC  61                 	db	97	;'a'
   397  007ECD  20                 	db	32
   398  007ECE  50                 	db	80	;'P'
   399  007ECF  20                 	db	32
   400  007ED0  65                 	db	101	;'e'
   401  007ED1  20                 	db	32
   402  007ED2  54                 	db	84	;'T'
   403  007ED3  00                 	db	0
   404  007ED4                     STR_48:
   405  007ED4  50                 	db	80	;'P'
   406  007ED5  6C                 	db	108	;'l'
   407  007ED6  61                 	db	97	;'a'
   408  007ED7  63                 	db	99	;'c'
   409  007ED8  61                 	db	97	;'a'
   410  007ED9  72                 	db	114	;'r'
   411  007EDA  20                 	db	32
   412  007EDB  28                 	db	40
   413  007EDC  4A                 	db	74	;'J'
   414  007EDD  6F                 	db	111	;'o'
   415  007EDE  67                 	db	103	;'g'
   416  007EDF  6F                 	db	111	;'o'
   417  007EE0  3A                 	db	58	;':'
   418  007EE1  20                 	db	32
   419  007EE2  00                 	db	0
   420  007EE3                     STR_46:
   421  007EE3  4A                 	db	74	;'J'
   422  007EE4  31                 	db	49	;'1'
   423  007EE5  20                 	db	32
   424  007EE6  65                 	db	101	;'e'
   425  007EE7  73                 	db	115	;'s'
   426  007EE8  63                 	db	99	;'c'
   427  007EE9  6F                 	db	111	;'o'
   428  007EEA  6C                 	db	108	;'l'
   429  007EEB  68                 	db	104	;'h'
   430  007EEC  69                 	db	105	;'i'
   431  007EED  64                 	db	100	;'d'
   432  007EEE  6F                 	db	111	;'o'
   433  007EEF  21                 	db	33
   434  007EF0  00                 	db	0
   435  007EF1                     STR_47:
   436  007EF1  4A                 	db	74	;'J'
   437  007EF2  32                 	db	50	;'2'
   438  007EF3  20                 	db	32
   439  007EF4  65                 	db	101	;'e'
   440  007EF5  73                 	db	115	;'s'
   441  007EF6  63                 	db	99	;'c'
   442  007EF7  6F                 	db	111	;'o'
   443  007EF8  6C                 	db	108	;'l'
   444  007EF9  68                 	db	104	;'h'
   445  007EFA  69                 	db	105	;'i'
   446  007EFB  64                 	db	100	;'d'
   447  007EFC  6F                 	db	111	;'o'
   448  007EFD  21                 	db	33
   449  007EFE  00                 	db	0
   450  007EFF                     STR_41:
   451  007EFF  50                 	db	80	;'P'
   452  007F00  6C                 	db	108	;'l'
   453  007F01  61                 	db	97	;'a'
   454  007F02  63                 	db	99	;'c'
   455  007F03  61                 	db	97	;'a'
   456  007F04  72                 	db	114	;'r'
   457  007F05  20                 	db	32
   458  007F06  46                 	db	70	;'F'
   459  007F07  69                 	db	105	;'i'
   460  007F08  6E                 	db	110	;'n'
   461  007F09  61                 	db	97	;'a'
   462  007F0A  6C                 	db	108	;'l'
   463  007F0B  3A                 	db	58	;':'
   464  007F0C  00                 	db	0
   465  007F0D                     STR_26:
   466  007F0D  59                 	db	89	;'Y'
   467  007F0E  3D                 	db	61	;'='
   468  007F0F  50                 	db	80	;'P'
   469  007F10  2C                 	db	44
   470  007F11  20                 	db	32
   471  007F12  58                 	db	88	;'X'
   472  007F13  3D                 	db	61	;'='
   473  007F14  70                 	db	112	;'p'
   474  007F15  2C                 	db	44
   475  007F16  20                 	db	32
   476  007F17  41                 	db	65	;'A'
   477  007F18  3D                 	db	61	;'='
   478  007F19  54                 	db	84	;'T'
   479  007F1A  00                 	db	0
   480  007F1B                     STR_22:
   481  007F1B  4C                 	db	76	;'L'
   482  007F1C  3D                 	db	61	;'='
   483  007F1D  50                 	db	80	;'P'
   484  007F1E  2C                 	db	44
   485  007F1F  20                 	db	32
   486  007F20  55                 	db	85	;'U'
   487  007F21  3D                 	db	61	;'='
   488  007F22  70                 	db	112	;'p'
   489  007F23  2C                 	db	44
   490  007F24  20                 	db	32
   491  007F25  52                 	db	82	;'R'
   492  007F26  3D                 	db	61	;'='
   493  007F27  54                 	db	84	;'T'
   494  007F28  00                 	db	0
   495  007F29                     STR_42:
   496  007F29  4A                 	db	74	;'J'
   497  007F2A  31                 	db	49	;'1'
   498  007F2B  20                 	db	32
   499  007F2C  56                 	db	86	;'V'
   500  007F2D  65                 	db	101	;'e'
   501  007F2E  6E                 	db	110	;'n'
   502  007F2F  63                 	db	99	;'c'
   503  007F30  65                 	db	101	;'e'
   504  007F31  75                 	db	117	;'u'
   505  007F32  21                 	db	33
   506  007F33  20                 	db	32
   507  007F34  20                 	db	32
   508  007F35  00                 	db	0
   509  007F36                     STR_43:
   510  007F36  4A                 	db	74	;'J'
   511  007F37  32                 	db	50	;'2'
   512  007F38  20                 	db	32
   513  007F39  56                 	db	86	;'V'
   514  007F3A  65                 	db	101	;'e'
   515  007F3B  6E                 	db	110	;'n'
   516  007F3C  63                 	db	99	;'c'
   517  007F3D  65                 	db	101	;'e'
   518  007F3E  75                 	db	117	;'u'
   519  007F3F  21                 	db	33
   520  007F40  20                 	db	32
   521  007F41  20                 	db	32
   522  007F42  00                 	db	0
   523  007F43                     STR_15:
   524  007F43  4C                 	db	76	;'L'
   525  007F44  61                 	db	97	;'a'
   526  007F45  67                 	db	103	;'g'
   527  007F46  61                 	db	97	;'a'
   528  007F47  72                 	db	114	;'r'
   529  007F48  74                 	db	116	;'t'
   530  007F49  6F                 	db	111	;'o'
   531  007F4A  28                 	db	40
   532  007F4B  4C                 	db	76	;'L'
   533  007F4C  29                 	db	41
   534  007F4D  3A                 	db	58	;':'
   535  007F4E  20                 	db	32
   536  007F4F  00                 	db	0
   537  007F50                     STR_9:
   538  007F50  54                 	db	84	;'T'
   539  007F51  65                 	db	101	;'e'
   540  007F52  73                 	db	115	;'s'
   541  007F53  6F                 	db	111	;'o'
   542  007F54  75                 	db	117	;'u'
   543  007F55  72                 	db	114	;'r'
   544  007F56  61                 	db	97	;'a'
   545  007F57  28                 	db	40
   546  007F58  54                 	db	84	;'T'
   547  007F59  29                 	db	41
   548  007F5A  3A                 	db	58	;':'
   549  007F5B  20                 	db	32
   550  007F5C  00                 	db	0
   551  007F5D                     STR_12:
   552  007F5D  53                 	db	83	;'S'
   553  007F5E  70                 	db	112	;'p'
   554  007F5F  6F                 	db	111	;'o'
   555  007F60  63                 	db	99	;'c'
   556  007F61  6B                 	db	107	;'k'
   557  007F62  28                 	db	40
   558  007F63  53                 	db	83	;'S'
   559  007F64  29                 	db	41
   560  007F65  3A                 	db	58	;':'
   561  007F66  20                 	db	32
   562  007F67  20                 	db	32
   563  007F68  00                 	db	0
   564  007F69                     STR_23:
   565  007F69  44                 	db	68	;'D'
   566  007F6A  3D                 	db	61	;'='
   567  007F6B  4C                 	db	76	;'L'
   568  007F6C  20                 	db	32
   569  007F6D  6F                 	db	111	;'o'
   570  007F6E  75                 	db	117	;'u'
   571  007F6F  20                 	db	32
   572  007F70  53                 	db	83	;'S'
   573  007F71  3D                 	db	61	;'='
   574  007F72  53                 	db	83	;'S'
   575  007F73  20                 	db	32
   576  007F74  00                 	db	0
   577  007F75                     STR_27:
   578  007F75  42                 	db	66	;'B'
   579  007F76  3D                 	db	61	;'='
   580  007F77  4C                 	db	76	;'L'
   581  007F78  20                 	db	32
   582  007F79  6F                 	db	111	;'o'
   583  007F7A  75                 	db	117	;'u'
   584  007F7B  20                 	db	32
   585  007F7C  73                 	db	115	;'s'
   586  007F7D  3D                 	db	61	;'='
   587  007F7E  53                 	db	83	;'S'
   588  007F7F  20                 	db	32
   589  007F80  00                 	db	0
   590  007F81                     STR_2:
   591  007F81  43                 	db	67	;'C'
   592  007F82  6F                 	db	111	;'o'
   593  007F83  6D                 	db	109	;'m'
   594  007F84  6F                 	db	111	;'o'
   595  007F85  20                 	db	32
   596  007F86  6A                 	db	106	;'j'
   597  007F87  6F                 	db	111	;'o'
   598  007F88  67                 	db	103	;'g'
   599  007F89  61                 	db	97	;'a'
   600  007F8A  72                 	db	114	;'r'
   601  007F8B  3A                 	db	58	;':'
   602  007F8C  00                 	db	0
   603  007F8D                     STR_3:
   604  007F8D  50                 	db	80	;'P'
   605  007F8E  65                 	db	101	;'e'
   606  007F8F  64                 	db	100	;'d'
   607  007F90  72                 	db	114	;'r'
   608  007F91  61                 	db	97	;'a'
   609  007F92  28                 	db	40
   610  007F93  50                 	db	80	;'P'
   611  007F94  29                 	db	41
   612  007F95  3A                 	db	58	;':'
   613  007F96  20                 	db	32
   614  007F97  00                 	db	0
   615  007F98                     STR_6:
   616  007F98  50                 	db	80	;'P'
   617  007F99  61                 	db	97	;'a'
   618  007F9A  70                 	db	112	;'p'
   619  007F9B  65                 	db	101	;'e'
   620  007F9C  6C                 	db	108	;'l'
   621  007F9D  28                 	db	40
   622  007F9E  70                 	db	112	;'p'
   623  007F9F  29                 	db	41
   624  007FA0  3A                 	db	58	;':'
   625  007FA1  20                 	db	32
   626  007FA2  00                 	db	0
   627  007FA3                     STR_29:
   628  007FA3  20                 	db	32
   629  007FA4  20                 	db	32
   630  007FA5  7C                 	db	124
   631  007FA6  7C                 	db	124
   632  007FA7  20                 	db	32
   633  007FA8  20                 	db	32
   634  007FA9  4A                 	db	74	;'J'
   635  007FAA  32                 	db	50	;'2'
   636  007FAB  3A                 	db	58	;':'
   637  007FAC  20                 	db	32
   638  007FAD  00                 	db	0
   639  007FAE                     STR_45:
   640  007FAE  4D                 	db	77	;'M'
   641  007FAF  65                 	db	101	;'e'
   642  007FB0  6C                 	db	108	;'l'
   643  007FB1  68                 	db	104	;'h'
   644  007FB2  6F                 	db	111	;'o'
   645  007FB3  72                 	db	114	;'r'
   646  007FB4  20                 	db	32
   647  007FB5  64                 	db	100	;'d'
   648  007FB6  65                 	db	101	;'e'
   649  007FB7  20                 	db	32
   650  007FB8  00                 	db	0
   651  007FB9                     STR_1:
   652  007FB9  42                 	db	66	;'B'
   653  007FBA  65                 	db	101	;'e'
   654  007FBB  6D                 	db	109	;'m'
   655  007FBC  2D                 	db	45
   656  007FBD  76                 	db	118	;'v'
   657  007FBE  69                 	db	105	;'i'
   658  007FBF  6E                 	db	110	;'n'
   659  007FC0  64                 	db	100	;'d'
   660  007FC1  6F                 	db	111	;'o'
   661  007FC2  21                 	db	33
   662  007FC3  00                 	db	0
   663  007FC4                     STR_31:
   664  007FC4  4A                 	db	74	;'J'
   665  007FC5  31                 	db	49	;'1'
   666  007FC6  20                 	db	32
   667  007FC7  76                 	db	118	;'v'
   668  007FC8  65                 	db	101	;'e'
   669  007FC9  6E                 	db	110	;'n'
   670  007FCA  63                 	db	99	;'c'
   671  007FCB  65                 	db	101	;'e'
   672  007FCC  75                 	db	117	;'u'
   673  007FCD  21                 	db	33
   674  007FCE  00                 	db	0
   675  007FCF                     STR_32:
   676  007FCF  4A                 	db	74	;'J'
   677  007FD0  32                 	db	50	;'2'
   678  007FD1  20                 	db	32
   679  007FD2  76                 	db	118	;'v'
   680  007FD3  65                 	db	101	;'e'
   681  007FD4  6E                 	db	110	;'n'
   682  007FD5  63                 	db	99	;'c'
   683  007FD6  65                 	db	101	;'e'
   684  007FD7  75                 	db	117	;'u'
   685  007FD8  21                 	db	33
   686  007FD9  00                 	db	0
   687  007FDA                     STR_50:
   688  007FDA  5B                 	db	91	;'['
   689  007FDB  4A                 	db	74	;'J'
   690  007FDC  31                 	db	49	;'1'
   691  007FDD  5D                 	db	93	;']'
   692  007FDE  78                 	db	120	;'x'
   693  007FDF  5B                 	db	91	;'['
   694  007FE0  4A                 	db	74	;'J'
   695  007FE1  32                 	db	50	;'2'
   696  007FE2  5D                 	db	93	;']'
   697  007FE3  3A                 	db	58	;':'
   698  007FE4  00                 	db	0
   699  007FE5                     STR_44:
   700  007FE5  50                 	db	80	;'P'
   701  007FE6  61                 	db	97	;'a'
   702  007FE7  72                 	db	114	;'r'
   703  007FE8  74                 	db	116	;'t'
   704  007FE9  69                 	db	105	;'i'
   705  007FEA  64                 	db	100	;'d'
   706  007FEB  61                 	db	97	;'a'
   707  007FEC  3A                 	db	58	;':'
   708  007FED  00                 	db	0
   709  007FEE                     STR_30:
   710  007FEE  45                 	db	69	;'E'
   711  007FEF  6D                 	db	109	;'m'
   712  007FF0  70                 	db	112	;'p'
   713  007FF1  61                 	db	97	;'a'
   714  007FF2  74                 	db	116	;'t'
   715  007FF3  65                 	db	101	;'e'
   716  007FF4  21                 	db	33
   717  007FF5  00                 	db	0
   718  007FF6                     STR_28:
   719  007FF6  4A                 	db	74	;'J'
   720  007FF7  31                 	db	49	;'1'
   721  007FF8  3A                 	db	58	;':'
   722  007FF9  20                 	db	32
   723  007FFA  00                 	db	0
   724  007FFB                     STR_49:
   725  007FFB  29                 	db	41
   726  007FFC  20                 	db	32
   727  007FFD  00                 	db	0
   728  007FFE  00                 	db	0	; dummy byte at the end
   729  0000                     
   730                           ; #config settings
   731                           
   732                           	psect	cinit
   733  005288                     __pcinit:
   734                           	callstack 0
   735  005288                     start_initialization:
   736                           	callstack 0
   737  005288                     __initialization:
   738                           	callstack 0
   739                           
   740                           ; Clear objects allocated to COMRAM (12 bytes)
   741  005288  EE00  F03A         	lfsr	0,__pbssCOMRAM
   742  00528C  0E0C               	movlw	12
   743  00528E                     clear_0:
   744  00528E  6AEE               	clrf	postinc0,c
   745  005290  06E8               	decf	wreg,f,c
   746  005292  E1FD               	bnz	clear_0
   747  005294                     end_of_initialization:
   748                           	callstack 0
   749  005294                     __end_of__initialization:
   750                           	callstack 0
   751  005294  0E00               	movlw	low (__Lmediumconst shr (0+16))
   752  005296  6EF8               	movwf	tblptru,c
   753  005298  0100               	movlb	0
   754  00529A  EF2A  F037         	goto	_main	;jump to C main() function
   755                           
   756                           	psect	bssCOMRAM
   757  00003A                     __pbssCOMRAM:
   758                           	callstack 0
   759  00003A                     kpDebounce@oldRead:
   760                           	callstack 0
   761  00003A                     	ds	2
   762  00003C                     kpDebounce@newRead:
   763                           	callstack 0
   764  00003C                     	ds	2
   765  00003E                     _keys:
   766                           	callstack 0
   767  00003E                     	ds	2
   768  000040                     _v3:
   769                           	callstack 0
   770  000040                     	ds	1
   771  000041                     _v2:
   772                           	callstack 0
   773  000041                     	ds	1
   774  000042                     _v1:
   775                           	callstack 0
   776  000042                     	ds	1
   777  000043                     _v0:
   778                           	callstack 0
   779  000043                     	ds	1
   780  000044                     _display:
   781                           	callstack 0
   782  000044                     	ds	1
   783  000045                     kpDebounce@tempo:
   784                           	callstack 0
   785  000045                     	ds	1
   786                           
   787                           	psect	cstackCOMRAM
   788  000001                     __pcstackCOMRAM:
   789                           	callstack 0
   790  000001                     ??_kpReadKey:
   791  000001                     ??_Jogada:
   792  000001                     ?_digitalRead:
   793                           	callstack 0
   794  000001                     ?_kpRead:
   795                           	callstack 0
   796  000001                     ?___lwdiv:
   797                           	callstack 0
   798  000001                     ?___fladd:
   799                           	callstack 0
   800  000001                     digitalWrite@pin:
   801                           	callstack 0
   802  000001                     digitalRead@pin:
   803                           	callstack 0
   804  000001                     pinMode@pin:
   805                           	callstack 0
   806  000001                     delayMicro@a:
   807                           	callstack 0
   808  000001                     delayMili@a:
   809                           	callstack 0
   810  000001                     ___lwdiv@dividend:
   811                           	callstack 0
   812  000001                     ___flge@ff1:
   813                           	callstack 0
   814  000001                     ___fladd@b:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x0
   818  000001                     	ds	2
   819  000003                     ??_digitalRead:
   820  000003                     ??_delayMili:
   821  000003                     Jogada@j:
   822                           	callstack 0
   823  000003                     digitalWrite@value:
   824                           	callstack 0
   825  000003                     pinMode@type:
   826                           	callstack 0
   827  000003                     ___lwdiv@divisor:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x2
   831  000003                     	ds	1
   832  000004                     kpReadKey@i:
   833                           	callstack 0
   834  000004                     delayMili@i:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x3
   838  000004                     	ds	1
   839  000005                     ??_digitalWrite:
   840  000005                     ??_pinMode:
   841  000005                     ___lwdiv@quotient:
   842                           	callstack 0
   843  000005                     ___flge@ff2:
   844                           	callstack 0
   845  000005                     ___fladd@a:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4
   849  000005                     	ds	2
   850  000007                     ___lwdiv@counter:
   851                           	callstack 0
   852  000007                     soWrite@value:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x6
   856  000007                     	ds	1
   857  000008                     ?___lwmod:
   858                           	callstack 0
   859  000008                     ___lwmod@dividend:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x7
   863  000008                     	ds	1
   864  000009                     ??___fladd:
   865  000009                     ??___flge:
   866  000009                     soWrite@i:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x8
   870  000009                     	ds	1
   871  00000A                     ??_kpDebounce:
   872  00000A                     ??_ssdUpdate:
   873  00000A                     pushNibble@rs:
   874                           	callstack 0
   875  00000A                     pushByte@rs:
   876                           	callstack 0
   877  00000A                     ___lwmod@divisor:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x9
   881  00000A                     	ds	2
   882  00000C                     ??_pushByte:
   883  00000C                     pushNibble@value:
   884                           	callstack 0
   885  00000C                     ___lwmod@counter:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xB
   889  00000C                     	ds	1
   890  00000D                     pushByte@value:
   891                           	callstack 0
   892  00000D                     ssdDigit@pos:
   893                           	callstack 0
   894  00000D                     ___fladd@signs:
   895                           	callstack 0
   896  00000D                     kpDebounce@i:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900  00000D                     	ds	1
   901  00000E                     lcdCommand@value:
   902                           	callstack 0
   903  00000E                     lcdChar@value:
   904                           	callstack 0
   905  00000E                     ssdDigit@val:
   906                           	callstack 0
   907  00000E                     ___fladd@aexp:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0xD
   911  00000E                     	ds	1
   912  00000F                     ___fladd@bexp:
   913                           	callstack 0
   914  00000F                     lcdString@msg:
   915                           	callstack 0
   916  00000F                     Placar@c1:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0xE
   920  00000F                     	ds	1
   921  000010                     ___fladd@grs:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0xF
   925  000010                     	ds	1
   926  000011                     ??_lcdString:
   927  000011                     ?_NumJogos:
   928                           	callstack 0
   929  000011                     Placar@c2:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x10
   933  000011                     	ds	2
   934  000013                     ??_NumJogos:
   935  000013                     lcdString@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x12
   939  000013                     	ds	2
   940  000015                     Versus@j2:
   941                           	callstack 0
   942  000015                     FimDeJogo@c1:
   943                           	callstack 0
   944  000015                     Start@t:
   945                           	callstack 0
   946  000015                     Jogador1@t:
   947                           	callstack 0
   948  000015                     Jogador2@t:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x14
   952  000015                     	ds	1
   953  000016                     ??_Versus:
   954  000016                     NumJogos@ant:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x15
   958  000016                     	ds	1
   959  000017                     FimDeJogo@c2:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x16
   963  000017                     	ds	1
   964  000018                     NumJogos@fim:
   965                           	callstack 0
   966  000018                     Versus@j1:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x17
   970  000018                     	ds	1
   971  000019                     Versus@v1:
   972                           	callstack 0
   973  000019                     NumJogos@at:
   974                           	callstack 0
   975  000019                     FimDeJogo@t:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x18
   979  000019                     	ds	1
   980  00001A                     Versus@v2:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x19
   984  00001A                     	ds	1
   985  00001B                     NumJogos@tec:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x1A
   989  00001B                     	ds	2
   990  00001D                     NumJogos@t:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x1C
   994  00001D                     	ds	4
   995  000021                     ??_main:
   996                           
   997                           ; 1 bytes @ 0x20
   998  000021                     	ds	3
   999  000024                     main@j1:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x23
  1003  000024                     	ds	1
  1004  000025                     main@j2:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x24
  1008  000025                     	ds	1
  1009  000026                     main@final:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x25
  1013  000026                     	ds	2
  1014  000028                     main@c1:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x27
  1018  000028                     	ds	2
  1019  00002A                     main@c2:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x29
  1023  00002A                     	ds	2
  1024  00002C                     main@cont:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x2B
  1028  00002C                     	ds	1
  1029  00002D                     main@ant:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x2C
  1033  00002D                     	ds	2
  1034  00002F                     main@slot:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x2E
  1038  00002F                     	ds	1
  1039  000030                     main@partida:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x2F
  1043  000030                     	ds	2
  1044  000032                     main@atual:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x31
  1048  000032                     	ds	2
  1049  000034                     main@tecla:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x33
  1053  000034                     	ds	2
  1054  000036                     main@t:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x35
  1058  000036                     	ds	4
  1059                           
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 251 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  t               4   53[COMRAM] volatile float 
  1070 ;;  tecla           2   51[COMRAM] unsigned int 
  1071 ;;  atual           2   49[COMRAM] unsigned int 
  1072 ;;  partida         2   47[COMRAM] unsigned int 
  1073 ;;  ant             2   44[COMRAM] unsigned int 
  1074 ;;  c2              2   41[COMRAM] unsigned int 
  1075 ;;  c1              2   39[COMRAM] unsigned int 
  1076 ;;  final           2   37[COMRAM] unsigned int 
  1077 ;;  slot            1   46[COMRAM] unsigned char 
  1078 ;;  cont            1   43[COMRAM] unsigned char 
  1079 ;;  j2              1   36[COMRAM] unsigned char 
  1080 ;;  j1              1   35[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1090 ;;      Params:         0       0       0       0       0       0       0
  1091 ;;      Locals:        22       0       0       0       0       0       0
  1092 ;;      Temps:          3       0       0       0       0       0       0
  1093 ;;      Totals:        25       0       0       0       0       0       0
  1094 ;;Total ram usage:       25 bytes
  1095 ;; Hardware stack levels required when called: 7
  1096 ;; This function calls:
  1097 ;;		_FimDeJogo
  1098 ;;		_Jogador1
  1099 ;;		_Jogador2
  1100 ;;		_NumJogos
  1101 ;;		_Placar
  1102 ;;		_Start
  1103 ;;		_Versus
  1104 ;;		___fladd
  1105 ;;		___flge
  1106 ;;		___lwmod
  1107 ;;		_kpDebounce
  1108 ;;		_kpInit
  1109 ;;		_kpRead
  1110 ;;		_kpReadKey
  1111 ;;		_lcdChar
  1112 ;;		_lcdCommand
  1113 ;;		_lcdInit
  1114 ;;		_lcdString
  1115 ;;		_ssdInit
  1116 ;; This function is called by:
  1117 ;;		Startup code after reset
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text0
  1122  006E54                     __ptext0:
  1123                           	callstack 0
  1124  006E54                     _main:
  1125                           	callstack 24
  1126  006E54                     
  1127                           ;main.c: 252:     unsigned char slot, j1 = 0, j2 = 0, cont;
  1128  006E54  0E00               	movlw	0
  1129  006E56  6E24               	movwf	main@j1^0,c
  1130  006E58  0E00               	movlw	0
  1131  006E5A  6E25               	movwf	main@j2^0,c
  1132  006E5C  0E00               	movlw	0
  1133  006E5E  6E2E               	movwf	(main@ant+1)^0,c
  1134  006E60  0E00               	movlw	0
  1135  006E62  6E2D               	movwf	main@ant^0,c
  1136  006E64  0E00               	movlw	0
  1137  006E66  6E29               	movwf	(main@c1+1)^0,c
  1138  006E68  0E00               	movlw	0
  1139  006E6A  6E28               	movwf	main@c1^0,c
  1140  006E6C  0E00               	movlw	0
  1141  006E6E  6E2B               	movwf	(main@c2+1)^0,c
  1142  006E70  0E00               	movlw	0
  1143  006E72  6E2A               	movwf	main@c2^0,c
  1144  006E74  0E00               	movlw	0
  1145  006E76  6E31               	movwf	(main@partida+1)^0,c
  1146  006E78  0E00               	movlw	0
  1147  006E7A  6E30               	movwf	main@partida^0,c
  1148  006E7C                     
  1149                           ;main.c: 254:     volatile float t;;main.c: 255:     lcdInit();
  1150  006E7C  EC34  F02C         	call	_lcdInit	;wreg free
  1151  006E80                     
  1152                           ;main.c: 256:     kpInit();
  1153  006E80  ECC2  F029         	call	_kpInit	;wreg free
  1154  006E84                     
  1155                           ;main.c: 257:     ssdInit();
  1156  006E84  EC6D  F02A         	call	_ssdInit	;wreg free
  1157  006E88                     
  1158                           ;main.c: 258:     TRISD = 0x00;
  1159  006E88  0E00               	movlw	0
  1160  006E8A  6E95               	movwf	149,c	;volatile
  1161  006E8C                     
  1162                           ;main.c: 259:     Start();
  1163  006E8C  EC80  F03A         	call	_Start	;wreg free
  1164  006E90                     
  1165                           ;main.c: 260:     final = NumJogos();
  1166  006E90  EC94  F030         	call	_NumJogos	;wreg free
  1167  006E94  C011  F026         	movff	?_NumJogos,main@final
  1168  006E98  C012  F027         	movff	?_NumJogos+1,main@final+1
  1169                           
  1170                           ;main.c: 261:     lcdInit();
  1171  006E9C  EC34  F02C         	call	_lcdInit	;wreg free
  1172  006EA0                     
  1173                           ;main.c: 262:     lcdString("Partida:");
  1174  006EA0  0EE5               	movlw	low STR_44
  1175  006EA2  6E0F               	movwf	lcdString@msg^0,c
  1176  006EA4  0E7F               	movlw	high STR_44
  1177  006EA6  6E10               	movwf	(lcdString@msg+1)^0,c
  1178  006EA8  EC42  F02A         	call	_lcdString	;wreg free
  1179  006EAC                     
  1180                           ;main.c: 263:     lcdCommand(0xC0);
  1181  006EAC  0EC0               	movlw	192
  1182  006EAE  EC4F  F029         	call	_lcdCommand
  1183                           
  1184                           ;main.c: 264:     lcdString("Melhor de ");
  1185  006EB2  0EAE               	movlw	low STR_45
  1186  006EB4  6E0F               	movwf	lcdString@msg^0,c
  1187  006EB6  0E7F               	movlw	high STR_45
  1188  006EB8  6E10               	movwf	(lcdString@msg+1)^0,c
  1189  006EBA  EC42  F02A         	call	_lcdString	;wreg free
  1190  006EBE                     
  1191                           ;main.c: 265:     lcdChar((final % 100) + 48);
  1192  006EBE  C026  F008         	movff	main@final,___lwmod@dividend
  1193  006EC2  C027  F009         	movff	main@final+1,___lwmod@dividend+1
  1194  006EC6  0E00               	movlw	0
  1195  006EC8  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1196  006ECA  0E64               	movlw	100
  1197  006ECC  6E0A               	movwf	___lwmod@divisor^0,c
  1198  006ECE  ECF1  F02A         	call	___lwmod	;wreg free
  1199  006ED2  5008               	movf	?___lwmod^0,w,c
  1200  006ED4  0F30               	addlw	48
  1201  006ED6  EC5E  F029         	call	_lcdChar
  1202  006EDA                     
  1203                           ;main.c: 266:     for (t = 0; t < 5000; t++);
  1204  006EDA  0E00               	movlw	0
  1205  006EDC  6E36               	movwf	main@t^0,c	;volatile
  1206  006EDE  0E00               	movlw	0
  1207  006EE0  6E37               	movwf	(main@t+1)^0,c	;volatile
  1208  006EE2  0E00               	movlw	0
  1209  006EE4  6E38               	movwf	(main@t+2)^0,c	;volatile
  1210  006EE6  0E00               	movlw	0
  1211  006EE8  6E39               	movwf	(main@t+3)^0,c	;volatile
  1212  006EEA  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1213  006EEE  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1214  006EF2  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1215  006EF6  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1216  006EFA  0E00               	movlw	0
  1217  006EFC  6E05               	movwf	___flge@ff2^0,c
  1218  006EFE  0E40               	movlw	64
  1219  006F00  6E06               	movwf	(___flge@ff2+1)^0,c
  1220  006F02  0E9C               	movlw	156
  1221  006F04  6E07               	movwf	(___flge@ff2+2)^0,c
  1222  006F06  0E45               	movlw	69
  1223  006F08  6E08               	movwf	(___flge@ff2+3)^0,c
  1224  006F0A  EC84  F02D         	call	___flge	;wreg free
  1225  006F0E  A0D8               	btfss	status,0,c
  1226  006F10  EF8C  F037         	goto	u3531
  1227  006F14  EF8E  F037         	goto	u3530
  1228  006F18                     u3531:
  1229  006F18  EF90  F037         	goto	l3294
  1230  006F1C                     u3530:
  1231  006F1C  EFC3  F037         	goto	l367
  1232  006F20                     l3294:
  1233  006F20  C036  F001         	movff	main@t,___fladd@b	;volatile
  1234  006F24  C037  F002         	movff	main@t+1,___fladd@b+1	;volatile
  1235  006F28  C038  F003         	movff	main@t+2,___fladd@b+2	;volatile
  1236  006F2C  C039  F004         	movff	main@t+3,___fladd@b+3	;volatile
  1237  006F30  0E00               	movlw	0
  1238  006F32  6E05               	movwf	___fladd@a^0,c
  1239  006F34  0E00               	movlw	0
  1240  006F36  6E06               	movwf	(___fladd@a+1)^0,c
  1241  006F38  0E80               	movlw	128
  1242  006F3A  6E07               	movwf	(___fladd@a+2)^0,c
  1243  006F3C  0E3F               	movlw	63
  1244  006F3E  6E08               	movwf	(___fladd@a+3)^0,c
  1245  006F40  ECCA  F034         	call	___fladd	;wreg free
  1246  006F44  C001  F036         	movff	?___fladd,main@t	;volatile
  1247  006F48  C002  F037         	movff	?___fladd+1,main@t+1	;volatile
  1248  006F4C  C003  F038         	movff	?___fladd+2,main@t+2	;volatile
  1249  006F50  C004  F039         	movff	?___fladd+3,main@t+3	;volatile
  1250  006F54  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1251  006F58  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1252  006F5C  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1253  006F60  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1254  006F64  0E00               	movlw	0
  1255  006F66  6E05               	movwf	___flge@ff2^0,c
  1256  006F68  0E40               	movlw	64
  1257  006F6A  6E06               	movwf	(___flge@ff2+1)^0,c
  1258  006F6C  0E9C               	movlw	156
  1259  006F6E  6E07               	movwf	(___flge@ff2+2)^0,c
  1260  006F70  0E45               	movlw	69
  1261  006F72  6E08               	movwf	(___flge@ff2+3)^0,c
  1262  006F74  EC84  F02D         	call	___flge	;wreg free
  1263  006F78  A0D8               	btfss	status,0,c
  1264  006F7A  EFC1  F037         	goto	u3541
  1265  006F7E  EFC3  F037         	goto	u3540
  1266  006F82                     u3541:
  1267  006F82  EF90  F037         	goto	l3294
  1268  006F86                     u3540:
  1269  006F86                     l367:
  1270                           
  1271                           ;main.c: 267:     PORTD = partida;
  1272  006F86  0E00               	movlw	0
  1273  006F88  6E83               	movwf	131,c	;volatile
  1274  006F8A  EF59  F03A         	goto	l3440
  1275  006F8E                     l3296:
  1276                           
  1277                           ;main.c: 271:                 lcdInit();
  1278  006F8E  EC34  F02C         	call	_lcdInit	;wreg free
  1279  006F92                     
  1280                           ;main.c: 273:                 ant = 0;
  1281  006F92  0E00               	movlw	0
  1282  006F94  6E2E               	movwf	(main@ant+1)^0,c
  1283  006F96  0E00               	movlw	0
  1284  006F98  6E2D               	movwf	main@ant^0,c
  1285  006F9A                     
  1286                           ;main.c: 274:                 Jogador1();
  1287  006F9A  EC8E  F02C         	call	_Jogador1	;wreg free
  1288  006F9E                     
  1289                           ;main.c: 275:                 for (t = 0; t < 5000; t++) {
  1290  006F9E  0E00               	movlw	0
  1291  006FA0  6E36               	movwf	main@t^0,c	;volatile
  1292  006FA2  0E00               	movlw	0
  1293  006FA4  6E37               	movwf	(main@t+1)^0,c	;volatile
  1294  006FA6  0E00               	movlw	0
  1295  006FA8  6E38               	movwf	(main@t+2)^0,c	;volatile
  1296  006FAA  0E00               	movlw	0
  1297  006FAC  6E39               	movwf	(main@t+3)^0,c	;volatile
  1298  006FAE  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1299  006FB2  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1300  006FB6  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1301  006FBA  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1302  006FBE  0E00               	movlw	0
  1303  006FC0  6E05               	movwf	___flge@ff2^0,c
  1304  006FC2  0E40               	movlw	64
  1305  006FC4  6E06               	movwf	(___flge@ff2+1)^0,c
  1306  006FC6  0E9C               	movlw	156
  1307  006FC8  6E07               	movwf	(___flge@ff2+2)^0,c
  1308  006FCA  0E45               	movlw	69
  1309  006FCC  6E08               	movwf	(___flge@ff2+3)^0,c
  1310  006FCE  EC84  F02D         	call	___flge	;wreg free
  1311  006FD2  A0D8               	btfss	status,0,c
  1312  006FD4  EFEE  F037         	goto	u3551
  1313  006FD8  EFF0  F037         	goto	u3550
  1314  006FDC                     u3551:
  1315  006FDC  EFF2  F037         	goto	l3310
  1316  006FE0                     u3550:
  1317  006FE0  EF59  F03A         	goto	l3440
  1318  006FE4                     l3310:
  1319                           
  1320                           ;main.c: 276:                     kpDebounce();
  1321  006FE4  EC8E  F02E         	call	_kpDebounce	;wreg free
  1322  006FE8                     
  1323                           ;main.c: 277:                     atual = kpRead();
  1324  006FE8  EC3F  F029         	call	_kpRead	;wreg free
  1325  006FEC  C001  F032         	movff	?_kpRead,main@atual
  1326  006FF0  C002  F033         	movff	?_kpRead+1,main@atual+1
  1327                           
  1328                           ;main.c: 278:                     if (atual != ant) {
  1329  006FF4  502D               	movf	main@ant^0,w,c
  1330  006FF6  1832               	xorwf	main@atual^0,w,c
  1331  006FF8  E109               	bnz	u3560
  1332  006FFA  502E               	movf	(main@ant+1)^0,w,c
  1333  006FFC  1833               	xorwf	(main@atual+1)^0,w,c
  1334  006FFE  B4D8               	btfsc	status,2,c
  1335  007000  EF04  F038         	goto	u3561
  1336  007004  EF06  F038         	goto	u3560
  1337  007008                     u3561:
  1338  007008  EF48  F038         	goto	l3336
  1339  00700C                     u3560:
  1340  00700C                     
  1341                           ;main.c: 279:                         for (tecla = 0; tecla < 5; tecla++) {
  1342  00700C  0E00               	movlw	0
  1343  00700E  6E35               	movwf	(main@tecla+1)^0,c
  1344  007010  0E00               	movlw	0
  1345  007012  6E34               	movwf	main@tecla^0,c
  1346  007014                     l3320:
  1347                           
  1348                           ;main.c: 280:                             if (((atual) & (1<<(tecla)))) {
  1349  007014  C034  F021         	movff	main@tecla,??_main
  1350  007018  0E01               	movlw	1
  1351  00701A  6E22               	movwf	(??_main+1)^0,c
  1352  00701C  0E00               	movlw	0
  1353  00701E  6E23               	movwf	(??_main+2)^0,c
  1354  007020  2A21               	incf	??_main^0,f,c
  1355  007022  EF16  F038         	goto	u3574
  1356  007026                     u3575:
  1357  007026  90D8               	bcf	status,0,c
  1358  007028  3622               	rlcf	(??_main+1)^0,f,c
  1359  00702A  3623               	rlcf	(??_main+2)^0,f,c
  1360  00702C                     u3574:
  1361  00702C  2E21               	decfsz	??_main^0,f,c
  1362  00702E  EF13  F038         	goto	u3575
  1363  007032  5032               	movf	main@atual^0,w,c
  1364  007034  1622               	andwf	(??_main+1)^0,f,c
  1365  007036  5033               	movf	(main@atual+1)^0,w,c
  1366  007038  1623               	andwf	(??_main+2)^0,f,c
  1367  00703A  5022               	movf	(??_main+1)^0,w,c
  1368  00703C  1023               	iorwf	(??_main+2)^0,w,c
  1369  00703E  B4D8               	btfsc	status,2,c
  1370  007040  EF24  F038         	goto	u3581
  1371  007044  EF26  F038         	goto	u3580
  1372  007048                     u3581:
  1373  007048  EF3B  F038         	goto	l3332
  1374  00704C                     u3580:
  1375  00704C                     
  1376                           ;main.c: 281:                                 j1 = kpReadKey();
  1377  00704C  EC5D  F02B         	call	_kpReadKey	;wreg free
  1378  007050  6E24               	movwf	main@j1^0,c
  1379  007052                     
  1380                           ;main.c: 282:                                 lcdInit();
  1381  007052  EC34  F02C         	call	_lcdInit	;wreg free
  1382  007056                     
  1383                           ;main.c: 283:                                 lcdString("J1 escolhido!");
  1384  007056  0EE3               	movlw	low STR_46
  1385  007058  6E0F               	movwf	lcdString@msg^0,c
  1386  00705A  0E7E               	movlw	high STR_46
  1387  00705C  6E10               	movwf	(lcdString@msg+1)^0,c
  1388  00705E  EC42  F02A         	call	_lcdString	;wreg free
  1389  007062                     
  1390                           ;main.c: 284:                                 t = 4750;
  1391  007062  0E00               	movlw	0
  1392  007064  6E36               	movwf	main@t^0,c	;volatile
  1393  007066  0E70               	movlw	112
  1394  007068  6E37               	movwf	(main@t+1)^0,c	;volatile
  1395  00706A  0E94               	movlw	148
  1396  00706C  6E38               	movwf	(main@t+2)^0,c	;volatile
  1397  00706E  0E45               	movlw	69
  1398  007070  6E39               	movwf	(main@t+3)^0,c	;volatile
  1399  007072                     
  1400                           ;main.c: 285:                                 slot = 1;
  1401  007072  0E01               	movlw	1
  1402  007074  6E2F               	movwf	main@slot^0,c
  1403  007076                     l3332:
  1404                           
  1405                           ;main.c: 287:                         }
  1406  007076  4A34               	infsnz	main@tecla^0,f,c
  1407  007078  2A35               	incf	(main@tecla+1)^0,f,c
  1408  00707A  5035               	movf	(main@tecla+1)^0,w,c
  1409  00707C  E109               	bnz	u3590
  1410  00707E  0E05               	movlw	5
  1411  007080  5C34               	subwf	main@tecla^0,w,c
  1412  007082  A0D8               	btfss	status,0,c
  1413  007084  EF46  F038         	goto	u3591
  1414  007088  EF48  F038         	goto	u3590
  1415  00708C                     u3591:
  1416  00708C  EF0A  F038         	goto	l3320
  1417  007090                     u3590:
  1418  007090                     l3336:
  1419                           
  1420                           ;main.c: 289:                 }
  1421  007090  C036  F001         	movff	main@t,___fladd@b	;volatile
  1422  007094  C037  F002         	movff	main@t+1,___fladd@b+1	;volatile
  1423  007098  C038  F003         	movff	main@t+2,___fladd@b+2	;volatile
  1424  00709C  C039  F004         	movff	main@t+3,___fladd@b+3	;volatile
  1425  0070A0  0E00               	movlw	0
  1426  0070A2  6E05               	movwf	___fladd@a^0,c
  1427  0070A4  0E00               	movlw	0
  1428  0070A6  6E06               	movwf	(___fladd@a+1)^0,c
  1429  0070A8  0E80               	movlw	128
  1430  0070AA  6E07               	movwf	(___fladd@a+2)^0,c
  1431  0070AC  0E3F               	movlw	63
  1432  0070AE  6E08               	movwf	(___fladd@a+3)^0,c
  1433  0070B0  ECCA  F034         	call	___fladd	;wreg free
  1434  0070B4  C001  F036         	movff	?___fladd,main@t	;volatile
  1435  0070B8  C002  F037         	movff	?___fladd+1,main@t+1	;volatile
  1436  0070BC  C003  F038         	movff	?___fladd+2,main@t+2	;volatile
  1437  0070C0  C004  F039         	movff	?___fladd+3,main@t+3	;volatile
  1438  0070C4  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1439  0070C8  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1440  0070CC  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1441  0070D0  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1442  0070D4  0E00               	movlw	0
  1443  0070D6  6E05               	movwf	___flge@ff2^0,c
  1444  0070D8  0E40               	movlw	64
  1445  0070DA  6E06               	movwf	(___flge@ff2+1)^0,c
  1446  0070DC  0E9C               	movlw	156
  1447  0070DE  6E07               	movwf	(___flge@ff2+2)^0,c
  1448  0070E0  0E45               	movlw	69
  1449  0070E2  6E08               	movwf	(___flge@ff2+3)^0,c
  1450  0070E4  EC84  F02D         	call	___flge	;wreg free
  1451  0070E8  A0D8               	btfss	status,0,c
  1452  0070EA  EF79  F038         	goto	u3601
  1453  0070EE  EF7B  F038         	goto	u3600
  1454  0070F2                     u3601:
  1455  0070F2  EFF2  F037         	goto	l3310
  1456  0070F6                     u3600:
  1457  0070F6  EF59  F03A         	goto	l3440
  1458  0070FA                     l3338:
  1459                           
  1460                           ;main.c: 292:                 lcdInit();
  1461  0070FA  EC34  F02C         	call	_lcdInit	;wreg free
  1462  0070FE                     
  1463                           ;main.c: 294:                 ant = 0;
  1464  0070FE  0E00               	movlw	0
  1465  007100  6E2E               	movwf	(main@ant+1)^0,c
  1466  007102  0E00               	movlw	0
  1467  007104  6E2D               	movwf	main@ant^0,c
  1468  007106                     
  1469                           ;main.c: 295:                 Jogador2();
  1470  007106  EC09  F02D         	call	_Jogador2	;wreg free
  1471  00710A                     
  1472                           ;main.c: 296:                 for (t = 0; t < 5000; t++) {
  1473  00710A  0E00               	movlw	0
  1474  00710C  6E36               	movwf	main@t^0,c	;volatile
  1475  00710E  0E00               	movlw	0
  1476  007110  6E37               	movwf	(main@t+1)^0,c	;volatile
  1477  007112  0E00               	movlw	0
  1478  007114  6E38               	movwf	(main@t+2)^0,c	;volatile
  1479  007116  0E00               	movlw	0
  1480  007118  6E39               	movwf	(main@t+3)^0,c	;volatile
  1481  00711A  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1482  00711E  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1483  007122  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1484  007126  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1485  00712A  0E00               	movlw	0
  1486  00712C  6E05               	movwf	___flge@ff2^0,c
  1487  00712E  0E40               	movlw	64
  1488  007130  6E06               	movwf	(___flge@ff2+1)^0,c
  1489  007132  0E9C               	movlw	156
  1490  007134  6E07               	movwf	(___flge@ff2+2)^0,c
  1491  007136  0E45               	movlw	69
  1492  007138  6E08               	movwf	(___flge@ff2+3)^0,c
  1493  00713A  EC84  F02D         	call	___flge	;wreg free
  1494  00713E  A0D8               	btfss	status,0,c
  1495  007140  EFA4  F038         	goto	u3611
  1496  007144  EFA6  F038         	goto	u3610
  1497  007148                     u3611:
  1498  007148  EFA8  F038         	goto	l3352
  1499  00714C                     u3610:
  1500  00714C  EF59  F03A         	goto	l3440
  1501  007150                     l3352:
  1502                           
  1503                           ;main.c: 297:                     kpDebounce();
  1504  007150  EC8E  F02E         	call	_kpDebounce	;wreg free
  1505  007154                     
  1506                           ;main.c: 298:                     atual = kpRead();
  1507  007154  EC3F  F029         	call	_kpRead	;wreg free
  1508  007158  C001  F032         	movff	?_kpRead,main@atual
  1509  00715C  C002  F033         	movff	?_kpRead+1,main@atual+1
  1510                           
  1511                           ;main.c: 299:                     if (atual != ant) {
  1512  007160  502D               	movf	main@ant^0,w,c
  1513  007162  1832               	xorwf	main@atual^0,w,c
  1514  007164  E109               	bnz	u3620
  1515  007166  502E               	movf	(main@ant+1)^0,w,c
  1516  007168  1833               	xorwf	(main@atual+1)^0,w,c
  1517  00716A  B4D8               	btfsc	status,2,c
  1518  00716C  EFBA  F038         	goto	u3621
  1519  007170  EFBC  F038         	goto	u3620
  1520  007174                     u3621:
  1521  007174  EFFE  F038         	goto	l3378
  1522  007178                     u3620:
  1523  007178                     
  1524                           ;main.c: 300:                         for (tecla = 5; tecla < 10; tecla++) {
  1525  007178  0E00               	movlw	0
  1526  00717A  6E35               	movwf	(main@tecla+1)^0,c
  1527  00717C  0E05               	movlw	5
  1528  00717E  6E34               	movwf	main@tecla^0,c
  1529  007180                     l3362:
  1530                           
  1531                           ;main.c: 301:                             if (((atual) & (1<<(tecla)))) {
  1532  007180  C034  F021         	movff	main@tecla,??_main
  1533  007184  0E01               	movlw	1
  1534  007186  6E22               	movwf	(??_main+1)^0,c
  1535  007188  0E00               	movlw	0
  1536  00718A  6E23               	movwf	(??_main+2)^0,c
  1537  00718C  2A21               	incf	??_main^0,f,c
  1538  00718E  EFCC  F038         	goto	u3634
  1539  007192                     u3635:
  1540  007192  90D8               	bcf	status,0,c
  1541  007194  3622               	rlcf	(??_main+1)^0,f,c
  1542  007196  3623               	rlcf	(??_main+2)^0,f,c
  1543  007198                     u3634:
  1544  007198  2E21               	decfsz	??_main^0,f,c
  1545  00719A  EFC9  F038         	goto	u3635
  1546  00719E  5032               	movf	main@atual^0,w,c
  1547  0071A0  1622               	andwf	(??_main+1)^0,f,c
  1548  0071A2  5033               	movf	(main@atual+1)^0,w,c
  1549  0071A4  1623               	andwf	(??_main+2)^0,f,c
  1550  0071A6  5022               	movf	(??_main+1)^0,w,c
  1551  0071A8  1023               	iorwf	(??_main+2)^0,w,c
  1552  0071AA  B4D8               	btfsc	status,2,c
  1553  0071AC  EFDA  F038         	goto	u3641
  1554  0071B0  EFDC  F038         	goto	u3640
  1555  0071B4                     u3641:
  1556  0071B4  EFF1  F038         	goto	l3374
  1557  0071B8                     u3640:
  1558  0071B8                     
  1559                           ;main.c: 302:                                 j2 = kpReadKey();
  1560  0071B8  EC5D  F02B         	call	_kpReadKey	;wreg free
  1561  0071BC  6E25               	movwf	main@j2^0,c
  1562  0071BE                     
  1563                           ;main.c: 303:                                 lcdInit();
  1564  0071BE  EC34  F02C         	call	_lcdInit	;wreg free
  1565  0071C2                     
  1566                           ;main.c: 304:                                 lcdString("J2 escolhido!");
  1567  0071C2  0EF1               	movlw	low STR_47
  1568  0071C4  6E0F               	movwf	lcdString@msg^0,c
  1569  0071C6  0E7E               	movlw	high STR_47
  1570  0071C8  6E10               	movwf	(lcdString@msg+1)^0,c
  1571  0071CA  EC42  F02A         	call	_lcdString	;wreg free
  1572  0071CE                     
  1573                           ;main.c: 305:                                 t = 4750;
  1574  0071CE  0E00               	movlw	0
  1575  0071D0  6E36               	movwf	main@t^0,c	;volatile
  1576  0071D2  0E70               	movlw	112
  1577  0071D4  6E37               	movwf	(main@t+1)^0,c	;volatile
  1578  0071D6  0E94               	movlw	148
  1579  0071D8  6E38               	movwf	(main@t+2)^0,c	;volatile
  1580  0071DA  0E45               	movlw	69
  1581  0071DC  6E39               	movwf	(main@t+3)^0,c	;volatile
  1582  0071DE                     
  1583                           ;main.c: 306:                                 slot = 2;
  1584  0071DE  0E02               	movlw	2
  1585  0071E0  6E2F               	movwf	main@slot^0,c
  1586  0071E2                     l3374:
  1587                           
  1588                           ;main.c: 308:                         }
  1589  0071E2  4A34               	infsnz	main@tecla^0,f,c
  1590  0071E4  2A35               	incf	(main@tecla+1)^0,f,c
  1591  0071E6  5035               	movf	(main@tecla+1)^0,w,c
  1592  0071E8  E109               	bnz	u3650
  1593  0071EA  0E0A               	movlw	10
  1594  0071EC  5C34               	subwf	main@tecla^0,w,c
  1595  0071EE  A0D8               	btfss	status,0,c
  1596  0071F0  EFFC  F038         	goto	u3651
  1597  0071F4  EFFE  F038         	goto	u3650
  1598  0071F8                     u3651:
  1599  0071F8  EFC0  F038         	goto	l3362
  1600  0071FC                     u3650:
  1601  0071FC                     l3378:
  1602                           
  1603                           ;main.c: 310:                 }
  1604  0071FC  C036  F001         	movff	main@t,___fladd@b	;volatile
  1605  007200  C037  F002         	movff	main@t+1,___fladd@b+1	;volatile
  1606  007204  C038  F003         	movff	main@t+2,___fladd@b+2	;volatile
  1607  007208  C039  F004         	movff	main@t+3,___fladd@b+3	;volatile
  1608  00720C  0E00               	movlw	0
  1609  00720E  6E05               	movwf	___fladd@a^0,c
  1610  007210  0E00               	movlw	0
  1611  007212  6E06               	movwf	(___fladd@a+1)^0,c
  1612  007214  0E80               	movlw	128
  1613  007216  6E07               	movwf	(___fladd@a+2)^0,c
  1614  007218  0E3F               	movlw	63
  1615  00721A  6E08               	movwf	(___fladd@a+3)^0,c
  1616  00721C  ECCA  F034         	call	___fladd	;wreg free
  1617  007220  C001  F036         	movff	?___fladd,main@t	;volatile
  1618  007224  C002  F037         	movff	?___fladd+1,main@t+1	;volatile
  1619  007228  C003  F038         	movff	?___fladd+2,main@t+2	;volatile
  1620  00722C  C004  F039         	movff	?___fladd+3,main@t+3	;volatile
  1621  007230  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1622  007234  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1623  007238  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1624  00723C  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1625  007240  0E00               	movlw	0
  1626  007242  6E05               	movwf	___flge@ff2^0,c
  1627  007244  0E40               	movlw	64
  1628  007246  6E06               	movwf	(___flge@ff2+1)^0,c
  1629  007248  0E9C               	movlw	156
  1630  00724A  6E07               	movwf	(___flge@ff2+2)^0,c
  1631  00724C  0E45               	movlw	69
  1632  00724E  6E08               	movwf	(___flge@ff2+3)^0,c
  1633  007250  EC84  F02D         	call	___flge	;wreg free
  1634  007254  A0D8               	btfss	status,0,c
  1635  007256  EF2F  F039         	goto	u3661
  1636  00725A  EF31  F039         	goto	u3660
  1637  00725E                     u3661:
  1638  00725E  EFA8  F038         	goto	l3352
  1639  007262                     u3660:
  1640  007262  EF59  F03A         	goto	l3440
  1641  007266                     l3380:
  1642                           
  1643                           ;main.c: 313:                 cont = Versus(j1, j2);
  1644  007266  C025  F015         	movff	main@j2,Versus@j2
  1645  00726A  5024               	movf	main@j1^0,w,c
  1646  00726C  EC74  F031         	call	_Versus
  1647  007270  6E2C               	movwf	main@cont^0,c
  1648  007272                     
  1649                           ;main.c: 314:                 if (cont == '1') {
  1650  007272  0E31               	movlw	49
  1651  007274  182C               	xorwf	main@cont^0,w,c
  1652  007276  A4D8               	btfss	status,2,c
  1653  007278  EF40  F039         	goto	u3671
  1654  00727C  EF42  F039         	goto	u3670
  1655  007280                     u3671:
  1656  007280  EF46  F039         	goto	l3386
  1657  007284                     u3670:
  1658  007284                     
  1659                           ;main.c: 315:                     c1++;
  1660  007284  4A28               	infsnz	main@c1^0,f,c
  1661  007286  2A29               	incf	(main@c1+1)^0,f,c
  1662                           
  1663                           ;main.c: 316:                 } else if (cont == '2') {
  1664  007288  EF51  F039         	goto	l3390
  1665  00728C                     l3386:
  1666  00728C  0E32               	movlw	50
  1667  00728E  182C               	xorwf	main@cont^0,w,c
  1668  007290  A4D8               	btfss	status,2,c
  1669  007292  EF4D  F039         	goto	u3681
  1670  007296  EF4F  F039         	goto	u3680
  1671  00729A                     u3681:
  1672  00729A  EF51  F039         	goto	l3390
  1673  00729E                     u3680:
  1674  00729E                     
  1675                           ;main.c: 317:                     c2++;
  1676  00729E  4A2A               	infsnz	main@c2^0,f,c
  1677  0072A0  2A2B               	incf	(main@c2+1)^0,f,c
  1678  0072A2                     l3390:
  1679                           
  1680                           ;main.c: 319:                 for (t = 0; t < 7000; t++);
  1681  0072A2  0E00               	movlw	0
  1682  0072A4  6E36               	movwf	main@t^0,c	;volatile
  1683  0072A6  0E00               	movlw	0
  1684  0072A8  6E37               	movwf	(main@t+1)^0,c	;volatile
  1685  0072AA  0E00               	movlw	0
  1686  0072AC  6E38               	movwf	(main@t+2)^0,c	;volatile
  1687  0072AE  0E00               	movlw	0
  1688  0072B0  6E39               	movwf	(main@t+3)^0,c	;volatile
  1689  0072B2  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1690  0072B6  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1691  0072BA  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1692  0072BE  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1693  0072C2  0E00               	movlw	0
  1694  0072C4  6E05               	movwf	___flge@ff2^0,c
  1695  0072C6  0EC0               	movlw	192
  1696  0072C8  6E06               	movwf	(___flge@ff2+1)^0,c
  1697  0072CA  0EDA               	movlw	218
  1698  0072CC  6E07               	movwf	(___flge@ff2+2)^0,c
  1699  0072CE  0E45               	movlw	69
  1700  0072D0  6E08               	movwf	(___flge@ff2+3)^0,c
  1701  0072D2  EC84  F02D         	call	___flge	;wreg free
  1702  0072D6  A0D8               	btfss	status,0,c
  1703  0072D8  EF70  F039         	goto	u3691
  1704  0072DC  EF72  F039         	goto	u3690
  1705  0072E0                     u3691:
  1706  0072E0  EF74  F039         	goto	l3396
  1707  0072E4                     u3690:
  1708  0072E4  EFA7  F039         	goto	l3398
  1709  0072E8                     l3396:
  1710  0072E8  C036  F001         	movff	main@t,___fladd@b	;volatile
  1711  0072EC  C037  F002         	movff	main@t+1,___fladd@b+1	;volatile
  1712  0072F0  C038  F003         	movff	main@t+2,___fladd@b+2	;volatile
  1713  0072F4  C039  F004         	movff	main@t+3,___fladd@b+3	;volatile
  1714  0072F8  0E00               	movlw	0
  1715  0072FA  6E05               	movwf	___fladd@a^0,c
  1716  0072FC  0E00               	movlw	0
  1717  0072FE  6E06               	movwf	(___fladd@a+1)^0,c
  1718  007300  0E80               	movlw	128
  1719  007302  6E07               	movwf	(___fladd@a+2)^0,c
  1720  007304  0E3F               	movlw	63
  1721  007306  6E08               	movwf	(___fladd@a+3)^0,c
  1722  007308  ECCA  F034         	call	___fladd	;wreg free
  1723  00730C  C001  F036         	movff	?___fladd,main@t	;volatile
  1724  007310  C002  F037         	movff	?___fladd+1,main@t+1	;volatile
  1725  007314  C003  F038         	movff	?___fladd+2,main@t+2	;volatile
  1726  007318  C004  F039         	movff	?___fladd+3,main@t+3	;volatile
  1727  00731C  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1728  007320  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1729  007324  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1730  007328  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1731  00732C  0E00               	movlw	0
  1732  00732E  6E05               	movwf	___flge@ff2^0,c
  1733  007330  0EC0               	movlw	192
  1734  007332  6E06               	movwf	(___flge@ff2+1)^0,c
  1735  007334  0EDA               	movlw	218
  1736  007336  6E07               	movwf	(___flge@ff2+2)^0,c
  1737  007338  0E45               	movlw	69
  1738  00733A  6E08               	movwf	(___flge@ff2+3)^0,c
  1739  00733C  EC84  F02D         	call	___flge	;wreg free
  1740  007340  A0D8               	btfss	status,0,c
  1741  007342  EFA5  F039         	goto	u3701
  1742  007346  EFA7  F039         	goto	u3700
  1743  00734A                     u3701:
  1744  00734A  EF74  F039         	goto	l3396
  1745  00734E                     u3700:
  1746  00734E                     l3398:
  1747                           
  1748                           ;main.c: 320:                 slot = 3;
  1749  00734E  0E03               	movlw	3
  1750  007350  6E2F               	movwf	main@slot^0,c
  1751                           
  1752                           ;main.c: 321:                 break;
  1753  007352  EF59  F03A         	goto	l3440
  1754  007356                     l3400:
  1755                           
  1756                           ;main.c: 323:                 partida++;
  1757  007356  4A30               	infsnz	main@partida^0,f,c
  1758  007358  2A31               	incf	(main@partida+1)^0,f,c
  1759  00735A                     
  1760                           ;main.c: 324:                 lcdInit();
  1761  00735A  EC34  F02C         	call	_lcdInit	;wreg free
  1762  00735E                     
  1763                           ;main.c: 325:                 lcdString("Placar (Jogo: ");
  1764  00735E  0ED4               	movlw	low STR_48
  1765  007360  6E0F               	movwf	lcdString@msg^0,c
  1766  007362  0E7E               	movlw	high STR_48
  1767  007364  6E10               	movwf	(lcdString@msg+1)^0,c
  1768  007366  EC42  F02A         	call	_lcdString	;wreg free
  1769  00736A                     
  1770                           ;main.c: 326:                 lcdChar((partida % 100) + 48);
  1771  00736A  C030  F008         	movff	main@partida,___lwmod@dividend
  1772  00736E  C031  F009         	movff	main@partida+1,___lwmod@dividend+1
  1773  007372  0E00               	movlw	0
  1774  007374  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1775  007376  0E64               	movlw	100
  1776  007378  6E0A               	movwf	___lwmod@divisor^0,c
  1777  00737A  ECF1  F02A         	call	___lwmod	;wreg free
  1778  00737E  5008               	movf	?___lwmod^0,w,c
  1779  007380  0F30               	addlw	48
  1780  007382  EC5E  F029         	call	_lcdChar
  1781  007386                     
  1782                           ;main.c: 327:                 lcdString(") ");
  1783  007386  0EFB               	movlw	low STR_49
  1784  007388  6E0F               	movwf	lcdString@msg^0,c
  1785  00738A  0E7F               	movlw	high STR_49
  1786  00738C  6E10               	movwf	(lcdString@msg+1)^0,c
  1787  00738E  EC42  F02A         	call	_lcdString	;wreg free
  1788  007392                     
  1789                           ;main.c: 328:                 lcdCommand(0xC0);
  1790  007392  0EC0               	movlw	192
  1791  007394  EC4F  F029         	call	_lcdCommand
  1792  007398                     
  1793                           ;main.c: 329:                 lcdString("[J1]x[J2]:");
  1794  007398  0EDA               	movlw	low STR_50
  1795  00739A  6E0F               	movwf	lcdString@msg^0,c
  1796  00739C  0E7F               	movlw	high STR_50
  1797  00739E  6E10               	movwf	(lcdString@msg+1)^0,c
  1798  0073A0  EC42  F02A         	call	_lcdString	;wreg free
  1799  0073A4                     
  1800                           ;main.c: 330:                 for (t = 0; t < 500; t++) {
  1801  0073A4  0E00               	movlw	0
  1802  0073A6  6E36               	movwf	main@t^0,c	;volatile
  1803  0073A8  0E00               	movlw	0
  1804  0073AA  6E37               	movwf	(main@t+1)^0,c	;volatile
  1805  0073AC  0E00               	movlw	0
  1806  0073AE  6E38               	movwf	(main@t+2)^0,c	;volatile
  1807  0073B0  0E00               	movlw	0
  1808  0073B2  6E39               	movwf	(main@t+3)^0,c	;volatile
  1809  0073B4  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1810  0073B8  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1811  0073BC  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1812  0073C0  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1813  0073C4  0E00               	movlw	0
  1814  0073C6  6E05               	movwf	___flge@ff2^0,c
  1815  0073C8  0E00               	movlw	0
  1816  0073CA  6E06               	movwf	(___flge@ff2+1)^0,c
  1817  0073CC  0EFA               	movlw	250
  1818  0073CE  6E07               	movwf	(___flge@ff2+2)^0,c
  1819  0073D0  0E43               	movlw	67
  1820  0073D2  6E08               	movwf	(___flge@ff2+3)^0,c
  1821  0073D4  EC84  F02D         	call	___flge	;wreg free
  1822  0073D8  A0D8               	btfss	status,0,c
  1823  0073DA  EFF1  F039         	goto	u3711
  1824  0073DE  EFF3  F039         	goto	u3710
  1825  0073E2                     u3711:
  1826  0073E2  EFF5  F039         	goto	l3420
  1827  0073E6                     u3710:
  1828  0073E6  EF32  F03A         	goto	l3426
  1829  0073EA                     l3420:
  1830                           
  1831                           ;main.c: 331:                     Placar(c1, c2);
  1832  0073EA  C028  F00F         	movff	main@c1,Placar@c1
  1833  0073EE  C029  F010         	movff	main@c1+1,Placar@c1+1
  1834  0073F2  C02A  F011         	movff	main@c2,Placar@c2
  1835  0073F6  C02B  F012         	movff	main@c2+1,Placar@c2+1
  1836  0073FA  ECE1  F02B         	call	_Placar	;wreg free
  1837  0073FE                     
  1838                           ;main.c: 332:                 }
  1839  0073FE  C036  F001         	movff	main@t,___fladd@b	;volatile
  1840  007402  C037  F002         	movff	main@t+1,___fladd@b+1	;volatile
  1841  007406  C038  F003         	movff	main@t+2,___fladd@b+2	;volatile
  1842  00740A  C039  F004         	movff	main@t+3,___fladd@b+3	;volatile
  1843  00740E  0E00               	movlw	0
  1844  007410  6E05               	movwf	___fladd@a^0,c
  1845  007412  0E00               	movlw	0
  1846  007414  6E06               	movwf	(___fladd@a+1)^0,c
  1847  007416  0E80               	movlw	128
  1848  007418  6E07               	movwf	(___fladd@a+2)^0,c
  1849  00741A  0E3F               	movlw	63
  1850  00741C  6E08               	movwf	(___fladd@a+3)^0,c
  1851  00741E  ECCA  F034         	call	___fladd	;wreg free
  1852  007422  C001  F036         	movff	?___fladd,main@t	;volatile
  1853  007426  C002  F037         	movff	?___fladd+1,main@t+1	;volatile
  1854  00742A  C003  F038         	movff	?___fladd+2,main@t+2	;volatile
  1855  00742E  C004  F039         	movff	?___fladd+3,main@t+3	;volatile
  1856  007432  C036  F001         	movff	main@t,___flge@ff1	;volatile
  1857  007436  C037  F002         	movff	main@t+1,___flge@ff1+1	;volatile
  1858  00743A  C038  F003         	movff	main@t+2,___flge@ff1+2	;volatile
  1859  00743E  C039  F004         	movff	main@t+3,___flge@ff1+3	;volatile
  1860  007442  0E00               	movlw	0
  1861  007444  6E05               	movwf	___flge@ff2^0,c
  1862  007446  0E00               	movlw	0
  1863  007448  6E06               	movwf	(___flge@ff2+1)^0,c
  1864  00744A  0EFA               	movlw	250
  1865  00744C  6E07               	movwf	(___flge@ff2+2)^0,c
  1866  00744E  0E43               	movlw	67
  1867  007450  6E08               	movwf	(___flge@ff2+3)^0,c
  1868  007452  EC84  F02D         	call	___flge	;wreg free
  1869  007456  A0D8               	btfss	status,0,c
  1870  007458  EF30  F03A         	goto	u3721
  1871  00745C  EF32  F03A         	goto	u3720
  1872  007460                     u3721:
  1873  007460  EFF5  F039         	goto	l3420
  1874  007464                     u3720:
  1875  007464                     l3426:
  1876                           
  1877                           ;main.c: 333:                 slot = 4;
  1878  007464  0E04               	movlw	4
  1879  007466  6E2F               	movwf	main@slot^0,c
  1880                           
  1881                           ;main.c: 334:                 break;
  1882  007468  EF59  F03A         	goto	l3440
  1883  00746C                     l394:
  1884                           
  1885                           ;main.c: 336:                 PORTD = partida;
  1886  00746C  C030  FF83         	movff	main@partida,3971	;volatile
  1887  007470                     
  1888                           ;main.c: 337:                 slot = 5;
  1889  007470  0E05               	movlw	5
  1890  007472  6E2F               	movwf	main@slot^0,c
  1891                           
  1892                           ;main.c: 338:                 break;
  1893  007474  EF59  F03A         	goto	l3440
  1894  007478                     l3430:
  1895                           
  1896                           ;main.c: 340:                 if (partida >= final) {
  1897  007478  5026               	movf	main@final^0,w,c
  1898  00747A  5C30               	subwf	main@partida^0,w,c
  1899  00747C  5027               	movf	(main@final+1)^0,w,c
  1900  00747E  5831               	subwfb	(main@partida+1)^0,w,c
  1901  007480  A0D8               	btfss	status,0,c
  1902  007482  EF45  F03A         	goto	u3731
  1903  007486  EF47  F03A         	goto	u3730
  1904  00748A                     u3731:
  1905  00748A  EF53  F03A         	goto	l3434
  1906  00748E                     u3730:
  1907  00748E                     
  1908                           ;main.c: 341:                     FimDeJogo(c1, c2);
  1909  00748E  C028  F015         	movff	main@c1,FimDeJogo@c1
  1910  007492  C029  F016         	movff	main@c1+1,FimDeJogo@c1+1
  1911  007496  C02A  F017         	movff	main@c2,FimDeJogo@c2
  1912  00749A  C02B  F018         	movff	main@c2+1,FimDeJogo@c2+1
  1913  00749E  EC06  F02E         	call	_FimDeJogo	;wreg free
  1914                           
  1915                           ;main.c: 342:                 } else {
  1916  0074A2  EF59  F03A         	goto	l3440
  1917  0074A6                     l3434:
  1918                           
  1919                           ;main.c: 343:                     slot = 6;
  1920  0074A6  0E06               	movlw	6
  1921  0074A8  6E2F               	movwf	main@slot^0,c
  1922  0074AA  EF59  F03A         	goto	l3440
  1923  0074AE                     l3436:
  1924                           
  1925                           ;main.c: 347:                 slot = 0;
  1926  0074AE  0E00               	movlw	0
  1927  0074B0  6E2F               	movwf	main@slot^0,c
  1928  0074B2                     l3440:
  1929  0074B2  502F               	movf	main@slot^0,w,c
  1930  0074B4  6E21               	movwf	??_main^0,c
  1931  0074B6  6A22               	clrf	(??_main+1)^0,c
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ;	Chosen strategy is simple_byte
  1940  0074B8  5022               	movf	(??_main+1)^0,w,c
  1941  0074BA  0A00               	xorlw	0	; case 0
  1942  0074BC  B4D8               	btfsc	status,2,c
  1943  0074BE  EF63  F03A         	goto	l3466
  1944  0074C2  EF57  F03A         	goto	l3436
  1945  0074C6                     l3466:
  1946                           
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 6, Range of values is 0 to 5
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           19    10 (average)
  1952                           ;	Chosen strategy is simple_byte
  1953  0074C6  5021               	movf	??_main^0,w,c
  1954  0074C8  0A00               	xorlw	0	; case 0
  1955  0074CA  B4D8               	btfsc	status,2,c
  1956  0074CC  EFC7  F037         	goto	l3296
  1957  0074D0  0A01               	xorlw	1	; case 1
  1958  0074D2  B4D8               	btfsc	status,2,c
  1959  0074D4  EF7D  F038         	goto	l3338
  1960  0074D8  0A03               	xorlw	3	; case 2
  1961  0074DA  B4D8               	btfsc	status,2,c
  1962  0074DC  EF33  F039         	goto	l3380
  1963  0074E0  0A01               	xorlw	1	; case 3
  1964  0074E2  B4D8               	btfsc	status,2,c
  1965  0074E4  EFAB  F039         	goto	l3400
  1966  0074E8  0A07               	xorlw	7	; case 4
  1967  0074EA  B4D8               	btfsc	status,2,c
  1968  0074EC  EF36  F03A         	goto	l394
  1969  0074F0  0A01               	xorlw	1	; case 5
  1970  0074F2  B4D8               	btfsc	status,2,c
  1971  0074F4  EF3C  F03A         	goto	l3430
  1972  0074F8  EF57  F03A         	goto	l3436
  1973  0074FC  EF00  F000         	goto	start
  1974  007500                     __end_of_main:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _ssdInit *****************
  1978 ;; Defined at:
  1979 ;;		line 94 in file "ssd.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1993 ;;      Params:         0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		_pinMode
  2002 ;;		_soInit
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text1
  2009  0054DA                     __ptext1:
  2010                           	callstack 0
  2011  0054DA                     _ssdInit:
  2012                           	callstack 28
  2013  0054DA                     
  2014                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  2015  0054DA  0E00               	movlw	0
  2016  0054DC  6E02               	movwf	(pinMode@pin+1)^0,c
  2017  0054DE  0E18               	movlw	24
  2018  0054E0  6E01               	movwf	pinMode@pin^0,c
  2019  0054E2  0E00               	movlw	0
  2020  0054E4  6E04               	movwf	(pinMode@type+1)^0,c
  2021  0054E6  0E00               	movlw	0
  2022  0054E8  6E03               	movwf	pinMode@type^0,c
  2023  0054EA  ECA3  F033         	call	_pinMode	;wreg free
  2024                           
  2025                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  2026  0054EE  0E00               	movlw	0
  2027  0054F0  6E02               	movwf	(pinMode@pin+1)^0,c
  2028  0054F2  0E19               	movlw	25
  2029  0054F4  6E01               	movwf	pinMode@pin^0,c
  2030  0054F6  0E00               	movlw	0
  2031  0054F8  6E04               	movwf	(pinMode@type+1)^0,c
  2032  0054FA  0E00               	movlw	0
  2033  0054FC  6E03               	movwf	pinMode@type^0,c
  2034  0054FE  ECA3  F033         	call	_pinMode	;wreg free
  2035                           
  2036                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  2037  005502  0E00               	movlw	0
  2038  005504  6E02               	movwf	(pinMode@pin+1)^0,c
  2039  005506  0E1A               	movlw	26
  2040  005508  6E01               	movwf	pinMode@pin^0,c
  2041  00550A  0E00               	movlw	0
  2042  00550C  6E04               	movwf	(pinMode@type+1)^0,c
  2043  00550E  0E00               	movlw	0
  2044  005510  6E03               	movwf	pinMode@type^0,c
  2045  005512  ECA3  F033         	call	_pinMode	;wreg free
  2046                           
  2047                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  2048  005516  0E00               	movlw	0
  2049  005518  6E02               	movwf	(pinMode@pin+1)^0,c
  2050  00551A  0E1B               	movlw	27
  2051  00551C  6E01               	movwf	pinMode@pin^0,c
  2052  00551E  0E00               	movlw	0
  2053  005520  6E04               	movwf	(pinMode@type+1)^0,c
  2054  005522  0E00               	movlw	0
  2055  005524  6E03               	movwf	pinMode@type^0,c
  2056  005526  ECA3  F033         	call	_pinMode	;wreg free
  2057                           
  2058                           ;ssd.c: 102:     soInit();
  2059  00552A  ECDB  F029         	call	_soInit	;wreg free
  2060  00552E  0012               	return		;funcret
  2061  005530                     __end_of_ssdInit:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _kpInit *****************
  2065 ;; Defined at:
  2066 ;;		line 54 in file "keypad.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 2
  2087 ;; This function calls:
  2088 ;;		_pinMode
  2089 ;;		_soInit
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text2
  2096  005384                     __ptext2:
  2097                           	callstack 0
  2098  005384                     _kpInit:
  2099                           	callstack 28
  2100  005384                     
  2101                           ;keypad.c: 55:   soInit();
  2102  005384  ECDB  F029         	call	_soInit	;wreg free
  2103                           
  2104                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2105  005388  0E00               	movlw	0
  2106  00538A  6E02               	movwf	(pinMode@pin+1)^0,c
  2107  00538C  0E0A               	movlw	10
  2108  00538E  6E01               	movwf	pinMode@pin^0,c
  2109  005390  0E00               	movlw	0
  2110  005392  6E04               	movwf	(pinMode@type+1)^0,c
  2111  005394  0E01               	movlw	1
  2112  005396  6E03               	movwf	pinMode@type^0,c
  2113  005398  ECA3  F033         	call	_pinMode	;wreg free
  2114                           
  2115                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2116  00539C  0E00               	movlw	0
  2117  00539E  6E02               	movwf	(pinMode@pin+1)^0,c
  2118  0053A0  0E09               	movlw	9
  2119  0053A2  6E01               	movwf	pinMode@pin^0,c
  2120  0053A4  0E00               	movlw	0
  2121  0053A6  6E04               	movwf	(pinMode@type+1)^0,c
  2122  0053A8  0E01               	movlw	1
  2123  0053AA  6E03               	movwf	pinMode@type^0,c
  2124  0053AC  ECA3  F033         	call	_pinMode	;wreg free
  2125  0053B0                     
  2126                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2127  0053B0  0E0C               	movlw	12
  2128  0053B2  6EC1               	movwf	193,c	;volatile
  2129  0053B4  0012               	return		;funcret
  2130  0053B6                     __end_of_kpInit:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _Versus *****************
  2134 ;; Defined at:
  2135 ;;		line 160 in file "main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  j1              1    wreg     unsigned char 
  2138 ;;  j2              1   20[COMRAM] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  j1              1   23[COMRAM] unsigned char 
  2141 ;;  t               4    0        float 
  2142 ;;  v2              1   25[COMRAM] unsigned char 
  2143 ;;  v1              1   24[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      unsigned char 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2153 ;;      Params:         1       0       0       0       0       0       0
  2154 ;;      Locals:         3       0       0       0       0       0       0
  2155 ;;      Temps:          2       0       0       0       0       0       0
  2156 ;;      Totals:         6       0       0       0       0       0       0
  2157 ;;Total ram usage:        6 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 6
  2160 ;; This function calls:
  2161 ;;		_Jogada
  2162 ;;		_lcdChar
  2163 ;;		_lcdCommand
  2164 ;;		_lcdInit
  2165 ;;		_lcdString
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text3
  2172  0062E8                     __ptext3:
  2173                           	callstack 0
  2174  0062E8                     _Versus:
  2175                           	callstack 24
  2176                           
  2177                           ;incstack = 0
  2178                           ;Versus@j1 stored from wreg
  2179  0062E8  6E18               	movwf	Versus@j1^0,c
  2180  0062EA                     
  2181                           ;main.c: 161:     char v1, v2;;main.c: 162:     float t;;main.c: 163:     v1 = Jogada(j1
      +                          );
  2182  0062EA  5018               	movf	Versus@j1^0,w,c
  2183  0062EC  EC99  F02B         	call	_Jogada
  2184  0062F0  6E19               	movwf	Versus@v1^0,c
  2185                           
  2186                           ;main.c: 164:     v2 = Jogada(j2);
  2187  0062F2  5015               	movf	Versus@j2^0,w,c
  2188  0062F4  EC99  F02B         	call	_Jogada
  2189  0062F8  6E1A               	movwf	Versus@v2^0,c
  2190                           
  2191                           ;main.c: 165:     lcdInit();
  2192  0062FA  EC34  F02C         	call	_lcdInit	;wreg free
  2193                           
  2194                           ;main.c: 166:     lcdCommand(0x80);
  2195  0062FE  0E80               	movlw	128
  2196  006300  EC4F  F029         	call	_lcdCommand
  2197  006304                     
  2198                           ;main.c: 167:     lcdString("J1: ");
  2199  006304  0EF6               	movlw	low STR_28
  2200  006306  6E0F               	movwf	lcdString@msg^0,c
  2201  006308  0E7F               	movlw	high STR_28
  2202  00630A  6E10               	movwf	(lcdString@msg+1)^0,c
  2203  00630C  EC42  F02A         	call	_lcdString	;wreg free
  2204  006310                     
  2205                           ;main.c: 168:     lcdChar(v1);
  2206  006310  5019               	movf	Versus@v1^0,w,c
  2207  006312  EC5E  F029         	call	_lcdChar
  2208                           
  2209                           ;main.c: 169:     lcdString("  ||  J2: ");
  2210  006316  0EA3               	movlw	low STR_29
  2211  006318  6E0F               	movwf	lcdString@msg^0,c
  2212  00631A  0E7F               	movlw	high STR_29
  2213  00631C  6E10               	movwf	(lcdString@msg+1)^0,c
  2214  00631E  EC42  F02A         	call	_lcdString	;wreg free
  2215  006322                     
  2216                           ;main.c: 170:     lcdChar(v2);
  2217  006322  501A               	movf	Versus@v2^0,w,c
  2218  006324  EC5E  F029         	call	_lcdChar
  2219  006328                     
  2220                           ;main.c: 171:     if (v1 == v2) {
  2221  006328  501A               	movf	Versus@v2^0,w,c
  2222  00632A  1819               	xorwf	Versus@v1^0,w,c
  2223  00632C  A4D8               	btfss	status,2,c
  2224  00632E  EF9B  F031         	goto	u3361
  2225  006332  EF9D  F031         	goto	u3360
  2226  006336                     u3361:
  2227  006336  EFA9  F031         	goto	l3130
  2228  00633A                     u3360:
  2229  00633A                     
  2230                           ;main.c: 172:         lcdCommand(0xC0);
  2231  00633A  0EC0               	movlw	192
  2232  00633C  EC4F  F029         	call	_lcdCommand
  2233  006340                     
  2234                           ;main.c: 173:         lcdString("Empate!");
  2235  006340  0EEE               	movlw	low STR_30
  2236  006342  6E0F               	movwf	lcdString@msg^0,c
  2237  006344  0E7F               	movlw	high STR_30
  2238  006346  6E10               	movwf	(lcdString@msg+1)^0,c
  2239  006348  EC42  F02A         	call	_lcdString	;wreg free
  2240  00634C                     
  2241                           ;main.c: 174:         return '0';
  2242  00634C  0E30               	movlw	48
  2243  00634E  EF7B  F032         	goto	l323
  2244  006352                     l3130:
  2245                           
  2246                           ;main.c: 176:         lcdCommand(0xC0);
  2247  006352  0EC0               	movlw	192
  2248  006354  EC4F  F029         	call	_lcdCommand
  2249                           
  2250                           ;main.c: 177:         switch (v1) {
  2251  006358  EF5A  F032         	goto	l3224
  2252  00635C                     l3132:
  2253                           
  2254                           ;main.c: 179:                 if (v2 == 'T' || v2 == 'L') {
  2255  00635C  0E54               	movlw	84
  2256  00635E  181A               	xorwf	Versus@v2^0,w,c
  2257  006360  B4D8               	btfsc	status,2,c
  2258  006362  EFB5  F031         	goto	u3371
  2259  006366  EFB7  F031         	goto	u3370
  2260  00636A                     u3371:
  2261  00636A  EFC0  F031         	goto	l3136
  2262  00636E                     u3370:
  2263  00636E  0E4C               	movlw	76
  2264  006370  181A               	xorwf	Versus@v2^0,w,c
  2265  006372  A4D8               	btfss	status,2,c
  2266  006374  EFBE  F031         	goto	u3381
  2267  006378  EFC0  F031         	goto	u3380
  2268  00637C                     u3381:
  2269  00637C  EFC9  F031         	goto	l3144
  2270  006380                     u3380:
  2271  006380                     l3136:
  2272                           
  2273                           ;main.c: 180:                     lcdString("J1 venceu!");
  2274  006380  0EC4               	movlw	low STR_31
  2275  006382  6E0F               	movwf	lcdString@msg^0,c
  2276  006384  0E7F               	movlw	high STR_31
  2277  006386  6E10               	movwf	(lcdString@msg+1)^0,c
  2278  006388  EC42  F02A         	call	_lcdString	;wreg free
  2279  00638C                     l3138:
  2280                           
  2281                           ;main.c: 181:                     return '1';
  2282  00638C  0E31               	movlw	49
  2283  00638E  EF7B  F032         	goto	l323
  2284  006392                     l3144:
  2285                           
  2286                           ;main.c: 183:                     lcdString("J2 venceu!");
  2287  006392  0ECF               	movlw	low STR_32
  2288  006394  6E0F               	movwf	lcdString@msg^0,c
  2289  006396  0E7F               	movlw	high STR_32
  2290  006398  6E10               	movwf	(lcdString@msg+1)^0,c
  2291  00639A  EC42  F02A         	call	_lcdString	;wreg free
  2292  00639E                     l3146:
  2293                           
  2294                           ;main.c: 184:                     return '2';
  2295  00639E  0E32               	movlw	50
  2296  0063A0  EF7B  F032         	goto	l323
  2297  0063A4                     l3150:
  2298                           
  2299                           ;main.c: 188:                 if (v2 == 'P' || v2 == 'S') {
  2300  0063A4  0E50               	movlw	80
  2301  0063A6  181A               	xorwf	Versus@v2^0,w,c
  2302  0063A8  B4D8               	btfsc	status,2,c
  2303  0063AA  EFD9  F031         	goto	u3391
  2304  0063AE  EFDB  F031         	goto	u3390
  2305  0063B2                     u3391:
  2306  0063B2  EFE4  F031         	goto	l3154
  2307  0063B6                     u3390:
  2308  0063B6  0E53               	movlw	83
  2309  0063B8  181A               	xorwf	Versus@v2^0,w,c
  2310  0063BA  A4D8               	btfss	status,2,c
  2311  0063BC  EFE2  F031         	goto	u3401
  2312  0063C0  EFE4  F031         	goto	u3400
  2313  0063C4                     u3401:
  2314  0063C4  EFEC  F031         	goto	l3162
  2315  0063C8                     u3400:
  2316  0063C8                     l3154:
  2317                           
  2318                           ;main.c: 189:                     lcdString("J1 venceu!");
  2319  0063C8  0EC4               	movlw	low STR_31
  2320  0063CA  6E0F               	movwf	lcdString@msg^0,c
  2321  0063CC  0E7F               	movlw	high STR_31
  2322  0063CE  6E10               	movwf	(lcdString@msg+1)^0,c
  2323  0063D0  EC42  F02A         	call	_lcdString	;wreg free
  2324  0063D4  EFC6  F031         	goto	l3138
  2325  0063D8                     l3162:
  2326                           
  2327                           ;main.c: 192:                     lcdString("J2 venceu!");
  2328  0063D8  0ECF               	movlw	low STR_32
  2329  0063DA  6E0F               	movwf	lcdString@msg^0,c
  2330  0063DC  0E7F               	movlw	high STR_32
  2331  0063DE  6E10               	movwf	(lcdString@msg+1)^0,c
  2332  0063E0  EC42  F02A         	call	_lcdString	;wreg free
  2333  0063E4  EFCF  F031         	goto	l3146
  2334  0063E8                     l3168:
  2335                           
  2336                           ;main.c: 197:                 if (v2 == 'p' || v2 == 'L') {
  2337  0063E8  0E70               	movlw	112
  2338  0063EA  181A               	xorwf	Versus@v2^0,w,c
  2339  0063EC  B4D8               	btfsc	status,2,c
  2340  0063EE  EFFB  F031         	goto	u3411
  2341  0063F2  EFFD  F031         	goto	u3410
  2342  0063F6                     u3411:
  2343  0063F6  EF06  F032         	goto	l3172
  2344  0063FA                     u3410:
  2345  0063FA  0E4C               	movlw	76
  2346  0063FC  181A               	xorwf	Versus@v2^0,w,c
  2347  0063FE  A4D8               	btfss	status,2,c
  2348  006400  EF04  F032         	goto	u3421
  2349  006404  EF06  F032         	goto	u3420
  2350  006408                     u3421:
  2351  006408  EF0E  F032         	goto	l3180
  2352  00640C                     u3420:
  2353  00640C                     l3172:
  2354                           
  2355                           ;main.c: 198:                     lcdString("J1 venceu!");
  2356  00640C  0EC4               	movlw	low STR_31
  2357  00640E  6E0F               	movwf	lcdString@msg^0,c
  2358  006410  0E7F               	movlw	high STR_31
  2359  006412  6E10               	movwf	(lcdString@msg+1)^0,c
  2360  006414  EC42  F02A         	call	_lcdString	;wreg free
  2361  006418  EFC6  F031         	goto	l3138
  2362  00641C                     l3180:
  2363                           
  2364                           ;main.c: 201:                     lcdString("J2 venceu!");
  2365  00641C  0ECF               	movlw	low STR_32
  2366  00641E  6E0F               	movwf	lcdString@msg^0,c
  2367  006420  0E7F               	movlw	high STR_32
  2368  006422  6E10               	movwf	(lcdString@msg+1)^0,c
  2369  006424  EC42  F02A         	call	_lcdString	;wreg free
  2370  006428  EFCF  F031         	goto	l3146
  2371  00642C                     l3186:
  2372                           
  2373                           ;main.c: 206:                 if (v2 == 'P' || v2 == 'T') {
  2374  00642C  0E50               	movlw	80
  2375  00642E  181A               	xorwf	Versus@v2^0,w,c
  2376  006430  B4D8               	btfsc	status,2,c
  2377  006432  EF1D  F032         	goto	u3431
  2378  006436  EF1F  F032         	goto	u3430
  2379  00643A                     u3431:
  2380  00643A  EF28  F032         	goto	l3190
  2381  00643E                     u3430:
  2382  00643E  0E54               	movlw	84
  2383  006440  181A               	xorwf	Versus@v2^0,w,c
  2384  006442  A4D8               	btfss	status,2,c
  2385  006444  EF26  F032         	goto	u3441
  2386  006448  EF28  F032         	goto	u3440
  2387  00644C                     u3441:
  2388  00644C  EF30  F032         	goto	l3198
  2389  006450                     u3440:
  2390  006450                     l3190:
  2391                           
  2392                           ;main.c: 207:                     lcdString("J1 venceu!");
  2393  006450  0EC4               	movlw	low STR_31
  2394  006452  6E0F               	movwf	lcdString@msg^0,c
  2395  006454  0E7F               	movlw	high STR_31
  2396  006456  6E10               	movwf	(lcdString@msg+1)^0,c
  2397  006458  EC42  F02A         	call	_lcdString	;wreg free
  2398  00645C  EFC6  F031         	goto	l3138
  2399  006460                     l3198:
  2400                           
  2401                           ;main.c: 210:                     lcdString("J2 venceu!");
  2402  006460  0ECF               	movlw	low STR_32
  2403  006462  6E0F               	movwf	lcdString@msg^0,c
  2404  006464  0E7F               	movlw	high STR_32
  2405  006466  6E10               	movwf	(lcdString@msg+1)^0,c
  2406  006468  EC42  F02A         	call	_lcdString	;wreg free
  2407  00646C  EFCF  F031         	goto	l3146
  2408  006470                     l3204:
  2409                           
  2410                           ;main.c: 215:                 if (v2 == 'p' || v2 == 'S') {
  2411  006470  0E70               	movlw	112
  2412  006472  181A               	xorwf	Versus@v2^0,w,c
  2413  006474  B4D8               	btfsc	status,2,c
  2414  006476  EF3F  F032         	goto	u3451
  2415  00647A  EF41  F032         	goto	u3450
  2416  00647E                     u3451:
  2417  00647E  EF4A  F032         	goto	l3208
  2418  006482                     u3450:
  2419  006482  0E53               	movlw	83
  2420  006484  181A               	xorwf	Versus@v2^0,w,c
  2421  006486  A4D8               	btfss	status,2,c
  2422  006488  EF48  F032         	goto	u3461
  2423  00648C  EF4A  F032         	goto	u3460
  2424  006490                     u3461:
  2425  006490  EF52  F032         	goto	l3216
  2426  006494                     u3460:
  2427  006494                     l3208:
  2428                           
  2429                           ;main.c: 216:                     lcdString("J1 venceu!");
  2430  006494  0EC4               	movlw	low STR_31
  2431  006496  6E0F               	movwf	lcdString@msg^0,c
  2432  006498  0E7F               	movlw	high STR_31
  2433  00649A  6E10               	movwf	(lcdString@msg+1)^0,c
  2434  00649C  EC42  F02A         	call	_lcdString	;wreg free
  2435  0064A0  EFC6  F031         	goto	l3138
  2436  0064A4                     l3216:
  2437                           
  2438                           ;main.c: 219:                     lcdString("J2 venceu!");
  2439  0064A4  0ECF               	movlw	low STR_32
  2440  0064A6  6E0F               	movwf	lcdString@msg^0,c
  2441  0064A8  0E7F               	movlw	high STR_32
  2442  0064AA  6E10               	movwf	(lcdString@msg+1)^0,c
  2443  0064AC  EC42  F02A         	call	_lcdString	;wreg free
  2444  0064B0  EFCF  F031         	goto	l3146
  2445  0064B4                     l3224:
  2446  0064B4  5019               	movf	Versus@v1^0,w,c
  2447  0064B6  6E16               	movwf	??_Versus^0,c
  2448  0064B8  6A17               	clrf	(??_Versus+1)^0,c
  2449                           
  2450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 1, Range of values is 0 to 0
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte            4     3 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457  0064BA  5017               	movf	(??_Versus+1)^0,w,c
  2458  0064BC  0A00               	xorlw	0	; case 0
  2459  0064BE  B4D8               	btfsc	status,2,c
  2460  0064C0  EF64  F032         	goto	l3468
  2461  0064C4  EF7B  F032         	goto	l323
  2462  0064C8                     l3468:
  2463                           
  2464                           ; Switch size 1, requested type "simple"
  2465                           ; Number of cases is 5, Range of values is 76 to 112
  2466                           ; switch strategies available:
  2467                           ; Name         Instructions Cycles
  2468                           ; simple_byte           16     9 (average)
  2469                           ;	Chosen strategy is simple_byte
  2470  0064C8  5016               	movf	??_Versus^0,w,c
  2471  0064CA  0A4C               	xorlw	76	; case 76
  2472  0064CC  B4D8               	btfsc	status,2,c
  2473  0064CE  EF38  F032         	goto	l3204
  2474  0064D2  0A1C               	xorlw	28	; case 80
  2475  0064D4  B4D8               	btfsc	status,2,c
  2476  0064D6  EFAE  F031         	goto	l3132
  2477  0064DA  0A03               	xorlw	3	; case 83
  2478  0064DC  B4D8               	btfsc	status,2,c
  2479  0064DE  EF16  F032         	goto	l3186
  2480  0064E2  0A07               	xorlw	7	; case 84
  2481  0064E4  B4D8               	btfsc	status,2,c
  2482  0064E6  EFF4  F031         	goto	l3168
  2483  0064EA  0A24               	xorlw	36	; case 112
  2484  0064EC  B4D8               	btfsc	status,2,c
  2485  0064EE  EFD2  F031         	goto	l3150
  2486  0064F2  EF7B  F032         	goto	l323
  2487  0064F6                     l323:
  2488  0064F6  0012               	return		;funcret
  2489  0064F8                     __end_of_Versus:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _Jogada *****************
  2493 ;; Defined at:
  2494 ;;		line 125 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  j               1    wreg     unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  j               1    2[COMRAM] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2508 ;;      Params:         0       0       0       0       0       0       0
  2509 ;;      Locals:         1       0       0       0       0       0       0
  2510 ;;      Temps:          2       0       0       0       0       0       0
  2511 ;;      Totals:         3       0       0       0       0       0       0
  2512 ;;Total ram usage:        3 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_Versus
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text4
  2522  005732                     __ptext4:
  2523                           	callstack 0
  2524  005732                     _Jogada:
  2525                           	callstack 29
  2526                           
  2527                           ;incstack = 0
  2528                           ;Jogada@j stored from wreg
  2529  005732  6E03               	movwf	Jogada@j^0,c
  2530  005734                     
  2531                           ;main.c: 126:     switch (j) {
  2532  005734  EFAB  F02B         	goto	l1468
  2533  005738                     l1406:
  2534                           
  2535                           ;main.c: 128:             return 'p';
  2536  005738  0E70               	movlw	112
  2537  00573A  EFE0  F02B         	goto	l309
  2538  00573E                     l1412:
  2539                           
  2540                           ;main.c: 131:             return 'P';
  2541  00573E  0E50               	movlw	80
  2542  005740  EFE0  F02B         	goto	l309
  2543  005744                     l1418:
  2544                           
  2545                           ;main.c: 134:             return 'L';
  2546  005744  0E4C               	movlw	76
  2547  005746  EFE0  F02B         	goto	l309
  2548  00574A                     l1424:
  2549                           
  2550                           ;main.c: 137:             return 'T';
  2551  00574A  0E54               	movlw	84
  2552  00574C  EFE0  F02B         	goto	l309
  2553  005750                     l1430:
  2554                           
  2555                           ;main.c: 140:             return 'S';
  2556  005750  0E53               	movlw	83
  2557  005752  EFE0  F02B         	goto	l309
  2558  005756                     l1468:
  2559  005756  5003               	movf	Jogada@j^0,w,c
  2560  005758  6E01               	movwf	??_Jogada^0,c
  2561  00575A  6A02               	clrf	(??_Jogada+1)^0,c
  2562                           
  2563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2564                           ; Switch size 1, requested type "simple"
  2565                           ; Number of cases is 1, Range of values is 0 to 0
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte            4     3 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570  00575C  5002               	movf	(??_Jogada+1)^0,w,c
  2571  00575E  0A00               	xorlw	0	; case 0
  2572  005760  B4D8               	btfsc	status,2,c
  2573  005762  EFB5  F02B         	goto	l3470
  2574  005766  EFE0  F02B         	goto	l309
  2575  00576A                     l3470:
  2576                           
  2577                           ; Switch size 1, requested type "simple"
  2578                           ; Number of cases is 10, Range of values is 65 to 115
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte           31    16 (average)
  2582                           ;	Chosen strategy is simple_byte
  2583  00576A  5001               	movf	??_Jogada^0,w,c
  2584  00576C  0A41               	xorlw	65	; case 65
  2585  00576E  B4D8               	btfsc	status,2,c
  2586  005770  EFA5  F02B         	goto	l1424
  2587  005774  0A03               	xorlw	3	; case 66
  2588  005776  B4D8               	btfsc	status,2,c
  2589  005778  EFA2  F02B         	goto	l1418
  2590  00577C  0A06               	xorlw	6	; case 68
  2591  00577E  B4D8               	btfsc	status,2,c
  2592  005780  EFA2  F02B         	goto	l1418
  2593  005784  0A08               	xorlw	8	; case 76
  2594  005786  B4D8               	btfsc	status,2,c
  2595  005788  EF9F  F02B         	goto	l1412
  2596  00578C  0A1E               	xorlw	30	; case 82
  2597  00578E  B4D8               	btfsc	status,2,c
  2598  005790  EFA5  F02B         	goto	l1424
  2599  005794  0A01               	xorlw	1	; case 83
  2600  005796  B4D8               	btfsc	status,2,c
  2601  005798  EFA8  F02B         	goto	l1430
  2602  00579C  0A06               	xorlw	6	; case 85
  2603  00579E  B4D8               	btfsc	status,2,c
  2604  0057A0  EF9C  F02B         	goto	l1406
  2605  0057A4  0A0D               	xorlw	13	; case 88
  2606  0057A6  B4D8               	btfsc	status,2,c
  2607  0057A8  EF9C  F02B         	goto	l1406
  2608  0057AC  0A01               	xorlw	1	; case 89
  2609  0057AE  B4D8               	btfsc	status,2,c
  2610  0057B0  EF9F  F02B         	goto	l1412
  2611  0057B4  0A2A               	xorlw	42	; case 115
  2612  0057B6  B4D8               	btfsc	status,2,c
  2613  0057B8  EFA8  F02B         	goto	l1430
  2614  0057BC  EFE0  F02B         	goto	l309
  2615  0057C0                     l309:
  2616  0057C0  0012               	return		;funcret
  2617  0057C2                     __end_of_Jogada:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _Start *****************
  2621 ;; Defined at:
  2622 ;;		line 13 in file "main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  t               4   20[COMRAM] float 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2636 ;;      Params:         0       0       0       0       0       0       0
  2637 ;;      Locals:         4       0       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0
  2639 ;;      Totals:         4       0       0       0       0       0       0
  2640 ;;Total ram usage:        4 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 6
  2643 ;; This function calls:
  2644 ;;		___fladd
  2645 ;;		___flge
  2646 ;;		_lcdCommand
  2647 ;;		_lcdInit
  2648 ;;		_lcdString
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text5
  2655  007500                     __ptext5:
  2656                           	callstack 0
  2657  007500                     _Start:
  2658                           	callstack 24
  2659  007500                     
  2660                           ;main.c: 14:     float t;;main.c: 15:     lcdCommand(0x80);
  2661  007500  0E80               	movlw	128
  2662  007502  EC4F  F029         	call	_lcdCommand
  2663  007506                     
  2664                           ;main.c: 16:     lcdString("Bem-vindo!");
  2665  007506  0EB9               	movlw	low STR_1
  2666  007508  6E0F               	movwf	lcdString@msg^0,c
  2667  00750A  0E7F               	movlw	high STR_1
  2668  00750C  6E10               	movwf	(lcdString@msg+1)^0,c
  2669  00750E  EC42  F02A         	call	_lcdString	;wreg free
  2670  007512                     
  2671                           ;main.c: 17:     lcdCommand(0xC0);
  2672  007512  0EC0               	movlw	192
  2673  007514  EC4F  F029         	call	_lcdCommand
  2674                           
  2675                           ;main.c: 18:     lcdString("Como jogar:");
  2676  007518  0E81               	movlw	low STR_2
  2677  00751A  6E0F               	movwf	lcdString@msg^0,c
  2678  00751C  0E7F               	movlw	high STR_2
  2679  00751E  6E10               	movwf	(lcdString@msg+1)^0,c
  2680  007520  EC42  F02A         	call	_lcdString	;wreg free
  2681  007524                     
  2682                           ;main.c: 19:     for (t = 0; t < 5000; t++);
  2683  007524  0E00               	movlw	0
  2684  007526  6E15               	movwf	Start@t^0,c
  2685  007528  0E00               	movlw	0
  2686  00752A  6E16               	movwf	(Start@t+1)^0,c
  2687  00752C  0E00               	movlw	0
  2688  00752E  6E17               	movwf	(Start@t+2)^0,c
  2689  007530  0E00               	movlw	0
  2690  007532  6E18               	movwf	(Start@t+3)^0,c
  2691  007534  C015  F001         	movff	Start@t,___flge@ff1
  2692  007538  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2693  00753C  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2694  007540  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2695  007544  0E00               	movlw	0
  2696  007546  6E05               	movwf	___flge@ff2^0,c
  2697  007548  0E40               	movlw	64
  2698  00754A  6E06               	movwf	(___flge@ff2+1)^0,c
  2699  00754C  0E9C               	movlw	156
  2700  00754E  6E07               	movwf	(___flge@ff2+2)^0,c
  2701  007550  0E45               	movlw	69
  2702  007552  6E08               	movwf	(___flge@ff2+3)^0,c
  2703  007554  EC84  F02D         	call	___flge	;wreg free
  2704  007558  A0D8               	btfss	status,0,c
  2705  00755A  EFB1  F03A         	goto	u3041
  2706  00755E  EFB3  F03A         	goto	u3040
  2707  007562                     u3041:
  2708  007562  EFB5  F03A         	goto	l2870
  2709  007566                     u3040:
  2710  007566  EFE8  F03A         	goto	l2872
  2711  00756A                     l2870:
  2712  00756A  C015  F001         	movff	Start@t,___fladd@b
  2713  00756E  C016  F002         	movff	Start@t+1,___fladd@b+1
  2714  007572  C017  F003         	movff	Start@t+2,___fladd@b+2
  2715  007576  C018  F004         	movff	Start@t+3,___fladd@b+3
  2716  00757A  0E00               	movlw	0
  2717  00757C  6E05               	movwf	___fladd@a^0,c
  2718  00757E  0E00               	movlw	0
  2719  007580  6E06               	movwf	(___fladd@a+1)^0,c
  2720  007582  0E80               	movlw	128
  2721  007584  6E07               	movwf	(___fladd@a+2)^0,c
  2722  007586  0E3F               	movlw	63
  2723  007588  6E08               	movwf	(___fladd@a+3)^0,c
  2724  00758A  ECCA  F034         	call	___fladd	;wreg free
  2725  00758E  C001  F015         	movff	?___fladd,Start@t
  2726  007592  C002  F016         	movff	?___fladd+1,Start@t+1
  2727  007596  C003  F017         	movff	?___fladd+2,Start@t+2
  2728  00759A  C004  F018         	movff	?___fladd+3,Start@t+3
  2729  00759E  C015  F001         	movff	Start@t,___flge@ff1
  2730  0075A2  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2731  0075A6  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2732  0075AA  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2733  0075AE  0E00               	movlw	0
  2734  0075B0  6E05               	movwf	___flge@ff2^0,c
  2735  0075B2  0E40               	movlw	64
  2736  0075B4  6E06               	movwf	(___flge@ff2+1)^0,c
  2737  0075B6  0E9C               	movlw	156
  2738  0075B8  6E07               	movwf	(___flge@ff2+2)^0,c
  2739  0075BA  0E45               	movlw	69
  2740  0075BC  6E08               	movwf	(___flge@ff2+3)^0,c
  2741  0075BE  EC84  F02D         	call	___flge	;wreg free
  2742  0075C2  A0D8               	btfss	status,0,c
  2743  0075C4  EFE6  F03A         	goto	u3051
  2744  0075C8  EFE8  F03A         	goto	u3050
  2745  0075CC                     u3051:
  2746  0075CC  EFB5  F03A         	goto	l2870
  2747  0075D0                     u3050:
  2748  0075D0                     l2872:
  2749                           
  2750                           ;main.c: 20:     lcdCommand(0x80);
  2751  0075D0  0E80               	movlw	128
  2752  0075D2  EC4F  F029         	call	_lcdCommand
  2753  0075D6                     
  2754                           ;main.c: 21:     lcdString("Pedra(P): ");
  2755  0075D6  0E8D               	movlw	low STR_3
  2756  0075D8  6E0F               	movwf	lcdString@msg^0,c
  2757  0075DA  0E7F               	movlw	high STR_3
  2758  0075DC  6E10               	movwf	(lcdString@msg+1)^0,c
  2759  0075DE  EC42  F02A         	call	_lcdString	;wreg free
  2760  0075E2                     
  2761                           ;main.c: 22:     lcdCommand(0xC0);
  2762  0075E2  0EC0               	movlw	192
  2763  0075E4  EC4F  F029         	call	_lcdCommand
  2764                           
  2765                           ;main.c: 23:     lcdString("Vence de T e L  ");
  2766  0075E8  0E19               	movlw	low STR_4
  2767  0075EA  6E0F               	movwf	lcdString@msg^0,c
  2768  0075EC  0E7E               	movlw	high STR_4
  2769  0075EE  6E10               	movwf	(lcdString@msg+1)^0,c
  2770  0075F0  EC42  F02A         	call	_lcdString	;wreg free
  2771  0075F4                     
  2772                           ;main.c: 24:     for (t = 0; t < 7000; t++);
  2773  0075F4  0E00               	movlw	0
  2774  0075F6  6E15               	movwf	Start@t^0,c
  2775  0075F8  0E00               	movlw	0
  2776  0075FA  6E16               	movwf	(Start@t+1)^0,c
  2777  0075FC  0E00               	movlw	0
  2778  0075FE  6E17               	movwf	(Start@t+2)^0,c
  2779  007600  0E00               	movlw	0
  2780  007602  6E18               	movwf	(Start@t+3)^0,c
  2781  007604  C015  F001         	movff	Start@t,___flge@ff1
  2782  007608  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2783  00760C  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2784  007610  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2785  007614  0E00               	movlw	0
  2786  007616  6E05               	movwf	___flge@ff2^0,c
  2787  007618  0EC0               	movlw	192
  2788  00761A  6E06               	movwf	(___flge@ff2+1)^0,c
  2789  00761C  0EDA               	movlw	218
  2790  00761E  6E07               	movwf	(___flge@ff2+2)^0,c
  2791  007620  0E45               	movlw	69
  2792  007622  6E08               	movwf	(___flge@ff2+3)^0,c
  2793  007624  EC84  F02D         	call	___flge	;wreg free
  2794  007628  A0D8               	btfss	status,0,c
  2795  00762A  EF19  F03B         	goto	u3061
  2796  00762E  EF1B  F03B         	goto	u3060
  2797  007632                     u3061:
  2798  007632  EF1D  F03B         	goto	l2884
  2799  007636                     u3060:
  2800  007636  EF50  F03B         	goto	l2886
  2801  00763A                     l2884:
  2802  00763A  C015  F001         	movff	Start@t,___fladd@b
  2803  00763E  C016  F002         	movff	Start@t+1,___fladd@b+1
  2804  007642  C017  F003         	movff	Start@t+2,___fladd@b+2
  2805  007646  C018  F004         	movff	Start@t+3,___fladd@b+3
  2806  00764A  0E00               	movlw	0
  2807  00764C  6E05               	movwf	___fladd@a^0,c
  2808  00764E  0E00               	movlw	0
  2809  007650  6E06               	movwf	(___fladd@a+1)^0,c
  2810  007652  0E80               	movlw	128
  2811  007654  6E07               	movwf	(___fladd@a+2)^0,c
  2812  007656  0E3F               	movlw	63
  2813  007658  6E08               	movwf	(___fladd@a+3)^0,c
  2814  00765A  ECCA  F034         	call	___fladd	;wreg free
  2815  00765E  C001  F015         	movff	?___fladd,Start@t
  2816  007662  C002  F016         	movff	?___fladd+1,Start@t+1
  2817  007666  C003  F017         	movff	?___fladd+2,Start@t+2
  2818  00766A  C004  F018         	movff	?___fladd+3,Start@t+3
  2819  00766E  C015  F001         	movff	Start@t,___flge@ff1
  2820  007672  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2821  007676  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2822  00767A  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2823  00767E  0E00               	movlw	0
  2824  007680  6E05               	movwf	___flge@ff2^0,c
  2825  007682  0EC0               	movlw	192
  2826  007684  6E06               	movwf	(___flge@ff2+1)^0,c
  2827  007686  0EDA               	movlw	218
  2828  007688  6E07               	movwf	(___flge@ff2+2)^0,c
  2829  00768A  0E45               	movlw	69
  2830  00768C  6E08               	movwf	(___flge@ff2+3)^0,c
  2831  00768E  EC84  F02D         	call	___flge	;wreg free
  2832  007692  A0D8               	btfss	status,0,c
  2833  007694  EF4E  F03B         	goto	u3071
  2834  007698  EF50  F03B         	goto	u3070
  2835  00769C                     u3071:
  2836  00769C  EF1D  F03B         	goto	l2884
  2837  0076A0                     u3070:
  2838  0076A0                     l2886:
  2839                           
  2840                           ;main.c: 25:     lcdCommand(0xC0);
  2841  0076A0  0EC0               	movlw	192
  2842  0076A2  EC4F  F029         	call	_lcdCommand
  2843  0076A6                     
  2844                           ;main.c: 26:     lcdString("Perde para p e S");
  2845  0076A6  0EB2               	movlw	low STR_5
  2846  0076A8  6E0F               	movwf	lcdString@msg^0,c
  2847  0076AA  0E7E               	movlw	high STR_5
  2848  0076AC  6E10               	movwf	(lcdString@msg+1)^0,c
  2849  0076AE  EC42  F02A         	call	_lcdString	;wreg free
  2850  0076B2                     
  2851                           ;main.c: 27:     for (t = 0; t < 7000; t++);
  2852  0076B2  0E00               	movlw	0
  2853  0076B4  6E15               	movwf	Start@t^0,c
  2854  0076B6  0E00               	movlw	0
  2855  0076B8  6E16               	movwf	(Start@t+1)^0,c
  2856  0076BA  0E00               	movlw	0
  2857  0076BC  6E17               	movwf	(Start@t+2)^0,c
  2858  0076BE  0E00               	movlw	0
  2859  0076C0  6E18               	movwf	(Start@t+3)^0,c
  2860  0076C2  C015  F001         	movff	Start@t,___flge@ff1
  2861  0076C6  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2862  0076CA  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2863  0076CE  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2864  0076D2  0E00               	movlw	0
  2865  0076D4  6E05               	movwf	___flge@ff2^0,c
  2866  0076D6  0EC0               	movlw	192
  2867  0076D8  6E06               	movwf	(___flge@ff2+1)^0,c
  2868  0076DA  0EDA               	movlw	218
  2869  0076DC  6E07               	movwf	(___flge@ff2+2)^0,c
  2870  0076DE  0E45               	movlw	69
  2871  0076E0  6E08               	movwf	(___flge@ff2+3)^0,c
  2872  0076E2  EC84  F02D         	call	___flge	;wreg free
  2873  0076E6  A0D8               	btfss	status,0,c
  2874  0076E8  EF78  F03B         	goto	u3081
  2875  0076EC  EF7A  F03B         	goto	u3080
  2876  0076F0                     u3081:
  2877  0076F0  EF7C  F03B         	goto	l2896
  2878  0076F4                     u3080:
  2879  0076F4  EFAF  F03B         	goto	l2898
  2880  0076F8                     l2896:
  2881  0076F8  C015  F001         	movff	Start@t,___fladd@b
  2882  0076FC  C016  F002         	movff	Start@t+1,___fladd@b+1
  2883  007700  C017  F003         	movff	Start@t+2,___fladd@b+2
  2884  007704  C018  F004         	movff	Start@t+3,___fladd@b+3
  2885  007708  0E00               	movlw	0
  2886  00770A  6E05               	movwf	___fladd@a^0,c
  2887  00770C  0E00               	movlw	0
  2888  00770E  6E06               	movwf	(___fladd@a+1)^0,c
  2889  007710  0E80               	movlw	128
  2890  007712  6E07               	movwf	(___fladd@a+2)^0,c
  2891  007714  0E3F               	movlw	63
  2892  007716  6E08               	movwf	(___fladd@a+3)^0,c
  2893  007718  ECCA  F034         	call	___fladd	;wreg free
  2894  00771C  C001  F015         	movff	?___fladd,Start@t
  2895  007720  C002  F016         	movff	?___fladd+1,Start@t+1
  2896  007724  C003  F017         	movff	?___fladd+2,Start@t+2
  2897  007728  C004  F018         	movff	?___fladd+3,Start@t+3
  2898  00772C  C015  F001         	movff	Start@t,___flge@ff1
  2899  007730  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2900  007734  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2901  007738  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2902  00773C  0E00               	movlw	0
  2903  00773E  6E05               	movwf	___flge@ff2^0,c
  2904  007740  0EC0               	movlw	192
  2905  007742  6E06               	movwf	(___flge@ff2+1)^0,c
  2906  007744  0EDA               	movlw	218
  2907  007746  6E07               	movwf	(___flge@ff2+2)^0,c
  2908  007748  0E45               	movlw	69
  2909  00774A  6E08               	movwf	(___flge@ff2+3)^0,c
  2910  00774C  EC84  F02D         	call	___flge	;wreg free
  2911  007750  A0D8               	btfss	status,0,c
  2912  007752  EFAD  F03B         	goto	u3091
  2913  007756  EFAF  F03B         	goto	u3090
  2914  00775A                     u3091:
  2915  00775A  EF7C  F03B         	goto	l2896
  2916  00775E                     u3090:
  2917  00775E                     l2898:
  2918                           
  2919                           ;main.c: 28:     lcdCommand(0x80);
  2920  00775E  0E80               	movlw	128
  2921  007760  EC4F  F029         	call	_lcdCommand
  2922  007764                     
  2923                           ;main.c: 29:     lcdString("Papel(p): ");
  2924  007764  0E98               	movlw	low STR_6
  2925  007766  6E0F               	movwf	lcdString@msg^0,c
  2926  007768  0E7F               	movlw	high STR_6
  2927  00776A  6E10               	movwf	(lcdString@msg+1)^0,c
  2928  00776C  EC42  F02A         	call	_lcdString	;wreg free
  2929  007770                     
  2930                           ;main.c: 30:     lcdCommand(0xC0);
  2931  007770  0EC0               	movlw	192
  2932  007772  EC4F  F029         	call	_lcdCommand
  2933                           
  2934                           ;main.c: 31:     lcdString("Vence de P e S  ");
  2935  007776  0E3B               	movlw	low STR_7
  2936  007778  6E0F               	movwf	lcdString@msg^0,c
  2937  00777A  0E7E               	movlw	high STR_7
  2938  00777C  6E10               	movwf	(lcdString@msg+1)^0,c
  2939  00777E  EC42  F02A         	call	_lcdString	;wreg free
  2940  007782                     
  2941                           ;main.c: 32:     for (t = 0; t < 7000; t++);
  2942  007782  0E00               	movlw	0
  2943  007784  6E15               	movwf	Start@t^0,c
  2944  007786  0E00               	movlw	0
  2945  007788  6E16               	movwf	(Start@t+1)^0,c
  2946  00778A  0E00               	movlw	0
  2947  00778C  6E17               	movwf	(Start@t+2)^0,c
  2948  00778E  0E00               	movlw	0
  2949  007790  6E18               	movwf	(Start@t+3)^0,c
  2950  007792  C015  F001         	movff	Start@t,___flge@ff1
  2951  007796  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2952  00779A  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2953  00779E  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2954  0077A2  0E00               	movlw	0
  2955  0077A4  6E05               	movwf	___flge@ff2^0,c
  2956  0077A6  0EC0               	movlw	192
  2957  0077A8  6E06               	movwf	(___flge@ff2+1)^0,c
  2958  0077AA  0EDA               	movlw	218
  2959  0077AC  6E07               	movwf	(___flge@ff2+2)^0,c
  2960  0077AE  0E45               	movlw	69
  2961  0077B0  6E08               	movwf	(___flge@ff2+3)^0,c
  2962  0077B2  EC84  F02D         	call	___flge	;wreg free
  2963  0077B6  A0D8               	btfss	status,0,c
  2964  0077B8  EFE0  F03B         	goto	u3101
  2965  0077BC  EFE2  F03B         	goto	u3100
  2966  0077C0                     u3101:
  2967  0077C0  EFE4  F03B         	goto	l2910
  2968  0077C4                     u3100:
  2969  0077C4  EF17  F03C         	goto	l2912
  2970  0077C8                     l2910:
  2971  0077C8  C015  F001         	movff	Start@t,___fladd@b
  2972  0077CC  C016  F002         	movff	Start@t+1,___fladd@b+1
  2973  0077D0  C017  F003         	movff	Start@t+2,___fladd@b+2
  2974  0077D4  C018  F004         	movff	Start@t+3,___fladd@b+3
  2975  0077D8  0E00               	movlw	0
  2976  0077DA  6E05               	movwf	___fladd@a^0,c
  2977  0077DC  0E00               	movlw	0
  2978  0077DE  6E06               	movwf	(___fladd@a+1)^0,c
  2979  0077E0  0E80               	movlw	128
  2980  0077E2  6E07               	movwf	(___fladd@a+2)^0,c
  2981  0077E4  0E3F               	movlw	63
  2982  0077E6  6E08               	movwf	(___fladd@a+3)^0,c
  2983  0077E8  ECCA  F034         	call	___fladd	;wreg free
  2984  0077EC  C001  F015         	movff	?___fladd,Start@t
  2985  0077F0  C002  F016         	movff	?___fladd+1,Start@t+1
  2986  0077F4  C003  F017         	movff	?___fladd+2,Start@t+2
  2987  0077F8  C004  F018         	movff	?___fladd+3,Start@t+3
  2988  0077FC  C015  F001         	movff	Start@t,___flge@ff1
  2989  007800  C016  F002         	movff	Start@t+1,___flge@ff1+1
  2990  007804  C017  F003         	movff	Start@t+2,___flge@ff1+2
  2991  007808  C018  F004         	movff	Start@t+3,___flge@ff1+3
  2992  00780C  0E00               	movlw	0
  2993  00780E  6E05               	movwf	___flge@ff2^0,c
  2994  007810  0EC0               	movlw	192
  2995  007812  6E06               	movwf	(___flge@ff2+1)^0,c
  2996  007814  0EDA               	movlw	218
  2997  007816  6E07               	movwf	(___flge@ff2+2)^0,c
  2998  007818  0E45               	movlw	69
  2999  00781A  6E08               	movwf	(___flge@ff2+3)^0,c
  3000  00781C  EC84  F02D         	call	___flge	;wreg free
  3001  007820  A0D8               	btfss	status,0,c
  3002  007822  EF15  F03C         	goto	u3111
  3003  007826  EF17  F03C         	goto	u3110
  3004  00782A                     u3111:
  3005  00782A  EFE4  F03B         	goto	l2910
  3006  00782E                     u3110:
  3007  00782E                     l2912:
  3008                           
  3009                           ;main.c: 33:     lcdCommand(0xC0);
  3010  00782E  0EC0               	movlw	192
  3011  007830  EC4F  F029         	call	_lcdCommand
  3012  007834                     
  3013                           ;main.c: 34:     lcdString("Perde para T e L");
  3014  007834  0E7F               	movlw	low STR_8
  3015  007836  6E0F               	movwf	lcdString@msg^0,c
  3016  007838  0E7E               	movlw	high STR_8
  3017  00783A  6E10               	movwf	(lcdString@msg+1)^0,c
  3018  00783C  EC42  F02A         	call	_lcdString	;wreg free
  3019  007840                     
  3020                           ;main.c: 35:     for (t = 0; t < 7000; t++);
  3021  007840  0E00               	movlw	0
  3022  007842  6E15               	movwf	Start@t^0,c
  3023  007844  0E00               	movlw	0
  3024  007846  6E16               	movwf	(Start@t+1)^0,c
  3025  007848  0E00               	movlw	0
  3026  00784A  6E17               	movwf	(Start@t+2)^0,c
  3027  00784C  0E00               	movlw	0
  3028  00784E  6E18               	movwf	(Start@t+3)^0,c
  3029  007850  C015  F001         	movff	Start@t,___flge@ff1
  3030  007854  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3031  007858  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3032  00785C  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3033  007860  0E00               	movlw	0
  3034  007862  6E05               	movwf	___flge@ff2^0,c
  3035  007864  0EC0               	movlw	192
  3036  007866  6E06               	movwf	(___flge@ff2+1)^0,c
  3037  007868  0EDA               	movlw	218
  3038  00786A  6E07               	movwf	(___flge@ff2+2)^0,c
  3039  00786C  0E45               	movlw	69
  3040  00786E  6E08               	movwf	(___flge@ff2+3)^0,c
  3041  007870  EC84  F02D         	call	___flge	;wreg free
  3042  007874  A0D8               	btfss	status,0,c
  3043  007876  EF3F  F03C         	goto	u3121
  3044  00787A  EF41  F03C         	goto	u3120
  3045  00787E                     u3121:
  3046  00787E  EF43  F03C         	goto	l2922
  3047  007882                     u3120:
  3048  007882  EF76  F03C         	goto	l2924
  3049  007886                     l2922:
  3050  007886  C015  F001         	movff	Start@t,___fladd@b
  3051  00788A  C016  F002         	movff	Start@t+1,___fladd@b+1
  3052  00788E  C017  F003         	movff	Start@t+2,___fladd@b+2
  3053  007892  C018  F004         	movff	Start@t+3,___fladd@b+3
  3054  007896  0E00               	movlw	0
  3055  007898  6E05               	movwf	___fladd@a^0,c
  3056  00789A  0E00               	movlw	0
  3057  00789C  6E06               	movwf	(___fladd@a+1)^0,c
  3058  00789E  0E80               	movlw	128
  3059  0078A0  6E07               	movwf	(___fladd@a+2)^0,c
  3060  0078A2  0E3F               	movlw	63
  3061  0078A4  6E08               	movwf	(___fladd@a+3)^0,c
  3062  0078A6  ECCA  F034         	call	___fladd	;wreg free
  3063  0078AA  C001  F015         	movff	?___fladd,Start@t
  3064  0078AE  C002  F016         	movff	?___fladd+1,Start@t+1
  3065  0078B2  C003  F017         	movff	?___fladd+2,Start@t+2
  3066  0078B6  C004  F018         	movff	?___fladd+3,Start@t+3
  3067  0078BA  C015  F001         	movff	Start@t,___flge@ff1
  3068  0078BE  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3069  0078C2  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3070  0078C6  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3071  0078CA  0E00               	movlw	0
  3072  0078CC  6E05               	movwf	___flge@ff2^0,c
  3073  0078CE  0EC0               	movlw	192
  3074  0078D0  6E06               	movwf	(___flge@ff2+1)^0,c
  3075  0078D2  0EDA               	movlw	218
  3076  0078D4  6E07               	movwf	(___flge@ff2+2)^0,c
  3077  0078D6  0E45               	movlw	69
  3078  0078D8  6E08               	movwf	(___flge@ff2+3)^0,c
  3079  0078DA  EC84  F02D         	call	___flge	;wreg free
  3080  0078DE  A0D8               	btfss	status,0,c
  3081  0078E0  EF74  F03C         	goto	u3131
  3082  0078E4  EF76  F03C         	goto	u3130
  3083  0078E8                     u3131:
  3084  0078E8  EF43  F03C         	goto	l2922
  3085  0078EC                     u3130:
  3086  0078EC                     l2924:
  3087                           
  3088                           ;main.c: 36:     lcdCommand(0x80);
  3089  0078EC  0E80               	movlw	128
  3090  0078EE  EC4F  F029         	call	_lcdCommand
  3091  0078F2                     
  3092                           ;main.c: 37:     lcdString("Tesoura(T): ");
  3093  0078F2  0E50               	movlw	low STR_9
  3094  0078F4  6E0F               	movwf	lcdString@msg^0,c
  3095  0078F6  0E7F               	movlw	high STR_9
  3096  0078F8  6E10               	movwf	(lcdString@msg+1)^0,c
  3097  0078FA  EC42  F02A         	call	_lcdString	;wreg free
  3098  0078FE                     
  3099                           ;main.c: 38:     lcdCommand(0xC0);
  3100  0078FE  0EC0               	movlw	192
  3101  007900  EC4F  F029         	call	_lcdCommand
  3102                           
  3103                           ;main.c: 39:     lcdString("Vence de p e L  ");
  3104  007904  0E2A               	movlw	low STR_10
  3105  007906  6E0F               	movwf	lcdString@msg^0,c
  3106  007908  0E7E               	movlw	high STR_10
  3107  00790A  6E10               	movwf	(lcdString@msg+1)^0,c
  3108  00790C  EC42  F02A         	call	_lcdString	;wreg free
  3109  007910                     
  3110                           ;main.c: 40:     for (t = 0; t < 7000; t++);
  3111  007910  0E00               	movlw	0
  3112  007912  6E15               	movwf	Start@t^0,c
  3113  007914  0E00               	movlw	0
  3114  007916  6E16               	movwf	(Start@t+1)^0,c
  3115  007918  0E00               	movlw	0
  3116  00791A  6E17               	movwf	(Start@t+2)^0,c
  3117  00791C  0E00               	movlw	0
  3118  00791E  6E18               	movwf	(Start@t+3)^0,c
  3119  007920  C015  F001         	movff	Start@t,___flge@ff1
  3120  007924  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3121  007928  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3122  00792C  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3123  007930  0E00               	movlw	0
  3124  007932  6E05               	movwf	___flge@ff2^0,c
  3125  007934  0EC0               	movlw	192
  3126  007936  6E06               	movwf	(___flge@ff2+1)^0,c
  3127  007938  0EDA               	movlw	218
  3128  00793A  6E07               	movwf	(___flge@ff2+2)^0,c
  3129  00793C  0E45               	movlw	69
  3130  00793E  6E08               	movwf	(___flge@ff2+3)^0,c
  3131  007940  EC84  F02D         	call	___flge	;wreg free
  3132  007944  A0D8               	btfss	status,0,c
  3133  007946  EFA7  F03C         	goto	u3141
  3134  00794A  EFA9  F03C         	goto	u3140
  3135  00794E                     u3141:
  3136  00794E  EFAB  F03C         	goto	l2936
  3137  007952                     u3140:
  3138  007952  EFDE  F03C         	goto	l2938
  3139  007956                     l2936:
  3140  007956  C015  F001         	movff	Start@t,___fladd@b
  3141  00795A  C016  F002         	movff	Start@t+1,___fladd@b+1
  3142  00795E  C017  F003         	movff	Start@t+2,___fladd@b+2
  3143  007962  C018  F004         	movff	Start@t+3,___fladd@b+3
  3144  007966  0E00               	movlw	0
  3145  007968  6E05               	movwf	___fladd@a^0,c
  3146  00796A  0E00               	movlw	0
  3147  00796C  6E06               	movwf	(___fladd@a+1)^0,c
  3148  00796E  0E80               	movlw	128
  3149  007970  6E07               	movwf	(___fladd@a+2)^0,c
  3150  007972  0E3F               	movlw	63
  3151  007974  6E08               	movwf	(___fladd@a+3)^0,c
  3152  007976  ECCA  F034         	call	___fladd	;wreg free
  3153  00797A  C001  F015         	movff	?___fladd,Start@t
  3154  00797E  C002  F016         	movff	?___fladd+1,Start@t+1
  3155  007982  C003  F017         	movff	?___fladd+2,Start@t+2
  3156  007986  C004  F018         	movff	?___fladd+3,Start@t+3
  3157  00798A  C015  F001         	movff	Start@t,___flge@ff1
  3158  00798E  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3159  007992  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3160  007996  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3161  00799A  0E00               	movlw	0
  3162  00799C  6E05               	movwf	___flge@ff2^0,c
  3163  00799E  0EC0               	movlw	192
  3164  0079A0  6E06               	movwf	(___flge@ff2+1)^0,c
  3165  0079A2  0EDA               	movlw	218
  3166  0079A4  6E07               	movwf	(___flge@ff2+2)^0,c
  3167  0079A6  0E45               	movlw	69
  3168  0079A8  6E08               	movwf	(___flge@ff2+3)^0,c
  3169  0079AA  EC84  F02D         	call	___flge	;wreg free
  3170  0079AE  A0D8               	btfss	status,0,c
  3171  0079B0  EFDC  F03C         	goto	u3151
  3172  0079B4  EFDE  F03C         	goto	u3150
  3173  0079B8                     u3151:
  3174  0079B8  EFAB  F03C         	goto	l2936
  3175  0079BC                     u3150:
  3176  0079BC                     l2938:
  3177                           
  3178                           ;main.c: 41:     lcdCommand(0xC0);
  3179  0079BC  0EC0               	movlw	192
  3180  0079BE  EC4F  F029         	call	_lcdCommand
  3181  0079C2                     
  3182                           ;main.c: 42:     lcdString("Perde para P e S");
  3183  0079C2  0EA1               	movlw	low STR_11
  3184  0079C4  6E0F               	movwf	lcdString@msg^0,c
  3185  0079C6  0E7E               	movlw	high STR_11
  3186  0079C8  6E10               	movwf	(lcdString@msg+1)^0,c
  3187  0079CA  EC42  F02A         	call	_lcdString	;wreg free
  3188  0079CE                     
  3189                           ;main.c: 43:     for (t = 0; t < 7000; t++);
  3190  0079CE  0E00               	movlw	0
  3191  0079D0  6E15               	movwf	Start@t^0,c
  3192  0079D2  0E00               	movlw	0
  3193  0079D4  6E16               	movwf	(Start@t+1)^0,c
  3194  0079D6  0E00               	movlw	0
  3195  0079D8  6E17               	movwf	(Start@t+2)^0,c
  3196  0079DA  0E00               	movlw	0
  3197  0079DC  6E18               	movwf	(Start@t+3)^0,c
  3198  0079DE  C015  F001         	movff	Start@t,___flge@ff1
  3199  0079E2  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3200  0079E6  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3201  0079EA  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3202  0079EE  0E00               	movlw	0
  3203  0079F0  6E05               	movwf	___flge@ff2^0,c
  3204  0079F2  0EC0               	movlw	192
  3205  0079F4  6E06               	movwf	(___flge@ff2+1)^0,c
  3206  0079F6  0EDA               	movlw	218
  3207  0079F8  6E07               	movwf	(___flge@ff2+2)^0,c
  3208  0079FA  0E45               	movlw	69
  3209  0079FC  6E08               	movwf	(___flge@ff2+3)^0,c
  3210  0079FE  EC84  F02D         	call	___flge	;wreg free
  3211  007A02  A0D8               	btfss	status,0,c
  3212  007A04  EF06  F03D         	goto	u3161
  3213  007A08  EF08  F03D         	goto	u3160
  3214  007A0C                     u3161:
  3215  007A0C  EF0A  F03D         	goto	l2948
  3216  007A10                     u3160:
  3217  007A10  EF3D  F03D         	goto	l2950
  3218  007A14                     l2948:
  3219  007A14  C015  F001         	movff	Start@t,___fladd@b
  3220  007A18  C016  F002         	movff	Start@t+1,___fladd@b+1
  3221  007A1C  C017  F003         	movff	Start@t+2,___fladd@b+2
  3222  007A20  C018  F004         	movff	Start@t+3,___fladd@b+3
  3223  007A24  0E00               	movlw	0
  3224  007A26  6E05               	movwf	___fladd@a^0,c
  3225  007A28  0E00               	movlw	0
  3226  007A2A  6E06               	movwf	(___fladd@a+1)^0,c
  3227  007A2C  0E80               	movlw	128
  3228  007A2E  6E07               	movwf	(___fladd@a+2)^0,c
  3229  007A30  0E3F               	movlw	63
  3230  007A32  6E08               	movwf	(___fladd@a+3)^0,c
  3231  007A34  ECCA  F034         	call	___fladd	;wreg free
  3232  007A38  C001  F015         	movff	?___fladd,Start@t
  3233  007A3C  C002  F016         	movff	?___fladd+1,Start@t+1
  3234  007A40  C003  F017         	movff	?___fladd+2,Start@t+2
  3235  007A44  C004  F018         	movff	?___fladd+3,Start@t+3
  3236  007A48  C015  F001         	movff	Start@t,___flge@ff1
  3237  007A4C  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3238  007A50  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3239  007A54  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3240  007A58  0E00               	movlw	0
  3241  007A5A  6E05               	movwf	___flge@ff2^0,c
  3242  007A5C  0EC0               	movlw	192
  3243  007A5E  6E06               	movwf	(___flge@ff2+1)^0,c
  3244  007A60  0EDA               	movlw	218
  3245  007A62  6E07               	movwf	(___flge@ff2+2)^0,c
  3246  007A64  0E45               	movlw	69
  3247  007A66  6E08               	movwf	(___flge@ff2+3)^0,c
  3248  007A68  EC84  F02D         	call	___flge	;wreg free
  3249  007A6C  A0D8               	btfss	status,0,c
  3250  007A6E  EF3B  F03D         	goto	u3171
  3251  007A72  EF3D  F03D         	goto	u3170
  3252  007A76                     u3171:
  3253  007A76  EF0A  F03D         	goto	l2948
  3254  007A7A                     u3170:
  3255  007A7A                     l2950:
  3256                           
  3257                           ;main.c: 44:     lcdCommand(0x80);
  3258  007A7A  0E80               	movlw	128
  3259  007A7C  EC4F  F029         	call	_lcdCommand
  3260  007A80                     
  3261                           ;main.c: 45:     lcdString("Spock(S):  ");
  3262  007A80  0E5D               	movlw	low STR_12
  3263  007A82  6E0F               	movwf	lcdString@msg^0,c
  3264  007A84  0E7F               	movlw	high STR_12
  3265  007A86  6E10               	movwf	(lcdString@msg+1)^0,c
  3266  007A88  EC42  F02A         	call	_lcdString	;wreg free
  3267  007A8C                     
  3268                           ;main.c: 46:     lcdCommand(0xC0);
  3269  007A8C  0EC0               	movlw	192
  3270  007A8E  EC4F  F029         	call	_lcdCommand
  3271                           
  3272                           ;main.c: 47:     lcdString("Vence de P e T  ");
  3273  007A92  0E5D               	movlw	low STR_13
  3274  007A94  6E0F               	movwf	lcdString@msg^0,c
  3275  007A96  0E7E               	movlw	high STR_13
  3276  007A98  6E10               	movwf	(lcdString@msg+1)^0,c
  3277  007A9A  EC42  F02A         	call	_lcdString	;wreg free
  3278  007A9E                     
  3279                           ;main.c: 48:     for (t = 0; t < 7000; t++);
  3280  007A9E  0E00               	movlw	0
  3281  007AA0  6E15               	movwf	Start@t^0,c
  3282  007AA2  0E00               	movlw	0
  3283  007AA4  6E16               	movwf	(Start@t+1)^0,c
  3284  007AA6  0E00               	movlw	0
  3285  007AA8  6E17               	movwf	(Start@t+2)^0,c
  3286  007AAA  0E00               	movlw	0
  3287  007AAC  6E18               	movwf	(Start@t+3)^0,c
  3288  007AAE  C015  F001         	movff	Start@t,___flge@ff1
  3289  007AB2  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3290  007AB6  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3291  007ABA  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3292  007ABE  0E00               	movlw	0
  3293  007AC0  6E05               	movwf	___flge@ff2^0,c
  3294  007AC2  0EC0               	movlw	192
  3295  007AC4  6E06               	movwf	(___flge@ff2+1)^0,c
  3296  007AC6  0EDA               	movlw	218
  3297  007AC8  6E07               	movwf	(___flge@ff2+2)^0,c
  3298  007ACA  0E45               	movlw	69
  3299  007ACC  6E08               	movwf	(___flge@ff2+3)^0,c
  3300  007ACE  EC84  F02D         	call	___flge	;wreg free
  3301  007AD2  A0D8               	btfss	status,0,c
  3302  007AD4  EF6E  F03D         	goto	u3181
  3303  007AD8  EF70  F03D         	goto	u3180
  3304  007ADC                     u3181:
  3305  007ADC  EF72  F03D         	goto	l2962
  3306  007AE0                     u3180:
  3307  007AE0  EFA5  F03D         	goto	l2964
  3308  007AE4                     l2962:
  3309  007AE4  C015  F001         	movff	Start@t,___fladd@b
  3310  007AE8  C016  F002         	movff	Start@t+1,___fladd@b+1
  3311  007AEC  C017  F003         	movff	Start@t+2,___fladd@b+2
  3312  007AF0  C018  F004         	movff	Start@t+3,___fladd@b+3
  3313  007AF4  0E00               	movlw	0
  3314  007AF6  6E05               	movwf	___fladd@a^0,c
  3315  007AF8  0E00               	movlw	0
  3316  007AFA  6E06               	movwf	(___fladd@a+1)^0,c
  3317  007AFC  0E80               	movlw	128
  3318  007AFE  6E07               	movwf	(___fladd@a+2)^0,c
  3319  007B00  0E3F               	movlw	63
  3320  007B02  6E08               	movwf	(___fladd@a+3)^0,c
  3321  007B04  ECCA  F034         	call	___fladd	;wreg free
  3322  007B08  C001  F015         	movff	?___fladd,Start@t
  3323  007B0C  C002  F016         	movff	?___fladd+1,Start@t+1
  3324  007B10  C003  F017         	movff	?___fladd+2,Start@t+2
  3325  007B14  C004  F018         	movff	?___fladd+3,Start@t+3
  3326  007B18  C015  F001         	movff	Start@t,___flge@ff1
  3327  007B1C  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3328  007B20  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3329  007B24  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3330  007B28  0E00               	movlw	0
  3331  007B2A  6E05               	movwf	___flge@ff2^0,c
  3332  007B2C  0EC0               	movlw	192
  3333  007B2E  6E06               	movwf	(___flge@ff2+1)^0,c
  3334  007B30  0EDA               	movlw	218
  3335  007B32  6E07               	movwf	(___flge@ff2+2)^0,c
  3336  007B34  0E45               	movlw	69
  3337  007B36  6E08               	movwf	(___flge@ff2+3)^0,c
  3338  007B38  EC84  F02D         	call	___flge	;wreg free
  3339  007B3C  A0D8               	btfss	status,0,c
  3340  007B3E  EFA3  F03D         	goto	u3191
  3341  007B42  EFA5  F03D         	goto	u3190
  3342  007B46                     u3191:
  3343  007B46  EF72  F03D         	goto	l2962
  3344  007B4A                     u3190:
  3345  007B4A                     l2964:
  3346                           
  3347                           ;main.c: 49:     lcdCommand(0xC0);
  3348  007B4A  0EC0               	movlw	192
  3349  007B4C  EC4F  F029         	call	_lcdCommand
  3350  007B50                     
  3351                           ;main.c: 50:     lcdString("Perde para p e L");
  3352  007B50  0E90               	movlw	low STR_14
  3353  007B52  6E0F               	movwf	lcdString@msg^0,c
  3354  007B54  0E7E               	movlw	high STR_14
  3355  007B56  6E10               	movwf	(lcdString@msg+1)^0,c
  3356  007B58  EC42  F02A         	call	_lcdString	;wreg free
  3357  007B5C                     
  3358                           ;main.c: 51:     for (t = 0; t < 7000; t++);
  3359  007B5C  0E00               	movlw	0
  3360  007B5E  6E15               	movwf	Start@t^0,c
  3361  007B60  0E00               	movlw	0
  3362  007B62  6E16               	movwf	(Start@t+1)^0,c
  3363  007B64  0E00               	movlw	0
  3364  007B66  6E17               	movwf	(Start@t+2)^0,c
  3365  007B68  0E00               	movlw	0
  3366  007B6A  6E18               	movwf	(Start@t+3)^0,c
  3367  007B6C  C015  F001         	movff	Start@t,___flge@ff1
  3368  007B70  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3369  007B74  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3370  007B78  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3371  007B7C  0E00               	movlw	0
  3372  007B7E  6E05               	movwf	___flge@ff2^0,c
  3373  007B80  0EC0               	movlw	192
  3374  007B82  6E06               	movwf	(___flge@ff2+1)^0,c
  3375  007B84  0EDA               	movlw	218
  3376  007B86  6E07               	movwf	(___flge@ff2+2)^0,c
  3377  007B88  0E45               	movlw	69
  3378  007B8A  6E08               	movwf	(___flge@ff2+3)^0,c
  3379  007B8C  EC84  F02D         	call	___flge	;wreg free
  3380  007B90  A0D8               	btfss	status,0,c
  3381  007B92  EFCD  F03D         	goto	u3201
  3382  007B96  EFCF  F03D         	goto	u3200
  3383  007B9A                     u3201:
  3384  007B9A  EFD1  F03D         	goto	l2974
  3385  007B9E                     u3200:
  3386  007B9E  EF04  F03E         	goto	l2976
  3387  007BA2                     l2974:
  3388  007BA2  C015  F001         	movff	Start@t,___fladd@b
  3389  007BA6  C016  F002         	movff	Start@t+1,___fladd@b+1
  3390  007BAA  C017  F003         	movff	Start@t+2,___fladd@b+2
  3391  007BAE  C018  F004         	movff	Start@t+3,___fladd@b+3
  3392  007BB2  0E00               	movlw	0
  3393  007BB4  6E05               	movwf	___fladd@a^0,c
  3394  007BB6  0E00               	movlw	0
  3395  007BB8  6E06               	movwf	(___fladd@a+1)^0,c
  3396  007BBA  0E80               	movlw	128
  3397  007BBC  6E07               	movwf	(___fladd@a+2)^0,c
  3398  007BBE  0E3F               	movlw	63
  3399  007BC0  6E08               	movwf	(___fladd@a+3)^0,c
  3400  007BC2  ECCA  F034         	call	___fladd	;wreg free
  3401  007BC6  C001  F015         	movff	?___fladd,Start@t
  3402  007BCA  C002  F016         	movff	?___fladd+1,Start@t+1
  3403  007BCE  C003  F017         	movff	?___fladd+2,Start@t+2
  3404  007BD2  C004  F018         	movff	?___fladd+3,Start@t+3
  3405  007BD6  C015  F001         	movff	Start@t,___flge@ff1
  3406  007BDA  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3407  007BDE  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3408  007BE2  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3409  007BE6  0E00               	movlw	0
  3410  007BE8  6E05               	movwf	___flge@ff2^0,c
  3411  007BEA  0EC0               	movlw	192
  3412  007BEC  6E06               	movwf	(___flge@ff2+1)^0,c
  3413  007BEE  0EDA               	movlw	218
  3414  007BF0  6E07               	movwf	(___flge@ff2+2)^0,c
  3415  007BF2  0E45               	movlw	69
  3416  007BF4  6E08               	movwf	(___flge@ff2+3)^0,c
  3417  007BF6  EC84  F02D         	call	___flge	;wreg free
  3418  007BFA  A0D8               	btfss	status,0,c
  3419  007BFC  EF02  F03E         	goto	u3211
  3420  007C00  EF04  F03E         	goto	u3210
  3421  007C04                     u3211:
  3422  007C04  EFD1  F03D         	goto	l2974
  3423  007C08                     u3210:
  3424  007C08                     l2976:
  3425                           
  3426                           ;main.c: 52:     lcdCommand(0x80);
  3427  007C08  0E80               	movlw	128
  3428  007C0A  EC4F  F029         	call	_lcdCommand
  3429  007C0E                     
  3430                           ;main.c: 53:     lcdString("Lagarto(L): ");
  3431  007C0E  0E43               	movlw	low STR_15
  3432  007C10  6E0F               	movwf	lcdString@msg^0,c
  3433  007C12  0E7F               	movlw	high STR_15
  3434  007C14  6E10               	movwf	(lcdString@msg+1)^0,c
  3435  007C16  EC42  F02A         	call	_lcdString	;wreg free
  3436  007C1A                     
  3437                           ;main.c: 54:     lcdCommand(0xC0);
  3438  007C1A  0EC0               	movlw	192
  3439  007C1C  EC4F  F029         	call	_lcdCommand
  3440                           
  3441                           ;main.c: 55:     lcdString("Vence de p e S  ");
  3442  007C20  0E4C               	movlw	low STR_16
  3443  007C22  6E0F               	movwf	lcdString@msg^0,c
  3444  007C24  0E7E               	movlw	high STR_16
  3445  007C26  6E10               	movwf	(lcdString@msg+1)^0,c
  3446  007C28  EC42  F02A         	call	_lcdString	;wreg free
  3447  007C2C                     
  3448                           ;main.c: 56:     for (t = 0; t < 7000; t++);
  3449  007C2C  0E00               	movlw	0
  3450  007C2E  6E15               	movwf	Start@t^0,c
  3451  007C30  0E00               	movlw	0
  3452  007C32  6E16               	movwf	(Start@t+1)^0,c
  3453  007C34  0E00               	movlw	0
  3454  007C36  6E17               	movwf	(Start@t+2)^0,c
  3455  007C38  0E00               	movlw	0
  3456  007C3A  6E18               	movwf	(Start@t+3)^0,c
  3457  007C3C  C015  F001         	movff	Start@t,___flge@ff1
  3458  007C40  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3459  007C44  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3460  007C48  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3461  007C4C  0E00               	movlw	0
  3462  007C4E  6E05               	movwf	___flge@ff2^0,c
  3463  007C50  0EC0               	movlw	192
  3464  007C52  6E06               	movwf	(___flge@ff2+1)^0,c
  3465  007C54  0EDA               	movlw	218
  3466  007C56  6E07               	movwf	(___flge@ff2+2)^0,c
  3467  007C58  0E45               	movlw	69
  3468  007C5A  6E08               	movwf	(___flge@ff2+3)^0,c
  3469  007C5C  EC84  F02D         	call	___flge	;wreg free
  3470  007C60  A0D8               	btfss	status,0,c
  3471  007C62  EF35  F03E         	goto	u3221
  3472  007C66  EF37  F03E         	goto	u3220
  3473  007C6A                     u3221:
  3474  007C6A  EF39  F03E         	goto	l2988
  3475  007C6E                     u3220:
  3476  007C6E  EF6C  F03E         	goto	l2990
  3477  007C72                     l2988:
  3478  007C72  C015  F001         	movff	Start@t,___fladd@b
  3479  007C76  C016  F002         	movff	Start@t+1,___fladd@b+1
  3480  007C7A  C017  F003         	movff	Start@t+2,___fladd@b+2
  3481  007C7E  C018  F004         	movff	Start@t+3,___fladd@b+3
  3482  007C82  0E00               	movlw	0
  3483  007C84  6E05               	movwf	___fladd@a^0,c
  3484  007C86  0E00               	movlw	0
  3485  007C88  6E06               	movwf	(___fladd@a+1)^0,c
  3486  007C8A  0E80               	movlw	128
  3487  007C8C  6E07               	movwf	(___fladd@a+2)^0,c
  3488  007C8E  0E3F               	movlw	63
  3489  007C90  6E08               	movwf	(___fladd@a+3)^0,c
  3490  007C92  ECCA  F034         	call	___fladd	;wreg free
  3491  007C96  C001  F015         	movff	?___fladd,Start@t
  3492  007C9A  C002  F016         	movff	?___fladd+1,Start@t+1
  3493  007C9E  C003  F017         	movff	?___fladd+2,Start@t+2
  3494  007CA2  C004  F018         	movff	?___fladd+3,Start@t+3
  3495  007CA6  C015  F001         	movff	Start@t,___flge@ff1
  3496  007CAA  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3497  007CAE  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3498  007CB2  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3499  007CB6  0E00               	movlw	0
  3500  007CB8  6E05               	movwf	___flge@ff2^0,c
  3501  007CBA  0EC0               	movlw	192
  3502  007CBC  6E06               	movwf	(___flge@ff2+1)^0,c
  3503  007CBE  0EDA               	movlw	218
  3504  007CC0  6E07               	movwf	(___flge@ff2+2)^0,c
  3505  007CC2  0E45               	movlw	69
  3506  007CC4  6E08               	movwf	(___flge@ff2+3)^0,c
  3507  007CC6  EC84  F02D         	call	___flge	;wreg free
  3508  007CCA  A0D8               	btfss	status,0,c
  3509  007CCC  EF6A  F03E         	goto	u3231
  3510  007CD0  EF6C  F03E         	goto	u3230
  3511  007CD4                     u3231:
  3512  007CD4  EF39  F03E         	goto	l2988
  3513  007CD8                     u3230:
  3514  007CD8                     l2990:
  3515                           
  3516                           ;main.c: 57:     lcdCommand(0xC0);
  3517  007CD8  0EC0               	movlw	192
  3518  007CDA  EC4F  F029         	call	_lcdCommand
  3519  007CDE                     
  3520                           ;main.c: 58:     lcdString("Perde para P e T");
  3521  007CDE  0EC3               	movlw	low STR_17
  3522  007CE0  6E0F               	movwf	lcdString@msg^0,c
  3523  007CE2  0E7E               	movlw	high STR_17
  3524  007CE4  6E10               	movwf	(lcdString@msg+1)^0,c
  3525  007CE6  EC42  F02A         	call	_lcdString	;wreg free
  3526  007CEA                     
  3527                           ;main.c: 59:     for (t = 0; t < 7000; t++);
  3528  007CEA  0E00               	movlw	0
  3529  007CEC  6E15               	movwf	Start@t^0,c
  3530  007CEE  0E00               	movlw	0
  3531  007CF0  6E16               	movwf	(Start@t+1)^0,c
  3532  007CF2  0E00               	movlw	0
  3533  007CF4  6E17               	movwf	(Start@t+2)^0,c
  3534  007CF6  0E00               	movlw	0
  3535  007CF8  6E18               	movwf	(Start@t+3)^0,c
  3536  007CFA  C015  F001         	movff	Start@t,___flge@ff1
  3537  007CFE  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3538  007D02  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3539  007D06  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3540  007D0A  0E00               	movlw	0
  3541  007D0C  6E05               	movwf	___flge@ff2^0,c
  3542  007D0E  0EC0               	movlw	192
  3543  007D10  6E06               	movwf	(___flge@ff2+1)^0,c
  3544  007D12  0EDA               	movlw	218
  3545  007D14  6E07               	movwf	(___flge@ff2+2)^0,c
  3546  007D16  0E45               	movlw	69
  3547  007D18  6E08               	movwf	(___flge@ff2+3)^0,c
  3548  007D1A  EC84  F02D         	call	___flge	;wreg free
  3549  007D1E  A0D8               	btfss	status,0,c
  3550  007D20  EF94  F03E         	goto	u3241
  3551  007D24  EF96  F03E         	goto	u3240
  3552  007D28                     u3241:
  3553  007D28  EF98  F03E         	goto	l3000
  3554  007D2C                     u3240:
  3555  007D2C  EFCB  F03E         	goto	l3002
  3556  007D30                     l3000:
  3557  007D30  C015  F001         	movff	Start@t,___fladd@b
  3558  007D34  C016  F002         	movff	Start@t+1,___fladd@b+1
  3559  007D38  C017  F003         	movff	Start@t+2,___fladd@b+2
  3560  007D3C  C018  F004         	movff	Start@t+3,___fladd@b+3
  3561  007D40  0E00               	movlw	0
  3562  007D42  6E05               	movwf	___fladd@a^0,c
  3563  007D44  0E00               	movlw	0
  3564  007D46  6E06               	movwf	(___fladd@a+1)^0,c
  3565  007D48  0E80               	movlw	128
  3566  007D4A  6E07               	movwf	(___fladd@a+2)^0,c
  3567  007D4C  0E3F               	movlw	63
  3568  007D4E  6E08               	movwf	(___fladd@a+3)^0,c
  3569  007D50  ECCA  F034         	call	___fladd	;wreg free
  3570  007D54  C001  F015         	movff	?___fladd,Start@t
  3571  007D58  C002  F016         	movff	?___fladd+1,Start@t+1
  3572  007D5C  C003  F017         	movff	?___fladd+2,Start@t+2
  3573  007D60  C004  F018         	movff	?___fladd+3,Start@t+3
  3574  007D64  C015  F001         	movff	Start@t,___flge@ff1
  3575  007D68  C016  F002         	movff	Start@t+1,___flge@ff1+1
  3576  007D6C  C017  F003         	movff	Start@t+2,___flge@ff1+2
  3577  007D70  C018  F004         	movff	Start@t+3,___flge@ff1+3
  3578  007D74  0E00               	movlw	0
  3579  007D76  6E05               	movwf	___flge@ff2^0,c
  3580  007D78  0EC0               	movlw	192
  3581  007D7A  6E06               	movwf	(___flge@ff2+1)^0,c
  3582  007D7C  0EDA               	movlw	218
  3583  007D7E  6E07               	movwf	(___flge@ff2+2)^0,c
  3584  007D80  0E45               	movlw	69
  3585  007D82  6E08               	movwf	(___flge@ff2+3)^0,c
  3586  007D84  EC84  F02D         	call	___flge	;wreg free
  3587  007D88  A0D8               	btfss	status,0,c
  3588  007D8A  EFC9  F03E         	goto	u3251
  3589  007D8E  EFCB  F03E         	goto	u3250
  3590  007D92                     u3251:
  3591  007D92  EF98  F03E         	goto	l3000
  3592  007D96                     u3250:
  3593  007D96                     l3002:
  3594                           
  3595                           ;main.c: 60:     lcdInit();
  3596  007D96  EC34  F02C         	call	_lcdInit	;wreg free
  3597  007D9A                     
  3598                           ;main.c: 61:     lcdString("Num. de jogos:  ");
  3599  007D9A  0E08               	movlw	low STR_18
  3600  007D9C  6E0F               	movwf	lcdString@msg^0,c
  3601  007D9E  0E7E               	movlw	high STR_18
  3602  007DA0  6E10               	movwf	(lcdString@msg+1)^0,c
  3603  007DA2  EC42  F02A         	call	_lcdString	;wreg free
  3604  007DA6                     
  3605                           ;main.c: 62:     lcdCommand(0xC0);
  3606  007DA6  0EC0               	movlw	192
  3607  007DA8  EC4F  F029         	call	_lcdCommand
  3608                           
  3609                           ;main.c: 63:     lcdString("Y=1|X=3|A=7|B=99");
  3610  007DAC  0E6E               	movlw	low STR_19
  3611  007DAE  6E0F               	movwf	lcdString@msg^0,c
  3612  007DB0  0E7E               	movlw	high STR_19
  3613  007DB2  6E10               	movwf	(lcdString@msg+1)^0,c
  3614  007DB4  EC42  F02A         	call	_lcdString	;wreg free
  3615  007DB8  0012               	return		;funcret
  3616  007DBA                     __end_of_Start:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _NumJogos *****************
  3620 ;; Defined at:
  3621 ;;		line 66 in file "main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  t               4   28[COMRAM] volatile float 
  3626 ;;  tec             2   26[COMRAM] unsigned int 
  3627 ;;  at              2   24[COMRAM] unsigned int 
  3628 ;;  ant             2   21[COMRAM] unsigned int 
  3629 ;;  fim             1   23[COMRAM] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2   16[COMRAM] unsigned int 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3639 ;;      Params:         2       0       0       0       0       0       0
  3640 ;;      Locals:        11       0       0       0       0       0       0
  3641 ;;      Temps:          3       0       0       0       0       0       0
  3642 ;;      Totals:        16       0       0       0       0       0       0
  3643 ;;Total ram usage:       16 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 4
  3646 ;; This function calls:
  3647 ;;		___fladd
  3648 ;;		___flge
  3649 ;;		_kpDebounce
  3650 ;;		_kpRead
  3651 ;;		_kpReadKey
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text6
  3658  006128                     __ptext6:
  3659                           	callstack 0
  3660  006128                     _NumJogos:
  3661                           	callstack 26
  3662  006128  0E00               	movlw	0
  3663  00612A  6E17               	movwf	(NumJogos@ant+1)^0,c
  3664  00612C  0E00               	movlw	0
  3665  00612E  6E16               	movwf	NumJogos@ant^0,c
  3666                           
  3667                           ;main.c: 69:     volatile float t;;main.c: 70:     for (t = 0; t < 5000; t++) {
  3668  006130  0E00               	movlw	0
  3669  006132  6E1D               	movwf	NumJogos@t^0,c	;volatile
  3670  006134  0E00               	movlw	0
  3671  006136  6E1E               	movwf	(NumJogos@t+1)^0,c	;volatile
  3672  006138  0E00               	movlw	0
  3673  00613A  6E1F               	movwf	(NumJogos@t+2)^0,c	;volatile
  3674  00613C  0E00               	movlw	0
  3675  00613E  6E20               	movwf	(NumJogos@t+3)^0,c	;volatile
  3676  006140  C01D  F001         	movff	NumJogos@t,___flge@ff1	;volatile
  3677  006144  C01E  F002         	movff	NumJogos@t+1,___flge@ff1+1	;volatile
  3678  006148  C01F  F003         	movff	NumJogos@t+2,___flge@ff1+2	;volatile
  3679  00614C  C020  F004         	movff	NumJogos@t+3,___flge@ff1+3	;volatile
  3680  006150  0E00               	movlw	0
  3681  006152  6E05               	movwf	___flge@ff2^0,c
  3682  006154  0E40               	movlw	64
  3683  006156  6E06               	movwf	(___flge@ff2+1)^0,c
  3684  006158  0E9C               	movlw	156
  3685  00615A  6E07               	movwf	(___flge@ff2+2)^0,c
  3686  00615C  0E45               	movlw	69
  3687  00615E  6E08               	movwf	(___flge@ff2+3)^0,c
  3688  006160  EC84  F02D         	call	___flge	;wreg free
  3689  006164  A0D8               	btfss	status,0,c
  3690  006166  EFB7  F030         	goto	u3261
  3691  00616A  EFB9  F030         	goto	u3260
  3692  00616E                     u3261:
  3693  00616E  EFBB  F030         	goto	l3014
  3694  006172                     u3260:
  3695  006172  EF56  F031         	goto	l3064
  3696  006176                     l3014:
  3697                           
  3698                           ;main.c: 71:         kpDebounce();
  3699  006176  EC8E  F02E         	call	_kpDebounce	;wreg free
  3700  00617A                     
  3701                           ;main.c: 72:         at = kpRead();
  3702  00617A  EC3F  F029         	call	_kpRead	;wreg free
  3703  00617E  C001  F019         	movff	?_kpRead,NumJogos@at
  3704  006182  C002  F01A         	movff	?_kpRead+1,NumJogos@at+1
  3705                           
  3706                           ;main.c: 73:         if (at != ant) {
  3707  006186  5016               	movf	NumJogos@ant^0,w,c
  3708  006188  1819               	xorwf	NumJogos@at^0,w,c
  3709  00618A  E109               	bnz	u3270
  3710  00618C  5017               	movf	(NumJogos@ant+1)^0,w,c
  3711  00618E  181A               	xorwf	(NumJogos@at+1)^0,w,c
  3712  006190  B4D8               	btfsc	status,2,c
  3713  006192  EFCD  F030         	goto	u3271
  3714  006196  EFCF  F030         	goto	u3270
  3715  00619A                     u3271:
  3716  00619A  EF09  F031         	goto	l3036
  3717  00619E                     u3270:
  3718  00619E                     
  3719                           ;main.c: 74:             for (tec = 5; tec < 10; tec++) {
  3720  00619E  0E00               	movlw	0
  3721  0061A0  6E1C               	movwf	(NumJogos@tec+1)^0,c
  3722  0061A2  0E05               	movlw	5
  3723  0061A4  6E1B               	movwf	NumJogos@tec^0,c
  3724  0061A6                     l3024:
  3725                           
  3726                           ;main.c: 75:                 if (((at) & (1<<(tec)))) {
  3727  0061A6  C01B  F013         	movff	NumJogos@tec,??_NumJogos
  3728  0061AA  0E01               	movlw	1
  3729  0061AC  6E14               	movwf	(??_NumJogos+1)^0,c
  3730  0061AE  0E00               	movlw	0
  3731  0061B0  6E15               	movwf	(??_NumJogos+2)^0,c
  3732  0061B2  2A13               	incf	??_NumJogos^0,f,c
  3733  0061B4  EFDF  F030         	goto	u3284
  3734  0061B8                     u3285:
  3735  0061B8  90D8               	bcf	status,0,c
  3736  0061BA  3614               	rlcf	(??_NumJogos+1)^0,f,c
  3737  0061BC  3615               	rlcf	(??_NumJogos+2)^0,f,c
  3738  0061BE                     u3284:
  3739  0061BE  2E13               	decfsz	??_NumJogos^0,f,c
  3740  0061C0  EFDC  F030         	goto	u3285
  3741  0061C4  5019               	movf	NumJogos@at^0,w,c
  3742  0061C6  1614               	andwf	(??_NumJogos+1)^0,f,c
  3743  0061C8  501A               	movf	(NumJogos@at+1)^0,w,c
  3744  0061CA  1615               	andwf	(??_NumJogos+2)^0,f,c
  3745  0061CC  5014               	movf	(??_NumJogos+1)^0,w,c
  3746  0061CE  1015               	iorwf	(??_NumJogos+2)^0,w,c
  3747  0061D0  B4D8               	btfsc	status,2,c
  3748  0061D2  EFED  F030         	goto	u3291
  3749  0061D6  EFEF  F030         	goto	u3290
  3750  0061DA                     u3291:
  3751  0061DA  EFFC  F030         	goto	l3032
  3752  0061DE                     u3290:
  3753  0061DE                     
  3754                           ;main.c: 76:                     fim = kpReadKey();
  3755  0061DE  EC5D  F02B         	call	_kpReadKey	;wreg free
  3756  0061E2  6E18               	movwf	NumJogos@fim^0,c
  3757  0061E4                     
  3758                           ;main.c: 77:                     kpDebounce();
  3759  0061E4  EC8E  F02E         	call	_kpDebounce	;wreg free
  3760  0061E8                     
  3761                           ;main.c: 78:                     t = 5000;
  3762  0061E8  0E00               	movlw	0
  3763  0061EA  6E1D               	movwf	NumJogos@t^0,c	;volatile
  3764  0061EC  0E40               	movlw	64
  3765  0061EE  6E1E               	movwf	(NumJogos@t+1)^0,c	;volatile
  3766  0061F0  0E9C               	movlw	156
  3767  0061F2  6E1F               	movwf	(NumJogos@t+2)^0,c	;volatile
  3768  0061F4  0E45               	movlw	69
  3769  0061F6  6E20               	movwf	(NumJogos@t+3)^0,c	;volatile
  3770  0061F8                     l3032:
  3771                           
  3772                           ;main.c: 80:             }
  3773  0061F8  4A1B               	infsnz	NumJogos@tec^0,f,c
  3774  0061FA  2A1C               	incf	(NumJogos@tec+1)^0,f,c
  3775  0061FC  501C               	movf	(NumJogos@tec+1)^0,w,c
  3776  0061FE  E109               	bnz	u3300
  3777  006200  0E0A               	movlw	10
  3778  006202  5C1B               	subwf	NumJogos@tec^0,w,c
  3779  006204  A0D8               	btfss	status,0,c
  3780  006206  EF07  F031         	goto	u3301
  3781  00620A  EF09  F031         	goto	u3300
  3782  00620E                     u3301:
  3783  00620E  EFD3  F030         	goto	l3024
  3784  006212                     u3300:
  3785  006212                     l3036:
  3786                           
  3787                           ;main.c: 82:     }
  3788  006212  C01D  F001         	movff	NumJogos@t,___fladd@b	;volatile
  3789  006216  C01E  F002         	movff	NumJogos@t+1,___fladd@b+1	;volatile
  3790  00621A  C01F  F003         	movff	NumJogos@t+2,___fladd@b+2	;volatile
  3791  00621E  C020  F004         	movff	NumJogos@t+3,___fladd@b+3	;volatile
  3792  006222  0E00               	movlw	0
  3793  006224  6E05               	movwf	___fladd@a^0,c
  3794  006226  0E00               	movlw	0
  3795  006228  6E06               	movwf	(___fladd@a+1)^0,c
  3796  00622A  0E80               	movlw	128
  3797  00622C  6E07               	movwf	(___fladd@a+2)^0,c
  3798  00622E  0E3F               	movlw	63
  3799  006230  6E08               	movwf	(___fladd@a+3)^0,c
  3800  006232  ECCA  F034         	call	___fladd	;wreg free
  3801  006236  C001  F01D         	movff	?___fladd,NumJogos@t	;volatile
  3802  00623A  C002  F01E         	movff	?___fladd+1,NumJogos@t+1	;volatile
  3803  00623E  C003  F01F         	movff	?___fladd+2,NumJogos@t+2	;volatile
  3804  006242  C004  F020         	movff	?___fladd+3,NumJogos@t+3	;volatile
  3805  006246  C01D  F001         	movff	NumJogos@t,___flge@ff1	;volatile
  3806  00624A  C01E  F002         	movff	NumJogos@t+1,___flge@ff1+1	;volatile
  3807  00624E  C01F  F003         	movff	NumJogos@t+2,___flge@ff1+2	;volatile
  3808  006252  C020  F004         	movff	NumJogos@t+3,___flge@ff1+3	;volatile
  3809  006256  0E00               	movlw	0
  3810  006258  6E05               	movwf	___flge@ff2^0,c
  3811  00625A  0E40               	movlw	64
  3812  00625C  6E06               	movwf	(___flge@ff2+1)^0,c
  3813  00625E  0E9C               	movlw	156
  3814  006260  6E07               	movwf	(___flge@ff2+2)^0,c
  3815  006262  0E45               	movlw	69
  3816  006264  6E08               	movwf	(___flge@ff2+3)^0,c
  3817  006266  EC84  F02D         	call	___flge	;wreg free
  3818  00626A  A0D8               	btfss	status,0,c
  3819  00626C  EF3A  F031         	goto	u3311
  3820  006270  EF3C  F031         	goto	u3310
  3821  006274                     u3311:
  3822  006274  EFBB  F030         	goto	l3014
  3823  006278                     u3310:
  3824  006278  EF56  F031         	goto	l3064
  3825  00627C                     l3038:
  3826                           
  3827                           ;main.c: 85:             return 3;
  3828  00627C  0E00               	movlw	0
  3829  00627E  6E12               	movwf	(?_NumJogos+1)^0,c
  3830  006280  0E03               	movlw	3
  3831  006282  6E11               	movwf	?_NumJogos^0,c
  3832  006284  EF73  F031         	goto	l290
  3833  006288                     l3044:
  3834                           
  3835                           ;main.c: 88:             return 1;
  3836  006288  0E00               	movlw	0
  3837  00628A  6E12               	movwf	(?_NumJogos+1)^0,c
  3838  00628C  0E01               	movlw	1
  3839  00628E  6E11               	movwf	?_NumJogos^0,c
  3840  006290  EF73  F031         	goto	l290
  3841  006294                     l3050:
  3842                           
  3843                           ;main.c: 91:             return 99;
  3844  006294  0E00               	movlw	0
  3845  006296  6E12               	movwf	(?_NumJogos+1)^0,c
  3846  006298  0E63               	movlw	99
  3847  00629A  6E11               	movwf	?_NumJogos^0,c
  3848  00629C  EF73  F031         	goto	l290
  3849  0062A0                     l3056:
  3850                           
  3851                           ;main.c: 94:             return 7;
  3852  0062A0  0E00               	movlw	0
  3853  0062A2  6E12               	movwf	(?_NumJogos+1)^0,c
  3854  0062A4  0E07               	movlw	7
  3855  0062A6  6E11               	movwf	?_NumJogos^0,c
  3856  0062A8  EF73  F031         	goto	l290
  3857  0062AC                     l3064:
  3858  0062AC  5018               	movf	NumJogos@fim^0,w,c
  3859  0062AE  6E13               	movwf	??_NumJogos^0,c
  3860  0062B0  6A14               	clrf	(??_NumJogos+1)^0,c
  3861                           
  3862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3863                           ; Switch size 1, requested type "simple"
  3864                           ; Number of cases is 1, Range of values is 0 to 0
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            4     3 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  0062B2  5014               	movf	(??_NumJogos+1)^0,w,c
  3870  0062B4  0A00               	xorlw	0	; case 0
  3871  0062B6  B4D8               	btfsc	status,2,c
  3872  0062B8  EF60  F031         	goto	l3472
  3873  0062BC  EF73  F031         	goto	l290
  3874  0062C0                     l3472:
  3875                           
  3876                           ; Switch size 1, requested type "simple"
  3877                           ; Number of cases is 4, Range of values is 65 to 89
  3878                           ; switch strategies available:
  3879                           ; Name         Instructions Cycles
  3880                           ; simple_byte           13     7 (average)
  3881                           ;	Chosen strategy is simple_byte
  3882  0062C0  5013               	movf	??_NumJogos^0,w,c
  3883  0062C2  0A41               	xorlw	65	; case 65
  3884  0062C4  B4D8               	btfsc	status,2,c
  3885  0062C6  EF50  F031         	goto	l3056
  3886  0062CA  0A03               	xorlw	3	; case 66
  3887  0062CC  B4D8               	btfsc	status,2,c
  3888  0062CE  EF4A  F031         	goto	l3050
  3889  0062D2  0A1A               	xorlw	26	; case 88
  3890  0062D4  B4D8               	btfsc	status,2,c
  3891  0062D6  EF3E  F031         	goto	l3038
  3892  0062DA  0A01               	xorlw	1	; case 89
  3893  0062DC  B4D8               	btfsc	status,2,c
  3894  0062DE  EF44  F031         	goto	l3044
  3895  0062E2  EF73  F031         	goto	l290
  3896  0062E6                     l290:
  3897  0062E6  0012               	return		;funcret
  3898  0062E8                     __end_of_NumJogos:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _kpReadKey *****************
  3902 ;; Defined at:
  3903 ;;		line 17 in file "keypad.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2    3[COMRAM] int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3917 ;;      Params:         0       0       0       0       0       0       0
  3918 ;;      Locals:         2       0       0       0       0       0       0
  3919 ;;      Temps:          3       0       0       0       0       0       0
  3920 ;;      Totals:         5       0       0       0       0       0       0
  3921 ;;Total ram usage:        5 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_NumJogos
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text7
  3932  0056BA                     __ptext7:
  3933                           	callstack 0
  3934  0056BA                     _kpReadKey:
  3935                           	callstack 30
  3936  0056BA                     
  3937                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3938  0056BA  0E00               	movlw	0
  3939  0056BC  6E05               	movwf	(kpReadKey@i+1)^0,c
  3940  0056BE  0E00               	movlw	0
  3941  0056C0  6E04               	movwf	kpReadKey@i^0,c
  3942  0056C2                     l1338:
  3943                           
  3944                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3945  0056C2  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  3946  0056C6  0E01               	movlw	1
  3947  0056C8  6E02               	movwf	(??_kpReadKey+1)^0,c
  3948  0056CA  0E00               	movlw	0
  3949  0056CC  6E03               	movwf	(??_kpReadKey+2)^0,c
  3950  0056CE  2A01               	incf	??_kpReadKey^0,f,c
  3951  0056D0  EF6D  F02B         	goto	u634
  3952  0056D4                     u635:
  3953  0056D4  90D8               	bcf	status,0,c
  3954  0056D6  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  3955  0056D8  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  3956  0056DA                     u634:
  3957  0056DA  2E01               	decfsz	??_kpReadKey^0,f,c
  3958  0056DC  EF6A  F02B         	goto	u635
  3959  0056E0  503E               	movf	_keys^0,w,c
  3960  0056E2  1602               	andwf	(??_kpReadKey+1)^0,f,c
  3961  0056E4  503F               	movf	(_keys+1)^0,w,c
  3962  0056E6  1603               	andwf	(??_kpReadKey+2)^0,f,c
  3963  0056E8  5002               	movf	(??_kpReadKey+1)^0,w,c
  3964  0056EA  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  3965  0056EC  B4D8               	btfsc	status,2,c
  3966  0056EE  EF7B  F02B         	goto	u641
  3967  0056F2  EF7D  F02B         	goto	u640
  3968  0056F6                     u641:
  3969  0056F6  EF87  F02B         	goto	l1344
  3970  0056FA                     u640:
  3971  0056FA                     
  3972                           ;keypad.c: 21:    return charKey[i];
  3973  0056FA  0ECB               	movlw	low _charKey
  3974  0056FC  2404               	addwf	kpReadKey@i^0,w,c
  3975  0056FE  6EF6               	movwf	tblptrl,c
  3976  005700  0E7D               	movlw	high _charKey
  3977  005702  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  3978  005704  6EF7               	movwf	tblptrh,c
  3979  005706                     	if	0	;There are less than 3 active tblptr bytes
  3980  005706                     	endif
  3981  005706  0008               	tblrd		*
  3982  005708  50F5               	movf	tablat,w,c
  3983  00570A  EF98  F02B         	goto	l99
  3984  00570E                     l1344:
  3985                           
  3986                           ;keypad.c: 23:  }
  3987  00570E  4A04               	infsnz	kpReadKey@i^0,f,c
  3988  005710  2A05               	incf	(kpReadKey@i+1)^0,f,c
  3989  005712  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  3990  005714  EF95  F02B         	goto	u651
  3991  005718  5005               	movf	(kpReadKey@i+1)^0,w,c
  3992  00571A  E109               	bnz	u650
  3993  00571C  0E0A               	movlw	10
  3994  00571E  5C04               	subwf	kpReadKey@i^0,w,c
  3995  005720  A0D8               	btfss	status,0,c
  3996  005722  EF95  F02B         	goto	u651
  3997  005726  EF97  F02B         	goto	u650
  3998  00572A                     u651:
  3999  00572A  EF61  F02B         	goto	l1338
  4000  00572E                     u650:
  4001  00572E                     
  4002                           ;keypad.c: 25:  return 0;
  4003  00572E  0E00               	movlw	0
  4004  005730                     l99:
  4005  005730  0012               	return		;funcret
  4006  005732                     __end_of_kpReadKey:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _kpRead *****************
  4010 ;; Defined at:
  4011 ;;		line 14 in file "keypad.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  2    0[COMRAM] unsigned int 
  4018 ;; Registers used:
  4019 ;;		None
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4025 ;;      Params:         2       0       0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0
  4028 ;;      Totals:         2       0       0       0       0       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_NumJogos
  4035 ;;		_main
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text8
  4040  00527E                     __ptext8:
  4041                           	callstack 0
  4042  00527E                     _kpRead:
  4043                           	callstack 30
  4044  00527E                     
  4045                           ;keypad.c: 15:     return keys;
  4046  00527E  C03E  F001         	movff	_keys,?_kpRead
  4047  005282  C03F  F002         	movff	_keys+1,?_kpRead+1
  4048  005286  0012               	return		;funcret
  4049  005288                     __end_of_kpRead:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _kpDebounce *****************
  4053 ;; Defined at:
  4054 ;;		line 27 in file "keypad.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  i               2   12[COMRAM] int 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4068 ;;      Params:         0       0       0       0       0       0       0
  4069 ;;      Locals:         2       0       0       0       0       0       0
  4070 ;;      Temps:          3       0       0       0       0       0       0
  4071 ;;      Totals:         5       0       0       0       0       0       0
  4072 ;;Total ram usage:        5 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 3
  4075 ;; This function calls:
  4076 ;;		_digitalRead
  4077 ;;		_soWrite
  4078 ;; This function is called by:
  4079 ;;		_NumJogos
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text9
  4085  005D1C                     __ptext9:
  4086                           	callstack 0
  4087  005D1C                     _kpDebounce:
  4088                           	callstack 27
  4089  005D1C                     
  4090                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4091  005D1C  0E00               	movlw	0
  4092  005D1E  6E3D               	movwf	(kpDebounce@newRead+1)^0,c
  4093  005D20  0E00               	movlw	0
  4094  005D22  6E3C               	movwf	kpDebounce@newRead^0,c
  4095                           
  4096                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4097  005D24  0E00               	movlw	0
  4098  005D26  6E0E               	movwf	(kpDebounce@i+1)^0,c
  4099  005D28  0E00               	movlw	0
  4100  005D2A  6E0D               	movwf	kpDebounce@i^0,c
  4101  005D2C                     l2574:
  4102  005D2C  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  4103  005D2E  EFA2  F02E         	goto	u2511
  4104  005D32  500E               	movf	(kpDebounce@i+1)^0,w,c
  4105  005D34  E109               	bnz	u2510
  4106  005D36  0E05               	movlw	5
  4107  005D38  5C0D               	subwf	kpDebounce@i^0,w,c
  4108  005D3A  A0D8               	btfss	status,0,c
  4109  005D3C  EFA2  F02E         	goto	u2511
  4110  005D40  EFA4  F02E         	goto	u2510
  4111  005D44                     u2511:
  4112  005D44  EFA6  F02E         	goto	l2578
  4113  005D48                     u2510:
  4114  005D48  EF07  F02F         	goto	l2590
  4115  005D4C                     l2578:
  4116                           
  4117                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4118  005D4C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4119  005D50  0E03               	movlw	3
  4120  005D52  260A               	addwf	??_kpDebounce^0,f,c
  4121  005D54  0E01               	movlw	1
  4122  005D56  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4123  005D58  0E00               	movlw	0
  4124  005D5A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4125  005D5C  2A0A               	incf	??_kpDebounce^0,f,c
  4126  005D5E  EFB4  F02E         	goto	u2524
  4127  005D62                     u2525:
  4128  005D62  90D8               	bcf	status,0,c
  4129  005D64  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4130  005D66  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4131  005D68                     u2524:
  4132  005D68  2E0A               	decfsz	??_kpDebounce^0,f,c
  4133  005D6A  EFB1  F02E         	goto	u2525
  4134  005D6E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  4135  005D72  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  4136  005D76  EC1B  F02A         	call	_soWrite	;wreg free
  4137                           
  4138                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4139  005D7A  0E00               	movlw	0
  4140  005D7C  6E02               	movwf	(digitalRead@pin+1)^0,c
  4141  005D7E  0E0A               	movlw	10
  4142  005D80  6E01               	movwf	digitalRead@pin^0,c
  4143  005D82  EC29  F02F         	call	_digitalRead	;wreg free
  4144  005D86  5001               	movf	?_digitalRead^0,w,c
  4145  005D88  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4146  005D8A  B4D8               	btfsc	status,2,c
  4147  005D8C  EFCA  F02E         	goto	u2531
  4148  005D90  EFCC  F02E         	goto	u2530
  4149  005D94                     u2531:
  4150  005D94  EFDF  F02E         	goto	l2582
  4151  005D98                     u2530:
  4152  005D98                     
  4153                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4154  005D98  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4155  005D9C  0E01               	movlw	1
  4156  005D9E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4157  005DA0  0E00               	movlw	0
  4158  005DA2  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4159  005DA4  2A0A               	incf	??_kpDebounce^0,f,c
  4160  005DA6  EFD8  F02E         	goto	u2544
  4161  005DAA                     u2545:
  4162  005DAA  90D8               	bcf	status,0,c
  4163  005DAC  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4164  005DAE  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4165  005DB0                     u2544:
  4166  005DB0  2E0A               	decfsz	??_kpDebounce^0,f,c
  4167  005DB2  EFD5  F02E         	goto	u2545
  4168  005DB6  500B               	movf	(??_kpDebounce+1)^0,w,c
  4169  005DB8  123C               	iorwf	kpDebounce@newRead^0,f,c
  4170  005DBA  500C               	movf	(??_kpDebounce+2)^0,w,c
  4171  005DBC  123D               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4172  005DBE                     l2582:
  4173                           
  4174                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4175  005DBE  0E00               	movlw	0
  4176  005DC0  6E02               	movwf	(digitalRead@pin+1)^0,c
  4177  005DC2  0E09               	movlw	9
  4178  005DC4  6E01               	movwf	digitalRead@pin^0,c
  4179  005DC6  EC29  F02F         	call	_digitalRead	;wreg free
  4180  005DCA  5001               	movf	?_digitalRead^0,w,c
  4181  005DCC  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4182  005DCE  B4D8               	btfsc	status,2,c
  4183  005DD0  EFEC  F02E         	goto	u2551
  4184  005DD4  EFEE  F02E         	goto	u2550
  4185  005DD8                     u2551:
  4186  005DD8  EF03  F02F         	goto	l2586
  4187  005DDC                     u2550:
  4188  005DDC                     
  4189                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4190  005DDC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4191  005DE0  0E05               	movlw	5
  4192  005DE2  260A               	addwf	??_kpDebounce^0,f,c
  4193  005DE4  0E01               	movlw	1
  4194  005DE6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4195  005DE8  0E00               	movlw	0
  4196  005DEA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4197  005DEC  2A0A               	incf	??_kpDebounce^0,f,c
  4198  005DEE  EFFC  F02E         	goto	u2564
  4199  005DF2                     u2565:
  4200  005DF2  90D8               	bcf	status,0,c
  4201  005DF4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4202  005DF6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4203  005DF8                     u2564:
  4204  005DF8  2E0A               	decfsz	??_kpDebounce^0,f,c
  4205  005DFA  EFF9  F02E         	goto	u2565
  4206  005DFE  500B               	movf	(??_kpDebounce+1)^0,w,c
  4207  005E00  123C               	iorwf	kpDebounce@newRead^0,f,c
  4208  005E02  500C               	movf	(??_kpDebounce+2)^0,w,c
  4209  005E04  123D               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4210  005E06                     l2586:
  4211                           
  4212                           ;keypad.c: 42:     }
  4213  005E06  4A0D               	infsnz	kpDebounce@i^0,f,c
  4214  005E08  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  4215  005E0A  EF96  F02E         	goto	l2574
  4216  005E0E                     l2590:
  4217                           
  4218                           ;keypad.c: 43:     if (oldRead == newRead) {
  4219  005E0E  503C               	movf	kpDebounce@newRead^0,w,c
  4220  005E10  183A               	xorwf	kpDebounce@oldRead^0,w,c
  4221  005E12  E107               	bnz	u2571
  4222  005E14  503D               	movf	(kpDebounce@newRead+1)^0,w,c
  4223  005E16  183B               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4224  005E18  A4D8               	btfss	status,2,c
  4225  005E1A  EF11  F02F         	goto	u2571
  4226  005E1E  EF13  F02F         	goto	u2570
  4227  005E22                     u2571:
  4228  005E22  EF16  F02F         	goto	l2594
  4229  005E26                     u2570:
  4230  005E26                     
  4231                           ;keypad.c: 44:         tempo--;
  4232  005E26  0645               	decf	kpDebounce@tempo^0,f,c
  4233                           
  4234                           ;keypad.c: 45:     } else {
  4235  005E28  EF1C  F02F         	goto	l113
  4236  005E2C                     l2594:
  4237                           
  4238                           ;keypad.c: 46:         tempo = 1;
  4239  005E2C  0E01               	movlw	1
  4240  005E2E  6E45               	movwf	kpDebounce@tempo^0,c
  4241  005E30                     
  4242                           ;keypad.c: 47:         oldRead = newRead;
  4243  005E30  C03C  F03A         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4244  005E34  C03D  F03B         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4245  005E38                     l113:
  4246                           
  4247                           ;keypad.c: 49:     if (tempo == 0) {
  4248  005E38  5045               	movf	kpDebounce@tempo^0,w,c
  4249  005E3A  A4D8               	btfss	status,2,c
  4250  005E3C  EF22  F02F         	goto	u2581
  4251  005E40  EF24  F02F         	goto	u2580
  4252  005E44                     u2581:
  4253  005E44  EF28  F02F         	goto	l115
  4254  005E48                     u2580:
  4255  005E48                     
  4256                           ;keypad.c: 50:         keys = oldRead;
  4257  005E48  C03A  F03E         	movff	kpDebounce@oldRead,_keys
  4258  005E4C  C03B  F03F         	movff	kpDebounce@oldRead+1,_keys+1
  4259  005E50                     l115:
  4260  005E50  0012               	return		;funcret
  4261  005E52                     __end_of_kpDebounce:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _digitalRead *****************
  4265 ;; Defined at:
  4266 ;;		line 39 in file "io.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  pin             2    0[COMRAM] int 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    0[COMRAM] int 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4280 ;;      Params:         2       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0
  4282 ;;      Temps:          3       0       0       0       0       0       0
  4283 ;;      Totals:         5       0       0       0       0       0       0
  4284 ;;Total ram usage:        5 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_kpDebounce
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text10
  4294  005E52                     __ptext10:
  4295                           	callstack 0
  4296  005E52                     _digitalRead:
  4297                           	callstack 29
  4298  005E52                     
  4299                           ;io.c: 40:     if(pin <8){
  4300  005E52  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4301  005E54  EF37  F02F         	goto	u2310
  4302  005E58  5002               	movf	(digitalRead@pin+1)^0,w,c
  4303  005E5A  E107               	bnz	u2311
  4304  005E5C  0E08               	movlw	8
  4305  005E5E  5C01               	subwf	digitalRead@pin^0,w,c
  4306  005E60  B0D8               	btfsc	status,0,c
  4307  005E62  EF35  F02F         	goto	u2311
  4308  005E66  EF37  F02F         	goto	u2310
  4309  005E6A                     u2311:
  4310  005E6A  EF4B  F02F         	goto	l2440
  4311  005E6E                     u2310:
  4312  005E6E                     
  4313                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4314  005E6E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4315  005E72  0E01               	movlw	1
  4316  005E74  6E04               	movwf	(??_digitalRead+1)^0,c
  4317  005E76  2A03               	incf	??_digitalRead^0,f,c
  4318  005E78  EF40  F02F         	goto	u2324
  4319  005E7C                     u2325:
  4320  005E7C  90D8               	bcf	status,0,c
  4321  005E7E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4322  005E80                     u2324:
  4323  005E80  2E03               	decfsz	??_digitalRead^0,f,c
  4324  005E82  EF3E  F02F         	goto	u2325
  4325  005E86  5004               	movf	(??_digitalRead+1)^0,w,c
  4326  005E88  1480               	andwf	128,w,c	;volatile
  4327  005E8A  6E05               	movwf	(??_digitalRead+2)^0,c
  4328  005E8C  5005               	movf	(??_digitalRead+2)^0,w,c
  4329  005E8E  6E01               	movwf	?_digitalRead^0,c
  4330  005E90  6A02               	clrf	(?_digitalRead+1)^0,c
  4331  005E92  EFDD  F02F         	goto	l46
  4332  005E96                     l2440:
  4333  005E96  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4334  005E98  EF59  F02F         	goto	u2330
  4335  005E9C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4336  005E9E  E107               	bnz	u2331
  4337  005EA0  0E10               	movlw	16
  4338  005EA2  5C01               	subwf	digitalRead@pin^0,w,c
  4339  005EA4  B0D8               	btfsc	status,0,c
  4340  005EA6  EF57  F02F         	goto	u2331
  4341  005EAA  EF59  F02F         	goto	u2330
  4342  005EAE                     u2331:
  4343  005EAE  EF6F  F02F         	goto	l2448
  4344  005EB2                     u2330:
  4345  005EB2                     
  4346                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4347  005EB2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4348  005EB6  0EF8               	movlw	-8
  4349  005EB8  2603               	addwf	??_digitalRead^0,f,c
  4350  005EBA  0E01               	movlw	1
  4351  005EBC  6E04               	movwf	(??_digitalRead+1)^0,c
  4352  005EBE  2A03               	incf	??_digitalRead^0,f,c
  4353  005EC0  EF64  F02F         	goto	u2344
  4354  005EC4                     u2345:
  4355  005EC4  90D8               	bcf	status,0,c
  4356  005EC6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4357  005EC8                     u2344:
  4358  005EC8  2E03               	decfsz	??_digitalRead^0,f,c
  4359  005ECA  EF62  F02F         	goto	u2345
  4360  005ECE  5004               	movf	(??_digitalRead+1)^0,w,c
  4361  005ED0  1481               	andwf	129,w,c	;volatile
  4362  005ED2  6E05               	movwf	(??_digitalRead+2)^0,c
  4363  005ED4  5005               	movf	(??_digitalRead+2)^0,w,c
  4364  005ED6  6E01               	movwf	?_digitalRead^0,c
  4365  005ED8  6A02               	clrf	(?_digitalRead+1)^0,c
  4366  005EDA  EFDD  F02F         	goto	l46
  4367  005EDE                     l2448:
  4368  005EDE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4369  005EE0  EF7D  F02F         	goto	u2350
  4370  005EE4  5002               	movf	(digitalRead@pin+1)^0,w,c
  4371  005EE6  E107               	bnz	u2351
  4372  005EE8  0E18               	movlw	24
  4373  005EEA  5C01               	subwf	digitalRead@pin^0,w,c
  4374  005EEC  B0D8               	btfsc	status,0,c
  4375  005EEE  EF7B  F02F         	goto	u2351
  4376  005EF2  EF7D  F02F         	goto	u2350
  4377  005EF6                     u2351:
  4378  005EF6  EF93  F02F         	goto	l2456
  4379  005EFA                     u2350:
  4380  005EFA                     
  4381                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4382  005EFA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4383  005EFE  0EF0               	movlw	-16
  4384  005F00  2603               	addwf	??_digitalRead^0,f,c
  4385  005F02  0E01               	movlw	1
  4386  005F04  6E04               	movwf	(??_digitalRead+1)^0,c
  4387  005F06  2A03               	incf	??_digitalRead^0,f,c
  4388  005F08  EF88  F02F         	goto	u2364
  4389  005F0C                     u2365:
  4390  005F0C  90D8               	bcf	status,0,c
  4391  005F0E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4392  005F10                     u2364:
  4393  005F10  2E03               	decfsz	??_digitalRead^0,f,c
  4394  005F12  EF86  F02F         	goto	u2365
  4395  005F16  5004               	movf	(??_digitalRead+1)^0,w,c
  4396  005F18  1482               	andwf	130,w,c	;volatile
  4397  005F1A  6E05               	movwf	(??_digitalRead+2)^0,c
  4398  005F1C  5005               	movf	(??_digitalRead+2)^0,w,c
  4399  005F1E  6E01               	movwf	?_digitalRead^0,c
  4400  005F20  6A02               	clrf	(?_digitalRead+1)^0,c
  4401  005F22  EFDD  F02F         	goto	l46
  4402  005F26                     l2456:
  4403  005F26  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4404  005F28  EFA1  F02F         	goto	u2370
  4405  005F2C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4406  005F2E  E107               	bnz	u2371
  4407  005F30  0E20               	movlw	32
  4408  005F32  5C01               	subwf	digitalRead@pin^0,w,c
  4409  005F34  B0D8               	btfsc	status,0,c
  4410  005F36  EF9F  F02F         	goto	u2371
  4411  005F3A  EFA1  F02F         	goto	u2370
  4412  005F3E                     u2371:
  4413  005F3E  EFB7  F02F         	goto	l2464
  4414  005F42                     u2370:
  4415  005F42                     
  4416                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4417  005F42  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4418  005F46  0EE8               	movlw	-24
  4419  005F48  2603               	addwf	??_digitalRead^0,f,c
  4420  005F4A  0E01               	movlw	1
  4421  005F4C  6E04               	movwf	(??_digitalRead+1)^0,c
  4422  005F4E  2A03               	incf	??_digitalRead^0,f,c
  4423  005F50  EFAC  F02F         	goto	u2384
  4424  005F54                     u2385:
  4425  005F54  90D8               	bcf	status,0,c
  4426  005F56  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4427  005F58                     u2384:
  4428  005F58  2E03               	decfsz	??_digitalRead^0,f,c
  4429  005F5A  EFAA  F02F         	goto	u2385
  4430  005F5E  5004               	movf	(??_digitalRead+1)^0,w,c
  4431  005F60  1483               	andwf	131,w,c	;volatile
  4432  005F62  6E05               	movwf	(??_digitalRead+2)^0,c
  4433  005F64  5005               	movf	(??_digitalRead+2)^0,w,c
  4434  005F66  6E01               	movwf	?_digitalRead^0,c
  4435  005F68  6A02               	clrf	(?_digitalRead+1)^0,c
  4436  005F6A  EFDD  F02F         	goto	l46
  4437  005F6E                     l2464:
  4438  005F6E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4439  005F70  EFC5  F02F         	goto	u2390
  4440  005F74  5002               	movf	(digitalRead@pin+1)^0,w,c
  4441  005F76  E107               	bnz	u2391
  4442  005F78  0E28               	movlw	40
  4443  005F7A  5C01               	subwf	digitalRead@pin^0,w,c
  4444  005F7C  B0D8               	btfsc	status,0,c
  4445  005F7E  EFC3  F02F         	goto	u2391
  4446  005F82  EFC5  F02F         	goto	u2390
  4447  005F86                     u2391:
  4448  005F86  EFDB  F02F         	goto	l51
  4449  005F8A                     u2390:
  4450  005F8A                     
  4451                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4452  005F8A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4453  005F8E  0EE0               	movlw	-32
  4454  005F90  2603               	addwf	??_digitalRead^0,f,c
  4455  005F92  0E01               	movlw	1
  4456  005F94  6E04               	movwf	(??_digitalRead+1)^0,c
  4457  005F96  2A03               	incf	??_digitalRead^0,f,c
  4458  005F98  EFD0  F02F         	goto	u2404
  4459  005F9C                     u2405:
  4460  005F9C  90D8               	bcf	status,0,c
  4461  005F9E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4462  005FA0                     u2404:
  4463  005FA0  2E03               	decfsz	??_digitalRead^0,f,c
  4464  005FA2  EFCE  F02F         	goto	u2405
  4465  005FA6  5004               	movf	(??_digitalRead+1)^0,w,c
  4466  005FA8  1484               	andwf	132,w,c	;volatile
  4467  005FAA  6E05               	movwf	(??_digitalRead+2)^0,c
  4468  005FAC  5005               	movf	(??_digitalRead+2)^0,w,c
  4469  005FAE  6E01               	movwf	?_digitalRead^0,c
  4470  005FB0  6A02               	clrf	(?_digitalRead+1)^0,c
  4471  005FB2  EFDD  F02F         	goto	l46
  4472  005FB6                     l51:
  4473  005FB6                     
  4474                           ;io.c: 51:     return -1;
  4475  005FB6  6801               	setf	?_digitalRead^0,c
  4476  005FB8  6802               	setf	(?_digitalRead+1)^0,c
  4477  005FBA                     l46:
  4478  005FBA  0012               	return		;funcret
  4479  005FBC                     __end_of_digitalRead:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _Jogador2 *****************
  4483 ;; Defined at:
  4484 ;;		line 112 in file "main.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  t               4   20[COMRAM] float 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4498 ;;      Params:         0       0       0       0       0       0       0
  4499 ;;      Locals:         4       0       0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0
  4501 ;;      Totals:         4       0       0       0       0       0       0
  4502 ;;Total ram usage:        4 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 6
  4505 ;; This function calls:
  4506 ;;		___fladd
  4507 ;;		___flge
  4508 ;;		_lcdCommand
  4509 ;;		_lcdString
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text11
  4516  005A12                     __ptext11:
  4517                           	callstack 0
  4518  005A12                     _Jogador2:
  4519                           	callstack 24
  4520  005A12                     
  4521                           ;main.c: 113:     float t;;main.c: 114:     lcdCommand(0x80);
  4522  005A12  0E80               	movlw	128
  4523  005A14  EC4F  F029         	call	_lcdCommand
  4524  005A18                     
  4525                           ;main.c: 115:     lcdString("Jogador 2       ");
  4526  005A18  0EF7               	movlw	low STR_24
  4527  005A1A  6E0F               	movwf	lcdString@msg^0,c
  4528  005A1C  0E7D               	movlw	high STR_24
  4529  005A1E  6E10               	movwf	(lcdString@msg+1)^0,c
  4530  005A20  EC42  F02A         	call	_lcdString	;wreg free
  4531  005A24                     
  4532                           ;main.c: 116:     lcdCommand(0xC0);
  4533  005A24  0EC0               	movlw	192
  4534  005A26  EC4F  F029         	call	_lcdCommand
  4535                           
  4536                           ;main.c: 117:     lcdString("Escolha:        ");
  4537  005A2A  0ED5               	movlw	low STR_21
  4538  005A2C  6E0F               	movwf	lcdString@msg^0,c
  4539  005A2E  0E7D               	movlw	high STR_21
  4540  005A30  6E10               	movwf	(lcdString@msg+1)^0,c
  4541  005A32  EC42  F02A         	call	_lcdString	;wreg free
  4542  005A36                     
  4543                           ;main.c: 118:     for (t = 0; t < 3500; t++);
  4544  005A36  0E00               	movlw	0
  4545  005A38  6E15               	movwf	Jogador2@t^0,c
  4546  005A3A  0E00               	movlw	0
  4547  005A3C  6E16               	movwf	(Jogador2@t+1)^0,c
  4548  005A3E  0E00               	movlw	0
  4549  005A40  6E17               	movwf	(Jogador2@t+2)^0,c
  4550  005A42  0E00               	movlw	0
  4551  005A44  6E18               	movwf	(Jogador2@t+3)^0,c
  4552  005A46  C015  F001         	movff	Jogador2@t,___flge@ff1
  4553  005A4A  C016  F002         	movff	Jogador2@t+1,___flge@ff1+1
  4554  005A4E  C017  F003         	movff	Jogador2@t+2,___flge@ff1+2
  4555  005A52  C018  F004         	movff	Jogador2@t+3,___flge@ff1+3
  4556  005A56  0E00               	movlw	0
  4557  005A58  6E05               	movwf	___flge@ff2^0,c
  4558  005A5A  0EC0               	movlw	192
  4559  005A5C  6E06               	movwf	(___flge@ff2+1)^0,c
  4560  005A5E  0E5A               	movlw	90
  4561  005A60  6E07               	movwf	(___flge@ff2+2)^0,c
  4562  005A62  0E45               	movlw	69
  4563  005A64  6E08               	movwf	(___flge@ff2+3)^0,c
  4564  005A66  EC84  F02D         	call	___flge	;wreg free
  4565  005A6A  A0D8               	btfss	status,0,c
  4566  005A6C  EF3A  F02D         	goto	u3341
  4567  005A70  EF3C  F02D         	goto	u3340
  4568  005A74                     u3341:
  4569  005A74  EF3E  F02D         	goto	l3102
  4570  005A78                     u3340:
  4571  005A78  EF71  F02D         	goto	l3104
  4572  005A7C                     l3102:
  4573  005A7C  C015  F001         	movff	Jogador2@t,___fladd@b
  4574  005A80  C016  F002         	movff	Jogador2@t+1,___fladd@b+1
  4575  005A84  C017  F003         	movff	Jogador2@t+2,___fladd@b+2
  4576  005A88  C018  F004         	movff	Jogador2@t+3,___fladd@b+3
  4577  005A8C  0E00               	movlw	0
  4578  005A8E  6E05               	movwf	___fladd@a^0,c
  4579  005A90  0E00               	movlw	0
  4580  005A92  6E06               	movwf	(___fladd@a+1)^0,c
  4581  005A94  0E80               	movlw	128
  4582  005A96  6E07               	movwf	(___fladd@a+2)^0,c
  4583  005A98  0E3F               	movlw	63
  4584  005A9A  6E08               	movwf	(___fladd@a+3)^0,c
  4585  005A9C  ECCA  F034         	call	___fladd	;wreg free
  4586  005AA0  C001  F015         	movff	?___fladd,Jogador2@t
  4587  005AA4  C002  F016         	movff	?___fladd+1,Jogador2@t+1
  4588  005AA8  C003  F017         	movff	?___fladd+2,Jogador2@t+2
  4589  005AAC  C004  F018         	movff	?___fladd+3,Jogador2@t+3
  4590  005AB0  C015  F001         	movff	Jogador2@t,___flge@ff1
  4591  005AB4  C016  F002         	movff	Jogador2@t+1,___flge@ff1+1
  4592  005AB8  C017  F003         	movff	Jogador2@t+2,___flge@ff1+2
  4593  005ABC  C018  F004         	movff	Jogador2@t+3,___flge@ff1+3
  4594  005AC0  0E00               	movlw	0
  4595  005AC2  6E05               	movwf	___flge@ff2^0,c
  4596  005AC4  0EC0               	movlw	192
  4597  005AC6  6E06               	movwf	(___flge@ff2+1)^0,c
  4598  005AC8  0E5A               	movlw	90
  4599  005ACA  6E07               	movwf	(___flge@ff2+2)^0,c
  4600  005ACC  0E45               	movlw	69
  4601  005ACE  6E08               	movwf	(___flge@ff2+3)^0,c
  4602  005AD0  EC84  F02D         	call	___flge	;wreg free
  4603  005AD4  A0D8               	btfss	status,0,c
  4604  005AD6  EF6F  F02D         	goto	u3351
  4605  005ADA  EF71  F02D         	goto	u3350
  4606  005ADE                     u3351:
  4607  005ADE  EF3E  F02D         	goto	l3102
  4608  005AE2                     u3350:
  4609  005AE2                     l3104:
  4610                           
  4611                           ;main.c: 119:     lcdCommand(0x80);
  4612  005AE2  0E80               	movlw	128
  4613  005AE4  EC4F  F029         	call	_lcdCommand
  4614  005AE8                     
  4615                           ;main.c: 120:     lcdString("Y=P, X=p, A=T");
  4616  005AE8  0E0D               	movlw	low STR_26
  4617  005AEA  6E0F               	movwf	lcdString@msg^0,c
  4618  005AEC  0E7F               	movlw	high STR_26
  4619  005AEE  6E10               	movwf	(lcdString@msg+1)^0,c
  4620  005AF0  EC42  F02A         	call	_lcdString	;wreg free
  4621  005AF4                     
  4622                           ;main.c: 121:     lcdCommand(0xC0);
  4623  005AF4  0EC0               	movlw	192
  4624  005AF6  EC4F  F029         	call	_lcdCommand
  4625                           
  4626                           ;main.c: 122:     lcdString("B=L ou s=S ");
  4627  005AFA  0E75               	movlw	low STR_27
  4628  005AFC  6E0F               	movwf	lcdString@msg^0,c
  4629  005AFE  0E7F               	movlw	high STR_27
  4630  005B00  6E10               	movwf	(lcdString@msg+1)^0,c
  4631  005B02  EC42  F02A         	call	_lcdString	;wreg free
  4632  005B06  0012               	return		;funcret
  4633  005B08                     __end_of_Jogador2:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _Jogador1 *****************
  4637 ;; Defined at:
  4638 ;;		line 99 in file "main.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  t               4   20[COMRAM] float 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4652 ;;      Params:         0       0       0       0       0       0       0
  4653 ;;      Locals:         4       0       0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0
  4655 ;;      Totals:         4       0       0       0       0       0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 6
  4659 ;; This function calls:
  4660 ;;		___fladd
  4661 ;;		___flge
  4662 ;;		_lcdCommand
  4663 ;;		_lcdString
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text12
  4670  00591C                     __ptext12:
  4671                           	callstack 0
  4672  00591C                     _Jogador1:
  4673                           	callstack 24
  4674  00591C                     
  4675                           ;main.c: 100:     float t;;main.c: 101:     lcdCommand(0x80);
  4676  00591C  0E80               	movlw	128
  4677  00591E  EC4F  F029         	call	_lcdCommand
  4678  005922                     
  4679                           ;main.c: 102:     lcdString("Jogador 1       ");
  4680  005922  0EE6               	movlw	low STR_20
  4681  005924  6E0F               	movwf	lcdString@msg^0,c
  4682  005926  0E7D               	movlw	high STR_20
  4683  005928  6E10               	movwf	(lcdString@msg+1)^0,c
  4684  00592A  EC42  F02A         	call	_lcdString	;wreg free
  4685  00592E                     
  4686                           ;main.c: 103:     lcdCommand(0xC0);
  4687  00592E  0EC0               	movlw	192
  4688  005930  EC4F  F029         	call	_lcdCommand
  4689                           
  4690                           ;main.c: 104:     lcdString("Escolha:        ");
  4691  005934  0ED5               	movlw	low STR_21
  4692  005936  6E0F               	movwf	lcdString@msg^0,c
  4693  005938  0E7D               	movlw	high STR_21
  4694  00593A  6E10               	movwf	(lcdString@msg+1)^0,c
  4695  00593C  EC42  F02A         	call	_lcdString	;wreg free
  4696  005940                     
  4697                           ;main.c: 105:     for (t = 0; t < 3500; t++);
  4698  005940  0E00               	movlw	0
  4699  005942  6E15               	movwf	Jogador1@t^0,c
  4700  005944  0E00               	movlw	0
  4701  005946  6E16               	movwf	(Jogador1@t+1)^0,c
  4702  005948  0E00               	movlw	0
  4703  00594A  6E17               	movwf	(Jogador1@t+2)^0,c
  4704  00594C  0E00               	movlw	0
  4705  00594E  6E18               	movwf	(Jogador1@t+3)^0,c
  4706  005950  C015  F001         	movff	Jogador1@t,___flge@ff1
  4707  005954  C016  F002         	movff	Jogador1@t+1,___flge@ff1+1
  4708  005958  C017  F003         	movff	Jogador1@t+2,___flge@ff1+2
  4709  00595C  C018  F004         	movff	Jogador1@t+3,___flge@ff1+3
  4710  005960  0E00               	movlw	0
  4711  005962  6E05               	movwf	___flge@ff2^0,c
  4712  005964  0EC0               	movlw	192
  4713  005966  6E06               	movwf	(___flge@ff2+1)^0,c
  4714  005968  0E5A               	movlw	90
  4715  00596A  6E07               	movwf	(___flge@ff2+2)^0,c
  4716  00596C  0E45               	movlw	69
  4717  00596E  6E08               	movwf	(___flge@ff2+3)^0,c
  4718  005970  EC84  F02D         	call	___flge	;wreg free
  4719  005974  A0D8               	btfss	status,0,c
  4720  005976  EFBF  F02C         	goto	u3321
  4721  00597A  EFC1  F02C         	goto	u3320
  4722  00597E                     u3321:
  4723  00597E  EFC3  F02C         	goto	l3082
  4724  005982                     u3320:
  4725  005982  EFF6  F02C         	goto	l3084
  4726  005986                     l3082:
  4727  005986  C015  F001         	movff	Jogador1@t,___fladd@b
  4728  00598A  C016  F002         	movff	Jogador1@t+1,___fladd@b+1
  4729  00598E  C017  F003         	movff	Jogador1@t+2,___fladd@b+2
  4730  005992  C018  F004         	movff	Jogador1@t+3,___fladd@b+3
  4731  005996  0E00               	movlw	0
  4732  005998  6E05               	movwf	___fladd@a^0,c
  4733  00599A  0E00               	movlw	0
  4734  00599C  6E06               	movwf	(___fladd@a+1)^0,c
  4735  00599E  0E80               	movlw	128
  4736  0059A0  6E07               	movwf	(___fladd@a+2)^0,c
  4737  0059A2  0E3F               	movlw	63
  4738  0059A4  6E08               	movwf	(___fladd@a+3)^0,c
  4739  0059A6  ECCA  F034         	call	___fladd	;wreg free
  4740  0059AA  C001  F015         	movff	?___fladd,Jogador1@t
  4741  0059AE  C002  F016         	movff	?___fladd+1,Jogador1@t+1
  4742  0059B2  C003  F017         	movff	?___fladd+2,Jogador1@t+2
  4743  0059B6  C004  F018         	movff	?___fladd+3,Jogador1@t+3
  4744  0059BA  C015  F001         	movff	Jogador1@t,___flge@ff1
  4745  0059BE  C016  F002         	movff	Jogador1@t+1,___flge@ff1+1
  4746  0059C2  C017  F003         	movff	Jogador1@t+2,___flge@ff1+2
  4747  0059C6  C018  F004         	movff	Jogador1@t+3,___flge@ff1+3
  4748  0059CA  0E00               	movlw	0
  4749  0059CC  6E05               	movwf	___flge@ff2^0,c
  4750  0059CE  0EC0               	movlw	192
  4751  0059D0  6E06               	movwf	(___flge@ff2+1)^0,c
  4752  0059D2  0E5A               	movlw	90
  4753  0059D4  6E07               	movwf	(___flge@ff2+2)^0,c
  4754  0059D6  0E45               	movlw	69
  4755  0059D8  6E08               	movwf	(___flge@ff2+3)^0,c
  4756  0059DA  EC84  F02D         	call	___flge	;wreg free
  4757  0059DE  A0D8               	btfss	status,0,c
  4758  0059E0  EFF4  F02C         	goto	u3331
  4759  0059E4  EFF6  F02C         	goto	u3330
  4760  0059E8                     u3331:
  4761  0059E8  EFC3  F02C         	goto	l3082
  4762  0059EC                     u3330:
  4763  0059EC                     l3084:
  4764                           
  4765                           ;main.c: 106:     lcdCommand(0x80);
  4766  0059EC  0E80               	movlw	128
  4767  0059EE  EC4F  F029         	call	_lcdCommand
  4768  0059F2                     
  4769                           ;main.c: 107:     lcdString("L=P, U=p, R=T");
  4770  0059F2  0E1B               	movlw	low STR_22
  4771  0059F4  6E0F               	movwf	lcdString@msg^0,c
  4772  0059F6  0E7F               	movlw	high STR_22
  4773  0059F8  6E10               	movwf	(lcdString@msg+1)^0,c
  4774  0059FA  EC42  F02A         	call	_lcdString	;wreg free
  4775  0059FE                     
  4776                           ;main.c: 108:     lcdCommand(0xC0);
  4777  0059FE  0EC0               	movlw	192
  4778  005A00  EC4F  F029         	call	_lcdCommand
  4779                           
  4780                           ;main.c: 109:     lcdString("D=L ou S=S ");
  4781  005A04  0E69               	movlw	low STR_23
  4782  005A06  6E0F               	movwf	lcdString@msg^0,c
  4783  005A08  0E7F               	movlw	high STR_23
  4784  005A0A  6E10               	movwf	(lcdString@msg+1)^0,c
  4785  005A0C  EC42  F02A         	call	_lcdString	;wreg free
  4786  005A10  0012               	return		;funcret
  4787  005A12                     __end_of_Jogador1:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _FimDeJogo *****************
  4791 ;; Defined at:
  4792 ;;		line 235 in file "main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  c1              2   20[COMRAM] unsigned int 
  4795 ;;  c2              2   22[COMRAM] unsigned int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  t               4   24[COMRAM] float 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4807 ;;      Params:         4       0       0       0       0       0       0
  4808 ;;      Locals:         4       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0
  4810 ;;      Totals:         8       0       0       0       0       0       0
  4811 ;;Total ram usage:        8 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 6
  4814 ;; This function calls:
  4815 ;;		_Placar
  4816 ;;		___fladd
  4817 ;;		___flge
  4818 ;;		_lcdCommand
  4819 ;;		_lcdInit
  4820 ;;		_lcdString
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text13
  4827  005C0C                     __ptext13:
  4828                           	callstack 0
  4829  005C0C                     _FimDeJogo:
  4830                           	callstack 24
  4831  005C0C                     
  4832                           ;main.c: 236:     float t;;main.c: 237:     lcdInit();
  4833  005C0C  EC34  F02C         	call	_lcdInit	;wreg free
  4834                           
  4835                           ;main.c: 238:     lcdCommand(0xC0);
  4836  005C10  0EC0               	movlw	192
  4837  005C12  EC4F  F029         	call	_lcdCommand
  4838  005C16                     
  4839                           ;main.c: 239:     lcdString("Placar Final:");
  4840  005C16  0EFF               	movlw	low STR_41
  4841  005C18  6E0F               	movwf	lcdString@msg^0,c
  4842  005C1A  0E7E               	movlw	high STR_41
  4843  005C1C  6E10               	movwf	(lcdString@msg+1)^0,c
  4844  005C1E  EC42  F02A         	call	_lcdString	;wreg free
  4845  005C22                     
  4846                           ;main.c: 240:     lcdCommand(0x80);
  4847  005C22  0E80               	movlw	128
  4848  005C24  EC4F  F029         	call	_lcdCommand
  4849  005C28                     
  4850                           ;main.c: 241:     if (c1 > c2) {
  4851  005C28  5015               	movf	FimDeJogo@c1^0,w,c
  4852  005C2A  5C17               	subwf	FimDeJogo@c2^0,w,c
  4853  005C2C  5016               	movf	(FimDeJogo@c1+1)^0,w,c
  4854  005C2E  5818               	subwfb	(FimDeJogo@c2+1)^0,w,c
  4855  005C30  B0D8               	btfsc	status,0,c
  4856  005C32  EF1D  F02E         	goto	u3471
  4857  005C36  EF1F  F02E         	goto	u3470
  4858  005C3A                     u3471:
  4859  005C3A  EF27  F02E         	goto	l3240
  4860  005C3E                     u3470:
  4861  005C3E                     
  4862                           ;main.c: 242:         lcdString("J1 Venceu!  ");
  4863  005C3E  0E29               	movlw	low STR_42
  4864  005C40  6E0F               	movwf	lcdString@msg^0,c
  4865  005C42  0E7F               	movlw	high STR_42
  4866  005C44  6E10               	movwf	(lcdString@msg+1)^0,c
  4867  005C46  EC42  F02A         	call	_lcdString	;wreg free
  4868                           
  4869                           ;main.c: 243:     } else {
  4870  005C4A  EF2D  F02E         	goto	l3242
  4871  005C4E                     l3240:
  4872                           
  4873                           ;main.c: 244:         lcdString("J2 Venceu!  ");
  4874  005C4E  0E36               	movlw	low STR_43
  4875  005C50  6E0F               	movwf	lcdString@msg^0,c
  4876  005C52  0E7F               	movlw	high STR_43
  4877  005C54  6E10               	movwf	(lcdString@msg+1)^0,c
  4878  005C56  EC42  F02A         	call	_lcdString	;wreg free
  4879  005C5A                     l3242:
  4880                           
  4881                           ;main.c: 246:     for (t = 0; t < 1000; t++) {
  4882  005C5A  0E00               	movlw	0
  4883  005C5C  6E19               	movwf	FimDeJogo@t^0,c
  4884  005C5E  0E00               	movlw	0
  4885  005C60  6E1A               	movwf	(FimDeJogo@t+1)^0,c
  4886  005C62  0E00               	movlw	0
  4887  005C64  6E1B               	movwf	(FimDeJogo@t+2)^0,c
  4888  005C66  0E00               	movlw	0
  4889  005C68  6E1C               	movwf	(FimDeJogo@t+3)^0,c
  4890  005C6A  C019  F001         	movff	FimDeJogo@t,___flge@ff1
  4891  005C6E  C01A  F002         	movff	FimDeJogo@t+1,___flge@ff1+1
  4892  005C72  C01B  F003         	movff	FimDeJogo@t+2,___flge@ff1+2
  4893  005C76  C01C  F004         	movff	FimDeJogo@t+3,___flge@ff1+3
  4894  005C7A  0E00               	movlw	0
  4895  005C7C  6E05               	movwf	___flge@ff2^0,c
  4896  005C7E  0E00               	movlw	0
  4897  005C80  6E06               	movwf	(___flge@ff2+1)^0,c
  4898  005C82  0E7A               	movlw	122
  4899  005C84  6E07               	movwf	(___flge@ff2+2)^0,c
  4900  005C86  0E44               	movlw	68
  4901  005C88  6E08               	movwf	(___flge@ff2+3)^0,c
  4902  005C8A  EC84  F02D         	call	___flge	;wreg free
  4903  005C8E  A0D8               	btfss	status,0,c
  4904  005C90  EF4C  F02E         	goto	u3481
  4905  005C94  EF4E  F02E         	goto	u3480
  4906  005C98                     u3481:
  4907  005C98  EF50  F02E         	goto	l3248
  4908  005C9C                     u3480:
  4909  005C9C  EF8D  F02E         	goto	l361
  4910  005CA0                     l3248:
  4911                           
  4912                           ;main.c: 247:         Placar(c1, c2);
  4913  005CA0  C015  F00F         	movff	FimDeJogo@c1,Placar@c1
  4914  005CA4  C016  F010         	movff	FimDeJogo@c1+1,Placar@c1+1
  4915  005CA8  C017  F011         	movff	FimDeJogo@c2,Placar@c2
  4916  005CAC  C018  F012         	movff	FimDeJogo@c2+1,Placar@c2+1
  4917  005CB0  ECE1  F02B         	call	_Placar	;wreg free
  4918  005CB4                     
  4919                           ;main.c: 248:     }
  4920  005CB4  C019  F001         	movff	FimDeJogo@t,___fladd@b
  4921  005CB8  C01A  F002         	movff	FimDeJogo@t+1,___fladd@b+1
  4922  005CBC  C01B  F003         	movff	FimDeJogo@t+2,___fladd@b+2
  4923  005CC0  C01C  F004         	movff	FimDeJogo@t+3,___fladd@b+3
  4924  005CC4  0E00               	movlw	0
  4925  005CC6  6E05               	movwf	___fladd@a^0,c
  4926  005CC8  0E00               	movlw	0
  4927  005CCA  6E06               	movwf	(___fladd@a+1)^0,c
  4928  005CCC  0E80               	movlw	128
  4929  005CCE  6E07               	movwf	(___fladd@a+2)^0,c
  4930  005CD0  0E3F               	movlw	63
  4931  005CD2  6E08               	movwf	(___fladd@a+3)^0,c
  4932  005CD4  ECCA  F034         	call	___fladd	;wreg free
  4933  005CD8  C001  F019         	movff	?___fladd,FimDeJogo@t
  4934  005CDC  C002  F01A         	movff	?___fladd+1,FimDeJogo@t+1
  4935  005CE0  C003  F01B         	movff	?___fladd+2,FimDeJogo@t+2
  4936  005CE4  C004  F01C         	movff	?___fladd+3,FimDeJogo@t+3
  4937  005CE8  C019  F001         	movff	FimDeJogo@t,___flge@ff1
  4938  005CEC  C01A  F002         	movff	FimDeJogo@t+1,___flge@ff1+1
  4939  005CF0  C01B  F003         	movff	FimDeJogo@t+2,___flge@ff1+2
  4940  005CF4  C01C  F004         	movff	FimDeJogo@t+3,___flge@ff1+3
  4941  005CF8  0E00               	movlw	0
  4942  005CFA  6E05               	movwf	___flge@ff2^0,c
  4943  005CFC  0E00               	movlw	0
  4944  005CFE  6E06               	movwf	(___flge@ff2+1)^0,c
  4945  005D00  0E7A               	movlw	122
  4946  005D02  6E07               	movwf	(___flge@ff2+2)^0,c
  4947  005D04  0E44               	movlw	68
  4948  005D06  6E08               	movwf	(___flge@ff2+3)^0,c
  4949  005D08  EC84  F02D         	call	___flge	;wreg free
  4950  005D0C  A0D8               	btfss	status,0,c
  4951  005D0E  EF8B  F02E         	goto	u3491
  4952  005D12  EF8D  F02E         	goto	u3490
  4953  005D16                     u3491:
  4954  005D16  EF50  F02E         	goto	l3248
  4955  005D1A                     u3490:
  4956  005D1A                     l361:
  4957  005D1A  0012               	return		;funcret
  4958  005D1C                     __end_of_FimDeJogo:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function _lcdString *****************
  4962 ;; Defined at:
  4963 ;;		line 57 in file "lcd.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4966 ;;		 -> STR_50(11), STR_49(3), STR_48(15), STR_47(14), 
  4967 ;;		 -> STR_46(14), STR_45(11), STR_44(9), STR_43(13), 
  4968 ;;		 -> STR_42(13), STR_41(14), STR_40(11), STR_39(11), 
  4969 ;;		 -> STR_38(11), STR_37(11), STR_36(11), STR_35(11), 
  4970 ;;		 -> STR_34(11), STR_33(11), STR_32(11), STR_31(11), 
  4971 ;;		 -> STR_30(8), STR_29(11), STR_28(5), STR_27(12), 
  4972 ;;		 -> STR_26(14), STR_25(17), STR_24(17), STR_23(12), 
  4973 ;;		 -> STR_22(14), STR_21(17), STR_20(17), STR_19(17), 
  4974 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(13), 
  4975 ;;		 -> STR_14(17), STR_13(17), STR_12(12), STR_11(17), 
  4976 ;;		 -> STR_10(17), STR_9(13), STR_8(17), STR_7(17), 
  4977 ;;		 -> STR_6(11), STR_5(17), STR_4(17), STR_3(11), 
  4978 ;;		 -> STR_2(12), STR_1(11), 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  i               2   18[COMRAM] int 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4990 ;;      Params:         2       0       0       0       0       0       0
  4991 ;;      Locals:         2       0       0       0       0       0       0
  4992 ;;      Temps:          2       0       0       0       0       0       0
  4993 ;;      Totals:         6       0       0       0       0       0       0
  4994 ;;Total ram usage:        6 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 5
  4997 ;; This function calls:
  4998 ;;		_lcdChar
  4999 ;; This function is called by:
  5000 ;;		_Start
  5001 ;;		_Jogador1
  5002 ;;		_Jogador2
  5003 ;;		_Versus
  5004 ;;		_FimDeJogo
  5005 ;;		_main
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text14
  5010  005484                     __ptext14:
  5011                           	callstack 0
  5012  005484                     _lcdString:
  5013                           	callstack 25
  5014  005484                     
  5015                           ;lcd.c: 58:  int i = 0;
  5016  005484  0E00               	movlw	0
  5017  005486  6E14               	movwf	(lcdString@i+1)^0,c
  5018  005488  0E00               	movlw	0
  5019  00548A  6E13               	movwf	lcdString@i^0,c
  5020                           
  5021                           ;lcd.c: 59:  while (msg[i] != 0) {
  5022  00548C  EF58  F02A         	goto	l2606
  5023  005490                     l2602:
  5024                           
  5025                           ;lcd.c: 60:   lcdChar(msg[i]);
  5026  005490  5013               	movf	lcdString@i^0,w,c
  5027  005492  240F               	addwf	lcdString@msg^0,w,c
  5028  005494  6E11               	movwf	??_lcdString^0,c
  5029  005496  5014               	movf	(lcdString@i+1)^0,w,c
  5030  005498  2010               	addwfc	(lcdString@msg+1)^0,w,c
  5031  00549A  6E12               	movwf	(??_lcdString+1)^0,c
  5032  00549C  C011  FFF6         	movff	??_lcdString,tblptrl
  5033  0054A0  C012  FFF7         	movff	??_lcdString+1,tblptrh
  5034  0054A4                     	if	0	;tblptru may be non-zero
  5035  0054A4                     	endif
  5036  0054A4                     	if	0	;tblptru may be non-zero
  5037  0054A4                     	endif
  5038  0054A4  0008               	tblrd		*
  5039  0054A6  50F5               	movf	tablat,w,c
  5040  0054A8  EC5E  F029         	call	_lcdChar
  5041  0054AC                     
  5042                           ;lcd.c: 61:   i++;
  5043  0054AC  4A13               	infsnz	lcdString@i^0,f,c
  5044  0054AE  2A14               	incf	(lcdString@i+1)^0,f,c
  5045  0054B0                     l2606:
  5046                           
  5047                           ;lcd.c: 59:  while (msg[i] != 0) {
  5048  0054B0  5013               	movf	lcdString@i^0,w,c
  5049  0054B2  240F               	addwf	lcdString@msg^0,w,c
  5050  0054B4  6E11               	movwf	??_lcdString^0,c
  5051  0054B6  5014               	movf	(lcdString@i+1)^0,w,c
  5052  0054B8  2010               	addwfc	(lcdString@msg+1)^0,w,c
  5053  0054BA  6E12               	movwf	(??_lcdString+1)^0,c
  5054  0054BC  C011  FFF6         	movff	??_lcdString,tblptrl
  5055  0054C0  C012  FFF7         	movff	??_lcdString+1,tblptrh
  5056  0054C4                     	if	0	;tblptru may be non-zero
  5057  0054C4                     	endif
  5058  0054C4                     	if	0	;tblptru may be non-zero
  5059  0054C4                     	endif
  5060  0054C4  0008               	tblrd		*
  5061  0054C6  50F5               	movf	tablat,w,c
  5062  0054C8  0900               	iorlw	0
  5063  0054CA  A4D8               	btfss	status,2,c
  5064  0054CC  EF6A  F02A         	goto	u2591
  5065  0054D0  EF6C  F02A         	goto	u2590
  5066  0054D4                     u2591:
  5067  0054D4  EF48  F02A         	goto	l2602
  5068  0054D8                     u2590:
  5069  0054D8  0012               	return		;funcret
  5070  0054DA                     __end_of_lcdString:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function _lcdChar *****************
  5074 ;; Defined at:
  5075 ;;		line 52 in file "lcd.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  value           1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  value           1   13[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5089 ;;      Params:         0       0       0       0       0       0       0
  5090 ;;      Locals:         1       0       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0
  5092 ;;      Totals:         1       0       0       0       0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 4
  5096 ;; This function calls:
  5097 ;;		_delayMicro
  5098 ;;		_pushByte
  5099 ;; This function is called by:
  5100 ;;		_lcdString
  5101 ;;		_Versus
  5102 ;;		_main
  5103 ;;		_lcdNumber
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text15
  5108  0052BC                     __ptext15:
  5109                           	callstack 0
  5110  0052BC                     _lcdChar:
  5111                           	callstack 25
  5112                           
  5113                           ;incstack = 0
  5114                           ;lcdChar@value stored from wreg
  5115  0052BC  6E0E               	movwf	lcdChar@value^0,c
  5116  0052BE                     
  5117                           ;lcd.c: 53:  pushByte(value, 1);
  5118  0052BE  0E00               	movlw	0
  5119  0052C0  6E0B               	movwf	(pushByte@rs+1)^0,c
  5120  0052C2  0E01               	movlw	1
  5121  0052C4  6E0A               	movwf	pushByte@rs^0,c
  5122  0052C6  500E               	movf	lcdChar@value^0,w,c
  5123  0052C8  ECC4  F02A         	call	_pushByte
  5124  0052CC                     
  5125                           ;lcd.c: 54:  delayMicro(80);
  5126  0052CC  0E00               	movlw	0
  5127  0052CE  6E02               	movwf	(delayMicro@a+1)^0,c
  5128  0052D0  0E50               	movlw	80
  5129  0052D2  6E01               	movwf	delayMicro@a^0,c
  5130  0052D4  EC3E  F029         	call	_delayMicro	;wreg free
  5131  0052D8  0012               	return		;funcret
  5132  0052DA                     __end_of_lcdChar:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function _lcdInit *****************
  5136 ;; Defined at:
  5137 ;;		line 72 in file "lcd.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5151 ;;      Params:         0       0       0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; Hardware stack levels required when called: 5
  5158 ;; This function calls:
  5159 ;;		_delayMicro
  5160 ;;		_delayMili
  5161 ;;		_lcdCommand
  5162 ;;		_pinMode
  5163 ;;		_pushNibble
  5164 ;;		_soInit
  5165 ;; This function is called by:
  5166 ;;		_Start
  5167 ;;		_Versus
  5168 ;;		_FimDeJogo
  5169 ;;		_main
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text16
  5174  005868                     __ptext16:
  5175                           	callstack 0
  5176  005868                     _lcdInit:
  5177                           	callstack 25
  5178  005868                     
  5179                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  5180  005868  0E00               	movlw	0
  5181  00586A  6E02               	movwf	(pinMode@pin+1)^0,c
  5182  00586C  0E1C               	movlw	28
  5183  00586E  6E01               	movwf	pinMode@pin^0,c
  5184  005870  0E00               	movlw	0
  5185  005872  6E04               	movwf	(pinMode@type+1)^0,c
  5186  005874  0E00               	movlw	0
  5187  005876  6E03               	movwf	pinMode@type^0,c
  5188  005878  ECA3  F033         	call	_pinMode	;wreg free
  5189                           
  5190                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  5191  00587C  0E00               	movlw	0
  5192  00587E  6E02               	movwf	(pinMode@pin+1)^0,c
  5193  005880  0E1D               	movlw	29
  5194  005882  6E01               	movwf	pinMode@pin^0,c
  5195  005884  0E00               	movlw	0
  5196  005886  6E04               	movwf	(pinMode@type+1)^0,c
  5197  005888  0E00               	movlw	0
  5198  00588A  6E03               	movwf	pinMode@type^0,c
  5199  00588C  ECA3  F033         	call	_pinMode	;wreg free
  5200                           
  5201                           ;lcd.c: 75:  soInit();
  5202  005890  ECDB  F029         	call	_soInit	;wreg free
  5203                           
  5204                           ;lcd.c: 76:  delayMili(15);
  5205  005894  0E00               	movlw	0
  5206  005896  6E02               	movwf	(delayMili@a+1)^0,c
  5207  005898  0E0F               	movlw	15
  5208  00589A  6E01               	movwf	delayMili@a^0,c
  5209  00589C  ECAA  F029         	call	_delayMili	;wreg free
  5210                           
  5211                           ;lcd.c: 78:  pushNibble(0x03, 0);
  5212  0058A0  0E00               	movlw	0
  5213  0058A2  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5214  0058A4  0E00               	movlw	0
  5215  0058A6  6E0A               	movwf	pushNibble@rs^0,c
  5216  0058A8  0E03               	movlw	3
  5217  0058AA  EC6D  F029         	call	_pushNibble
  5218                           
  5219                           ;lcd.c: 79:  delayMili(5);
  5220  0058AE  0E00               	movlw	0
  5221  0058B0  6E02               	movwf	(delayMili@a+1)^0,c
  5222  0058B2  0E05               	movlw	5
  5223  0058B4  6E01               	movwf	delayMili@a^0,c
  5224  0058B6  ECAA  F029         	call	_delayMili	;wreg free
  5225                           
  5226                           ;lcd.c: 80:  pushNibble(0x03, 0);
  5227  0058BA  0E00               	movlw	0
  5228  0058BC  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5229  0058BE  0E00               	movlw	0
  5230  0058C0  6E0A               	movwf	pushNibble@rs^0,c
  5231  0058C2  0E03               	movlw	3
  5232  0058C4  EC6D  F029         	call	_pushNibble
  5233  0058C8                     
  5234                           ;lcd.c: 81:  delayMicro(160);
  5235  0058C8  0E00               	movlw	0
  5236  0058CA  6E02               	movwf	(delayMicro@a+1)^0,c
  5237  0058CC  0EA0               	movlw	160
  5238  0058CE  6E01               	movwf	delayMicro@a^0,c
  5239  0058D0  EC3E  F029         	call	_delayMicro	;wreg free
  5240  0058D4                     
  5241                           ;lcd.c: 82:  pushNibble(0x03, 0);
  5242  0058D4  0E00               	movlw	0
  5243  0058D6  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5244  0058D8  0E00               	movlw	0
  5245  0058DA  6E0A               	movwf	pushNibble@rs^0,c
  5246  0058DC  0E03               	movlw	3
  5247  0058DE  EC6D  F029         	call	_pushNibble
  5248                           
  5249                           ;lcd.c: 83:  delayMicro(160);
  5250  0058E2  0E00               	movlw	0
  5251  0058E4  6E02               	movwf	(delayMicro@a+1)^0,c
  5252  0058E6  0EA0               	movlw	160
  5253  0058E8  6E01               	movwf	delayMicro@a^0,c
  5254  0058EA  EC3E  F029         	call	_delayMicro	;wreg free
  5255  0058EE                     
  5256                           ;lcd.c: 85:  pushNibble(0x02, 0);
  5257  0058EE  0E00               	movlw	0
  5258  0058F0  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5259  0058F2  0E00               	movlw	0
  5260  0058F4  6E0A               	movwf	pushNibble@rs^0,c
  5261  0058F6  0E02               	movlw	2
  5262  0058F8  EC6D  F029         	call	_pushNibble
  5263  0058FC                     
  5264                           ;lcd.c: 86:  delayMili(10);
  5265  0058FC  0E00               	movlw	0
  5266  0058FE  6E02               	movwf	(delayMili@a+1)^0,c
  5267  005900  0E0A               	movlw	10
  5268  005902  6E01               	movwf	delayMili@a^0,c
  5269  005904  ECAA  F029         	call	_delayMili	;wreg free
  5270  005908                     
  5271                           ;lcd.c: 88:  lcdCommand(0x28);
  5272  005908  0E28               	movlw	40
  5273  00590A  EC4F  F029         	call	_lcdCommand
  5274  00590E                     
  5275                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  5276  00590E  0E0C               	movlw	12
  5277  005910  EC4F  F029         	call	_lcdCommand
  5278  005914                     
  5279                           ;lcd.c: 90:  lcdCommand(0x01);
  5280  005914  0E01               	movlw	1
  5281  005916  EC4F  F029         	call	_lcdCommand
  5282  00591A  0012               	return		;funcret
  5283  00591C                     __end_of_lcdInit:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function _soInit *****************
  5287 ;; Defined at:
  5288 ;;		line 3 in file "so.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5302 ;;      Params:         0       0       0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0
  5305 ;;      Totals:         0       0       0       0       0       0       0
  5306 ;;Total ram usage:        0 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 1
  5309 ;; This function calls:
  5310 ;;		_pinMode
  5311 ;; This function is called by:
  5312 ;;		_kpInit
  5313 ;;		_lcdInit
  5314 ;;		_ssdInit
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text17
  5319  0053B6                     __ptext17:
  5320                           	callstack 0
  5321  0053B6                     _soInit:
  5322                           	callstack 28
  5323  0053B6                     
  5324                           ;so.c: 4:  pinMode(PIN_D7, 0);
  5325  0053B6  0E00               	movlw	0
  5326  0053B8  6E02               	movwf	(pinMode@pin+1)^0,c
  5327  0053BA  0E1F               	movlw	31
  5328  0053BC  6E01               	movwf	pinMode@pin^0,c
  5329  0053BE  0E00               	movlw	0
  5330  0053C0  6E04               	movwf	(pinMode@type+1)^0,c
  5331  0053C2  0E00               	movlw	0
  5332  0053C4  6E03               	movwf	pinMode@type^0,c
  5333  0053C6  ECA3  F033         	call	_pinMode	;wreg free
  5334                           
  5335                           ;so.c: 5:  pinMode(PIN_B0, 0);
  5336  0053CA  0E00               	movlw	0
  5337  0053CC  6E02               	movwf	(pinMode@pin+1)^0,c
  5338  0053CE  0E08               	movlw	8
  5339  0053D0  6E01               	movwf	pinMode@pin^0,c
  5340  0053D2  0E00               	movlw	0
  5341  0053D4  6E04               	movwf	(pinMode@type+1)^0,c
  5342  0053D6  0E00               	movlw	0
  5343  0053D8  6E03               	movwf	pinMode@type^0,c
  5344  0053DA  ECA3  F033         	call	_pinMode	;wreg free
  5345                           
  5346                           ;so.c: 6:  pinMode(PIN_D6, 0);
  5347  0053DE  0E00               	movlw	0
  5348  0053E0  6E02               	movwf	(pinMode@pin+1)^0,c
  5349  0053E2  0E1E               	movlw	30
  5350  0053E4  6E01               	movwf	pinMode@pin^0,c
  5351  0053E6  0E00               	movlw	0
  5352  0053E8  6E04               	movwf	(pinMode@type+1)^0,c
  5353  0053EA  0E00               	movlw	0
  5354  0053EC  6E03               	movwf	pinMode@type^0,c
  5355  0053EE  ECA3  F033         	call	_pinMode	;wreg free
  5356  0053F2  0012               	return		;funcret
  5357  0053F4                     __end_of_soInit:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _pinMode *****************
  5361 ;; Defined at:
  5362 ;;		line 54 in file "io.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  pin             2    0[COMRAM] int 
  5365 ;;  type            2    2[COMRAM] int 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5377 ;;      Params:         4       0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0
  5379 ;;      Temps:          2       0       0       0       0       0       0
  5380 ;;      Totals:         6       0       0       0       0       0       0
  5381 ;;Total ram usage:        6 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_kpInit
  5387 ;;		_lcdInit
  5388 ;;		_soInit
  5389 ;;		_ssdInit
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text18
  5394  006746                     __ptext18:
  5395                           	callstack 0
  5396  006746                     _pinMode:
  5397                           	callstack 28
  5398  006746                     
  5399                           ;io.c: 56:     if(pin <8){
  5400  006746  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5401  006748  EFB1  F033         	goto	u2100
  5402  00674C  5002               	movf	(pinMode@pin+1)^0,w,c
  5403  00674E  E107               	bnz	u2101
  5404  006750  0E08               	movlw	8
  5405  006752  5C01               	subwf	pinMode@pin^0,w,c
  5406  006754  B0D8               	btfsc	status,0,c
  5407  006756  EFAF  F033         	goto	u2101
  5408  00675A  EFB1  F033         	goto	u2100
  5409  00675E                     u2101:
  5410  00675E  EFDB  F033         	goto	l2392
  5411  006762                     u2100:
  5412  006762                     
  5413                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5414  006762  5003               	movf	pinMode@type^0,w,c
  5415  006764  1004               	iorwf	(pinMode@type+1)^0,w,c
  5416  006766  B4D8               	btfsc	status,2,c
  5417  006768  EFB8  F033         	goto	u2111
  5418  00676C  EFBA  F033         	goto	u2110
  5419  006770                     u2111:
  5420  006770  EFCA  F033         	goto	l2390
  5421  006774                     u2110:
  5422  006774  C001  F005         	movff	pinMode@pin,??_pinMode
  5423  006778  0E01               	movlw	1
  5424  00677A  6E06               	movwf	(??_pinMode+1)^0,c
  5425  00677C  2A05               	incf	??_pinMode^0,f,c
  5426  00677E  EFC3  F033         	goto	u2124
  5427  006782                     u2125:
  5428  006782  90D8               	bcf	status,0,c
  5429  006784  3606               	rlcf	(??_pinMode+1)^0,f,c
  5430  006786                     u2124:
  5431  006786  2E05               	decfsz	??_pinMode^0,f,c
  5432  006788  EFC1  F033         	goto	u2125
  5433  00678C  5006               	movf	(??_pinMode+1)^0,w,c
  5434  00678E  1292               	iorwf	146,f,c	;volatile
  5435  006790  EFC9  F034         	goto	l76
  5436  006794                     l2390:
  5437  006794  C001  F005         	movff	pinMode@pin,??_pinMode
  5438  006798  0E01               	movlw	1
  5439  00679A  6E06               	movwf	(??_pinMode+1)^0,c
  5440  00679C  2A05               	incf	??_pinMode^0,f,c
  5441  00679E  EFD3  F033         	goto	u2134
  5442  0067A2                     u2135:
  5443  0067A2  90D8               	bcf	status,0,c
  5444  0067A4  3606               	rlcf	(??_pinMode+1)^0,f,c
  5445  0067A6                     u2134:
  5446  0067A6  2E05               	decfsz	??_pinMode^0,f,c
  5447  0067A8  EFD1  F033         	goto	u2135
  5448  0067AC  5006               	movf	(??_pinMode+1)^0,w,c
  5449  0067AE  0AFF               	xorlw	255
  5450  0067B0  1692               	andwf	146,f,c	;volatile
  5451  0067B2  EFC9  F034         	goto	l76
  5452  0067B6                     l2392:
  5453  0067B6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5454  0067B8  EFE9  F033         	goto	u2140
  5455  0067BC  5002               	movf	(pinMode@pin+1)^0,w,c
  5456  0067BE  E107               	bnz	u2141
  5457  0067C0  0E10               	movlw	16
  5458  0067C2  5C01               	subwf	pinMode@pin^0,w,c
  5459  0067C4  B0D8               	btfsc	status,0,c
  5460  0067C6  EFE7  F033         	goto	u2141
  5461  0067CA  EFE9  F033         	goto	u2140
  5462  0067CE                     u2141:
  5463  0067CE  EF17  F034         	goto	l2400
  5464  0067D2                     u2140:
  5465  0067D2                     
  5466                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5467  0067D2  5003               	movf	pinMode@type^0,w,c
  5468  0067D4  1004               	iorwf	(pinMode@type+1)^0,w,c
  5469  0067D6  B4D8               	btfsc	status,2,c
  5470  0067D8  EFF0  F033         	goto	u2151
  5471  0067DC  EFF2  F033         	goto	u2150
  5472  0067E0                     u2151:
  5473  0067E0  EF04  F034         	goto	l2398
  5474  0067E4                     u2150:
  5475  0067E4  C001  F005         	movff	pinMode@pin,??_pinMode
  5476  0067E8  0EF8               	movlw	-8
  5477  0067EA  2605               	addwf	??_pinMode^0,f,c
  5478  0067EC  0E01               	movlw	1
  5479  0067EE  6E06               	movwf	(??_pinMode+1)^0,c
  5480  0067F0  2A05               	incf	??_pinMode^0,f,c
  5481  0067F2  EFFD  F033         	goto	u2164
  5482  0067F6                     u2165:
  5483  0067F6  90D8               	bcf	status,0,c
  5484  0067F8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5485  0067FA                     u2164:
  5486  0067FA  2E05               	decfsz	??_pinMode^0,f,c
  5487  0067FC  EFFB  F033         	goto	u2165
  5488  006800  5006               	movf	(??_pinMode+1)^0,w,c
  5489  006802  1293               	iorwf	147,f,c	;volatile
  5490  006804  EFC9  F034         	goto	l76
  5491  006808                     l2398:
  5492  006808  C001  F005         	movff	pinMode@pin,??_pinMode
  5493  00680C  0EF8               	movlw	-8
  5494  00680E  2605               	addwf	??_pinMode^0,f,c
  5495  006810  0E01               	movlw	1
  5496  006812  6E06               	movwf	(??_pinMode+1)^0,c
  5497  006814  2A05               	incf	??_pinMode^0,f,c
  5498  006816  EF0F  F034         	goto	u2174
  5499  00681A                     u2175:
  5500  00681A  90D8               	bcf	status,0,c
  5501  00681C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5502  00681E                     u2174:
  5503  00681E  2E05               	decfsz	??_pinMode^0,f,c
  5504  006820  EF0D  F034         	goto	u2175
  5505  006824  5006               	movf	(??_pinMode+1)^0,w,c
  5506  006826  0AFF               	xorlw	255
  5507  006828  1693               	andwf	147,f,c	;volatile
  5508  00682A  EFC9  F034         	goto	l76
  5509  00682E                     l2400:
  5510  00682E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5511  006830  EF25  F034         	goto	u2180
  5512  006834  5002               	movf	(pinMode@pin+1)^0,w,c
  5513  006836  E107               	bnz	u2181
  5514  006838  0E18               	movlw	24
  5515  00683A  5C01               	subwf	pinMode@pin^0,w,c
  5516  00683C  B0D8               	btfsc	status,0,c
  5517  00683E  EF23  F034         	goto	u2181
  5518  006842  EF25  F034         	goto	u2180
  5519  006846                     u2181:
  5520  006846  EF53  F034         	goto	l2408
  5521  00684A                     u2180:
  5522  00684A                     
  5523                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5524  00684A  5003               	movf	pinMode@type^0,w,c
  5525  00684C  1004               	iorwf	(pinMode@type+1)^0,w,c
  5526  00684E  B4D8               	btfsc	status,2,c
  5527  006850  EF2C  F034         	goto	u2191
  5528  006854  EF2E  F034         	goto	u2190
  5529  006858                     u2191:
  5530  006858  EF40  F034         	goto	l2406
  5531  00685C                     u2190:
  5532  00685C  C001  F005         	movff	pinMode@pin,??_pinMode
  5533  006860  0EF0               	movlw	-16
  5534  006862  2605               	addwf	??_pinMode^0,f,c
  5535  006864  0E01               	movlw	1
  5536  006866  6E06               	movwf	(??_pinMode+1)^0,c
  5537  006868  2A05               	incf	??_pinMode^0,f,c
  5538  00686A  EF39  F034         	goto	u2204
  5539  00686E                     u2205:
  5540  00686E  90D8               	bcf	status,0,c
  5541  006870  3606               	rlcf	(??_pinMode+1)^0,f,c
  5542  006872                     u2204:
  5543  006872  2E05               	decfsz	??_pinMode^0,f,c
  5544  006874  EF37  F034         	goto	u2205
  5545  006878  5006               	movf	(??_pinMode+1)^0,w,c
  5546  00687A  1294               	iorwf	148,f,c	;volatile
  5547  00687C  EFC9  F034         	goto	l76
  5548  006880                     l2406:
  5549  006880  C001  F005         	movff	pinMode@pin,??_pinMode
  5550  006884  0EF0               	movlw	-16
  5551  006886  2605               	addwf	??_pinMode^0,f,c
  5552  006888  0E01               	movlw	1
  5553  00688A  6E06               	movwf	(??_pinMode+1)^0,c
  5554  00688C  2A05               	incf	??_pinMode^0,f,c
  5555  00688E  EF4B  F034         	goto	u2214
  5556  006892                     u2215:
  5557  006892  90D8               	bcf	status,0,c
  5558  006894  3606               	rlcf	(??_pinMode+1)^0,f,c
  5559  006896                     u2214:
  5560  006896  2E05               	decfsz	??_pinMode^0,f,c
  5561  006898  EF49  F034         	goto	u2215
  5562  00689C  5006               	movf	(??_pinMode+1)^0,w,c
  5563  00689E  0AFF               	xorlw	255
  5564  0068A0  1694               	andwf	148,f,c	;volatile
  5565  0068A2  EFC9  F034         	goto	l76
  5566  0068A6                     l2408:
  5567  0068A6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5568  0068A8  EF61  F034         	goto	u2220
  5569  0068AC  5002               	movf	(pinMode@pin+1)^0,w,c
  5570  0068AE  E107               	bnz	u2221
  5571  0068B0  0E20               	movlw	32
  5572  0068B2  5C01               	subwf	pinMode@pin^0,w,c
  5573  0068B4  B0D8               	btfsc	status,0,c
  5574  0068B6  EF5F  F034         	goto	u2221
  5575  0068BA  EF61  F034         	goto	u2220
  5576  0068BE                     u2221:
  5577  0068BE  EF8F  F034         	goto	l2416
  5578  0068C2                     u2220:
  5579  0068C2                     
  5580                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5581  0068C2  5003               	movf	pinMode@type^0,w,c
  5582  0068C4  1004               	iorwf	(pinMode@type+1)^0,w,c
  5583  0068C6  B4D8               	btfsc	status,2,c
  5584  0068C8  EF68  F034         	goto	u2231
  5585  0068CC  EF6A  F034         	goto	u2230
  5586  0068D0                     u2231:
  5587  0068D0  EF7C  F034         	goto	l2414
  5588  0068D4                     u2230:
  5589  0068D4  C001  F005         	movff	pinMode@pin,??_pinMode
  5590  0068D8  0EE8               	movlw	-24
  5591  0068DA  2605               	addwf	??_pinMode^0,f,c
  5592  0068DC  0E01               	movlw	1
  5593  0068DE  6E06               	movwf	(??_pinMode+1)^0,c
  5594  0068E0  2A05               	incf	??_pinMode^0,f,c
  5595  0068E2  EF75  F034         	goto	u2244
  5596  0068E6                     u2245:
  5597  0068E6  90D8               	bcf	status,0,c
  5598  0068E8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5599  0068EA                     u2244:
  5600  0068EA  2E05               	decfsz	??_pinMode^0,f,c
  5601  0068EC  EF73  F034         	goto	u2245
  5602  0068F0  5006               	movf	(??_pinMode+1)^0,w,c
  5603  0068F2  1295               	iorwf	149,f,c	;volatile
  5604  0068F4  EFC9  F034         	goto	l76
  5605  0068F8                     l2414:
  5606  0068F8  C001  F005         	movff	pinMode@pin,??_pinMode
  5607  0068FC  0EE8               	movlw	-24
  5608  0068FE  2605               	addwf	??_pinMode^0,f,c
  5609  006900  0E01               	movlw	1
  5610  006902  6E06               	movwf	(??_pinMode+1)^0,c
  5611  006904  2A05               	incf	??_pinMode^0,f,c
  5612  006906  EF87  F034         	goto	u2254
  5613  00690A                     u2255:
  5614  00690A  90D8               	bcf	status,0,c
  5615  00690C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5616  00690E                     u2254:
  5617  00690E  2E05               	decfsz	??_pinMode^0,f,c
  5618  006910  EF85  F034         	goto	u2255
  5619  006914  5006               	movf	(??_pinMode+1)^0,w,c
  5620  006916  0AFF               	xorlw	255
  5621  006918  1695               	andwf	149,f,c	;volatile
  5622  00691A  EFC9  F034         	goto	l76
  5623  00691E                     l2416:
  5624  00691E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5625  006920  EF9D  F034         	goto	u2260
  5626  006924  5002               	movf	(pinMode@pin+1)^0,w,c
  5627  006926  E107               	bnz	u2261
  5628  006928  0E28               	movlw	40
  5629  00692A  5C01               	subwf	pinMode@pin^0,w,c
  5630  00692C  B0D8               	btfsc	status,0,c
  5631  00692E  EF9B  F034         	goto	u2261
  5632  006932  EF9D  F034         	goto	u2260
  5633  006936                     u2261:
  5634  006936  EFC9  F034         	goto	l76
  5635  00693A                     u2260:
  5636  00693A                     
  5637                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5638  00693A  5003               	movf	pinMode@type^0,w,c
  5639  00693C  1004               	iorwf	(pinMode@type+1)^0,w,c
  5640  00693E  B4D8               	btfsc	status,2,c
  5641  006940  EFA4  F034         	goto	u2271
  5642  006944  EFA6  F034         	goto	u2270
  5643  006948                     u2271:
  5644  006948  EFB8  F034         	goto	l2422
  5645  00694C                     u2270:
  5646  00694C  C001  F005         	movff	pinMode@pin,??_pinMode
  5647  006950  0EE0               	movlw	-32
  5648  006952  2605               	addwf	??_pinMode^0,f,c
  5649  006954  0E01               	movlw	1
  5650  006956  6E06               	movwf	(??_pinMode+1)^0,c
  5651  006958  2A05               	incf	??_pinMode^0,f,c
  5652  00695A  EFB1  F034         	goto	u2284
  5653  00695E                     u2285:
  5654  00695E  90D8               	bcf	status,0,c
  5655  006960  3606               	rlcf	(??_pinMode+1)^0,f,c
  5656  006962                     u2284:
  5657  006962  2E05               	decfsz	??_pinMode^0,f,c
  5658  006964  EFAF  F034         	goto	u2285
  5659  006968  5006               	movf	(??_pinMode+1)^0,w,c
  5660  00696A  1296               	iorwf	150,f,c	;volatile
  5661  00696C  EFC9  F034         	goto	l76
  5662  006970                     l2422:
  5663  006970  C001  F005         	movff	pinMode@pin,??_pinMode
  5664  006974  0EE0               	movlw	-32
  5665  006976  2605               	addwf	??_pinMode^0,f,c
  5666  006978  0E01               	movlw	1
  5667  00697A  6E06               	movwf	(??_pinMode+1)^0,c
  5668  00697C  2A05               	incf	??_pinMode^0,f,c
  5669  00697E  EFC3  F034         	goto	u2294
  5670  006982                     u2295:
  5671  006982  90D8               	bcf	status,0,c
  5672  006984  3606               	rlcf	(??_pinMode+1)^0,f,c
  5673  006986                     u2294:
  5674  006986  2E05               	decfsz	??_pinMode^0,f,c
  5675  006988  EFC1  F034         	goto	u2295
  5676  00698C  5006               	movf	(??_pinMode+1)^0,w,c
  5677  00698E  0AFF               	xorlw	255
  5678  006990  1696               	andwf	150,f,c	;volatile
  5679  006992                     l76:
  5680  006992  0012               	return		;funcret
  5681  006994                     __end_of_pinMode:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _pushNibble *****************
  5685 ;; Defined at:
  5686 ;;		line 25 in file "lcd.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  value           1    wreg     unsigned char 
  5689 ;;  rs              2    9[COMRAM] int 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  value           1   11[COMRAM] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5701 ;;      Params:         2       0       0       0       0       0       0
  5702 ;;      Locals:         1       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0
  5704 ;;      Totals:         3       0       0       0       0       0       0
  5705 ;;Total ram usage:        3 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 3
  5708 ;; This function calls:
  5709 ;;		_digitalWrite
  5710 ;;		_pulseEnablePin
  5711 ;;		_soWrite
  5712 ;; This function is called by:
  5713 ;;		_lcdInit
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text19
  5718  0052DA                     __ptext19:
  5719                           	callstack 0
  5720  0052DA                     _pushNibble:
  5721                           	callstack 26
  5722                           
  5723                           ;incstack = 0
  5724                           ;pushNibble@value stored from wreg
  5725  0052DA  6E0C               	movwf	pushNibble@value^0,c
  5726  0052DC                     
  5727                           ;lcd.c: 26:  soWrite(value);
  5728  0052DC  C00C  F007         	movff	pushNibble@value,soWrite@value
  5729  0052E0  6A08               	clrf	(soWrite@value+1)^0,c
  5730  0052E2  EC1B  F02A         	call	_soWrite	;wreg free
  5731                           
  5732                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  5733  0052E6  0E00               	movlw	0
  5734  0052E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5735  0052EA  0E1D               	movlw	29
  5736  0052EC  6E01               	movwf	digitalWrite@pin^0,c
  5737  0052EE  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  5738  0052F2  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  5739  0052F6  EC7C  F032         	call	_digitalWrite	;wreg free
  5740                           
  5741                           ;lcd.c: 28:  pulseEnablePin();
  5742  0052FA  ECFA  F029         	call	_pulseEnablePin	;wreg free
  5743  0052FE  0012               	return		;funcret
  5744  005300                     __end_of_pushNibble:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function _lcdCommand *****************
  5748 ;; Defined at:
  5749 ;;		line 40 in file "lcd.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  value           1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  value           1   13[COMRAM] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5763 ;;      Params:         0       0       0       0       0       0       0
  5764 ;;      Locals:         1       0       0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0
  5766 ;;      Totals:         1       0       0       0       0       0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 4
  5770 ;; This function calls:
  5771 ;;		_delayMili
  5772 ;;		_pushByte
  5773 ;; This function is called by:
  5774 ;;		_lcdInit
  5775 ;;		_Start
  5776 ;;		_Jogador1
  5777 ;;		_Jogador2
  5778 ;;		_Versus
  5779 ;;		_FimDeJogo
  5780 ;;		_main
  5781 ;;		_lcdPosition
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text20
  5786  00529E                     __ptext20:
  5787                           	callstack 0
  5788  00529E                     _lcdCommand:
  5789                           	callstack 25
  5790                           
  5791                           ;incstack = 0
  5792                           ;lcdCommand@value stored from wreg
  5793  00529E  6E0E               	movwf	lcdCommand@value^0,c
  5794  0052A0                     
  5795                           ;lcd.c: 41:  pushByte(value, 0);
  5796  0052A0  0E00               	movlw	0
  5797  0052A2  6E0B               	movwf	(pushByte@rs+1)^0,c
  5798  0052A4  0E00               	movlw	0
  5799  0052A6  6E0A               	movwf	pushByte@rs^0,c
  5800  0052A8  500E               	movf	lcdCommand@value^0,w,c
  5801  0052AA  ECC4  F02A         	call	_pushByte
  5802                           
  5803                           ;lcd.c: 42:  delayMili(2);
  5804  0052AE  0E00               	movlw	0
  5805  0052B0  6E02               	movwf	(delayMili@a+1)^0,c
  5806  0052B2  0E02               	movlw	2
  5807  0052B4  6E01               	movwf	delayMili@a^0,c
  5808  0052B6  ECAA  F029         	call	_delayMili	;wreg free
  5809  0052BA  0012               	return		;funcret
  5810  0052BC                     __end_of_lcdCommand:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function _pushByte *****************
  5814 ;; Defined at:
  5815 ;;		line 31 in file "lcd.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  value           1    wreg     unsigned char 
  5818 ;;  rs              2    9[COMRAM] int 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  value           1   12[COMRAM] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5830 ;;      Params:         2       0       0       0       0       0       0
  5831 ;;      Locals:         1       0       0       0       0       0       0
  5832 ;;      Temps:          1       0       0       0       0       0       0
  5833 ;;      Totals:         4       0       0       0       0       0       0
  5834 ;;Total ram usage:        4 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 3
  5837 ;; This function calls:
  5838 ;;		_digitalWrite
  5839 ;;		_pulseEnablePin
  5840 ;;		_soWrite
  5841 ;; This function is called by:
  5842 ;;		_lcdCommand
  5843 ;;		_lcdChar
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text21
  5848  005588                     __ptext21:
  5849                           	callstack 0
  5850  005588                     _pushByte:
  5851                           	callstack 25
  5852                           
  5853                           ;incstack = 0
  5854                           ;pushByte@value stored from wreg
  5855  005588  6E0D               	movwf	pushByte@value^0,c
  5856  00558A                     
  5857                           ;lcd.c: 32:  soWrite(value >> 4);
  5858  00558A  C00D  F00C         	movff	pushByte@value,??_pushByte
  5859  00558E  3A0C               	swapf	??_pushByte^0,f,c
  5860  005590  0E0F               	movlw	15
  5861  005592  160C               	andwf	??_pushByte^0,f,c
  5862  005594  500C               	movf	??_pushByte^0,w,c
  5863  005596  6E07               	movwf	soWrite@value^0,c
  5864  005598  6A08               	clrf	(soWrite@value+1)^0,c
  5865  00559A  EC1B  F02A         	call	_soWrite	;wreg free
  5866                           
  5867                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5868  00559E  0E00               	movlw	0
  5869  0055A0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5870  0055A2  0E1D               	movlw	29
  5871  0055A4  6E01               	movwf	digitalWrite@pin^0,c
  5872  0055A6  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5873  0055AA  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5874  0055AE  EC7C  F032         	call	_digitalWrite	;wreg free
  5875                           
  5876                           ;lcd.c: 34:  pulseEnablePin();
  5877  0055B2  ECFA  F029         	call	_pulseEnablePin	;wreg free
  5878                           
  5879                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5880  0055B6  C00D  F00C         	movff	pushByte@value,??_pushByte
  5881  0055BA  0E0F               	movlw	15
  5882  0055BC  160C               	andwf	??_pushByte^0,f,c
  5883  0055BE  500C               	movf	??_pushByte^0,w,c
  5884  0055C0  6E07               	movwf	soWrite@value^0,c
  5885  0055C2  6A08               	clrf	(soWrite@value+1)^0,c
  5886  0055C4  EC1B  F02A         	call	_soWrite	;wreg free
  5887                           
  5888                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5889  0055C8  0E00               	movlw	0
  5890  0055CA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5891  0055CC  0E1D               	movlw	29
  5892  0055CE  6E01               	movwf	digitalWrite@pin^0,c
  5893  0055D0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5894  0055D4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5895  0055D8  EC7C  F032         	call	_digitalWrite	;wreg free
  5896                           
  5897                           ;lcd.c: 38:  pulseEnablePin();
  5898  0055DC  ECFA  F029         	call	_pulseEnablePin	;wreg free
  5899  0055E0  0012               	return		;funcret
  5900  0055E2                     __end_of_pushByte:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _pulseEnablePin *****************
  5904 ;; Defined at:
  5905 ;;		line 18 in file "lcd.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5919 ;;      Params:         0       0       0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 1
  5926 ;; This function calls:
  5927 ;;		_delayMicro
  5928 ;;		_digitalWrite
  5929 ;; This function is called by:
  5930 ;;		_pushNibble
  5931 ;;		_pushByte
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text22
  5936  0053F4                     __ptext22:
  5937                           	callstack 0
  5938  0053F4                     _pulseEnablePin:
  5939                           	callstack 26
  5940  0053F4                     
  5941                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5942  0053F4  0E00               	movlw	0
  5943  0053F6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5944  0053F8  0E1C               	movlw	28
  5945  0053FA  6E01               	movwf	digitalWrite@pin^0,c
  5946  0053FC  0E00               	movlw	0
  5947  0053FE  6E04               	movwf	(digitalWrite@value+1)^0,c
  5948  005400  0E01               	movlw	1
  5949  005402  6E03               	movwf	digitalWrite@value^0,c
  5950  005404  EC7C  F032         	call	_digitalWrite	;wreg free
  5951  005408                     
  5952                           ;lcd.c: 20:  delayMicro(5);
  5953  005408  0E00               	movlw	0
  5954  00540A  6E02               	movwf	(delayMicro@a+1)^0,c
  5955  00540C  0E05               	movlw	5
  5956  00540E  6E01               	movwf	delayMicro@a^0,c
  5957  005410  EC3E  F029         	call	_delayMicro	;wreg free
  5958  005414                     
  5959                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5960  005414  0E00               	movlw	0
  5961  005416  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5962  005418  0E1C               	movlw	28
  5963  00541A  6E01               	movwf	digitalWrite@pin^0,c
  5964  00541C  0E00               	movlw	0
  5965  00541E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5966  005420  0E00               	movlw	0
  5967  005422  6E03               	movwf	digitalWrite@value^0,c
  5968  005424  EC7C  F032         	call	_digitalWrite	;wreg free
  5969                           
  5970                           ;lcd.c: 22:  delayMicro(5);
  5971  005428  0E00               	movlw	0
  5972  00542A  6E02               	movwf	(delayMicro@a+1)^0,c
  5973  00542C  0E05               	movlw	5
  5974  00542E  6E01               	movwf	delayMicro@a^0,c
  5975  005430  EC3E  F029         	call	_delayMicro	;wreg free
  5976  005434  0012               	return		;funcret
  5977  005436                     __end_of_pulseEnablePin:
  5978                           	callstack 0
  5979                           
  5980 ;; *************** function _delayMicro *****************
  5981 ;; Defined at:
  5982 ;;		line 5 in file "lcd.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  a               2    0[COMRAM] int 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  i               2    0        volatile int 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		None
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5996 ;;      Params:         2       0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0
  5999 ;;      Totals:         2       0       0       0       0       0       0
  6000 ;;Total ram usage:        2 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_pulseEnablePin
  6006 ;;		_lcdChar
  6007 ;;		_lcdInit
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text23
  6012  00527C                     __ptext23:
  6013                           	callstack 0
  6014  00527C                     _delayMicro:
  6015                           	callstack 26
  6016  00527C  0012               	return		;funcret
  6017  00527E                     __end_of_delayMicro:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _delayMili *****************
  6021 ;; Defined at:
  6022 ;;		line 10 in file "lcd.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  a               2    0[COMRAM] int 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  i               2    3[COMRAM] volatile int 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         2       0       0       0       0       0       0
  6037 ;;      Locals:         2       0       0       0       0       0       0
  6038 ;;      Temps:          1       0       0       0       0       0       0
  6039 ;;      Totals:         5       0       0       0       0       0       0
  6040 ;;Total ram usage:        5 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_lcdCommand
  6046 ;;		_lcdInit
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text24
  6051  005354                     __ptext24:
  6052                           	callstack 0
  6053  005354                     _delayMili:
  6054                           	callstack 28
  6055  005354                     
  6056                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  6057  005354  0E00               	movlw	0
  6058  005356  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  6059  005358  0E00               	movlw	0
  6060  00535A  6E04               	movwf	delayMili@i^0,c	;volatile
  6061  00535C  EFB2  F029         	goto	l2428
  6062  005360                     l2426:
  6063                           
  6064                           ;lcd.c: 15:  }
  6065  005360  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  6066  005362  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  6067  005364                     l2428:
  6068  005364  5001               	movf	delayMili@a^0,w,c
  6069  005366  5C04               	subwf	delayMili@i^0,w,c	;volatile
  6070  005368  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  6071  00536A  0A80               	xorlw	128
  6072  00536C  6E03               	movwf	??_delayMili^0,c
  6073  00536E  5002               	movf	(delayMili@a+1)^0,w,c
  6074  005370  0A80               	xorlw	128
  6075  005372  5803               	subwfb	??_delayMili^0,w,c
  6076  005374  A0D8               	btfss	status,0,c
  6077  005376  EFBF  F029         	goto	u2301
  6078  00537A  EFC1  F029         	goto	u2300
  6079  00537E                     u2301:
  6080  00537E  EFB0  F029         	goto	l2426
  6081  005382                     u2300:
  6082  005382  0012               	return		;funcret
  6083  005384                     __end_of_delayMili:
  6084                           	callstack 0
  6085                           
  6086 ;; *************** function ___flge *****************
  6087 ;; Defined at:
  6088 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  ff1             4    0[COMRAM] void 
  6091 ;;  ff2             4    4[COMRAM] void 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;		None               void
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6103 ;;      Params:         8       0       0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0
  6105 ;;      Temps:          4       0       0       0       0       0       0
  6106 ;;      Totals:        12       0       0       0       0       0       0
  6107 ;;Total ram usage:       12 bytes
  6108 ;; Hardware stack levels used: 1
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_Start
  6113 ;;		_NumJogos
  6114 ;;		_Jogador1
  6115 ;;		_Jogador2
  6116 ;;		_FimDeJogo
  6117 ;;		_main
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text25
  6122  005B08                     __ptext25:
  6123                           	callstack 0
  6124  005B08                     ___flge:
  6125                           	callstack 30
  6126  005B08  0E00               	movlw	0
  6127  005B0A  1401               	andwf	___flge@ff1^0,w,c
  6128  005B0C  6E09               	movwf	??___flge^0,c
  6129  005B0E  0E00               	movlw	0
  6130  005B10  1402               	andwf	(___flge@ff1+1)^0,w,c
  6131  005B12  6E0A               	movwf	(??___flge+1)^0,c
  6132  005B14  0E80               	movlw	128
  6133  005B16  1403               	andwf	(___flge@ff1+2)^0,w,c
  6134  005B18  6E0B               	movwf	(??___flge+2)^0,c
  6135  005B1A  0E7F               	movlw	127
  6136  005B1C  1404               	andwf	(___flge@ff1+3)^0,w,c
  6137  005B1E  6E0C               	movwf	(??___flge+3)^0,c
  6138  005B20  5009               	movf	??___flge^0,w,c
  6139  005B22  100A               	iorwf	(??___flge+1)^0,w,c
  6140  005B24  100B               	iorwf	(??___flge+2)^0,w,c
  6141  005B26  100C               	iorwf	(??___flge+3)^0,w,c
  6142  005B28  A4D8               	btfss	status,2,c
  6143  005B2A  EF99  F02D         	goto	u2991
  6144  005B2E  EF9B  F02D         	goto	u2990
  6145  005B32                     u2991:
  6146  005B32  EFA3  F02D         	goto	l2834
  6147  005B36                     u2990:
  6148  005B36  0E00               	movlw	0
  6149  005B38  6E01               	movwf	___flge@ff1^0,c
  6150  005B3A  0E00               	movlw	0
  6151  005B3C  6E02               	movwf	(___flge@ff1+1)^0,c
  6152  005B3E  0E00               	movlw	0
  6153  005B40  6E03               	movwf	(___flge@ff1+2)^0,c
  6154  005B42  0E00               	movlw	0
  6155  005B44  6E04               	movwf	(___flge@ff1+3)^0,c
  6156  005B46                     l2834:
  6157  005B46  0E00               	movlw	0
  6158  005B48  1405               	andwf	___flge@ff2^0,w,c
  6159  005B4A  6E09               	movwf	??___flge^0,c
  6160  005B4C  0E00               	movlw	0
  6161  005B4E  1406               	andwf	(___flge@ff2+1)^0,w,c
  6162  005B50  6E0A               	movwf	(??___flge+1)^0,c
  6163  005B52  0E80               	movlw	128
  6164  005B54  1407               	andwf	(___flge@ff2+2)^0,w,c
  6165  005B56  6E0B               	movwf	(??___flge+2)^0,c
  6166  005B58  0E7F               	movlw	127
  6167  005B5A  1408               	andwf	(___flge@ff2+3)^0,w,c
  6168  005B5C  6E0C               	movwf	(??___flge+3)^0,c
  6169  005B5E  5009               	movf	??___flge^0,w,c
  6170  005B60  100A               	iorwf	(??___flge+1)^0,w,c
  6171  005B62  100B               	iorwf	(??___flge+2)^0,w,c
  6172  005B64  100C               	iorwf	(??___flge+3)^0,w,c
  6173  005B66  A4D8               	btfss	status,2,c
  6174  005B68  EFB8  F02D         	goto	u3001
  6175  005B6C  EFBA  F02D         	goto	u3000
  6176  005B70                     u3001:
  6177  005B70  EFC2  F02D         	goto	l2838
  6178  005B74                     u3000:
  6179  005B74  0E00               	movlw	0
  6180  005B76  6E05               	movwf	___flge@ff2^0,c
  6181  005B78  0E00               	movlw	0
  6182  005B7A  6E06               	movwf	(___flge@ff2+1)^0,c
  6183  005B7C  0E00               	movlw	0
  6184  005B7E  6E07               	movwf	(___flge@ff2+2)^0,c
  6185  005B80  0E00               	movlw	0
  6186  005B82  6E08               	movwf	(___flge@ff2+3)^0,c
  6187  005B84                     l2838:
  6188  005B84  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6189  005B86  EFC7  F02D         	goto	u3011
  6190  005B8A  EFC9  F02D         	goto	u3010
  6191  005B8E                     u3011:
  6192  005B8E  EFD2  F02D         	goto	l2842
  6193  005B92                     u3010:
  6194  005B92  6C01               	negf	___flge@ff1^0,c
  6195  005B94  1E02               	comf	(___flge@ff1+1)^0,f,c
  6196  005B96  B0D8               	btfsc	status,0,c
  6197  005B98  2A02               	incf	(___flge@ff1+1)^0,f,c
  6198  005B9A  1E03               	comf	(___flge@ff1+2)^0,f,c
  6199  005B9C  B0D8               	btfsc	status,0,c
  6200  005B9E  2A03               	incf	(___flge@ff1+2)^0,f,c
  6201  005BA0  0E80               	movlw	128
  6202  005BA2  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6203  005BA4                     l2842:
  6204  005BA4  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6205  005BA6  EFD7  F02D         	goto	u3021
  6206  005BAA  EFD9  F02D         	goto	u3020
  6207  005BAE                     u3021:
  6208  005BAE  EFE2  F02D         	goto	l668
  6209  005BB2                     u3020:
  6210  005BB2  6C05               	negf	___flge@ff2^0,c
  6211  005BB4  1E06               	comf	(___flge@ff2+1)^0,f,c
  6212  005BB6  B0D8               	btfsc	status,0,c
  6213  005BB8  2A06               	incf	(___flge@ff2+1)^0,f,c
  6214  005BBA  1E07               	comf	(___flge@ff2+2)^0,f,c
  6215  005BBC  B0D8               	btfsc	status,0,c
  6216  005BBE  2A07               	incf	(___flge@ff2+2)^0,f,c
  6217  005BC0  0E80               	movlw	128
  6218  005BC2  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6219  005BC4                     l668:
  6220  005BC4  0E00               	movlw	0
  6221  005BC6  1A01               	xorwf	___flge@ff1^0,f,c
  6222  005BC8  0E00               	movlw	0
  6223  005BCA  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6224  005BCC  0E00               	movlw	0
  6225  005BCE  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6226  005BD0  0E80               	movlw	128
  6227  005BD2  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6228  005BD4  0E00               	movlw	0
  6229  005BD6  1A05               	xorwf	___flge@ff2^0,f,c
  6230  005BD8  0E00               	movlw	0
  6231  005BDA  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6232  005BDC  0E00               	movlw	0
  6233  005BDE  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6234  005BE0  0E80               	movlw	128
  6235  005BE2  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6236  005BE4  5005               	movf	___flge@ff2^0,w,c
  6237  005BE6  5C01               	subwf	___flge@ff1^0,w,c
  6238  005BE8  5006               	movf	(___flge@ff2+1)^0,w,c
  6239  005BEA  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6240  005BEC  5007               	movf	(___flge@ff2+2)^0,w,c
  6241  005BEE  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6242  005BF0  5008               	movf	(___flge@ff2+3)^0,w,c
  6243  005BF2  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6244  005BF4  B0D8               	btfsc	status,0,c
  6245  005BF6  EFFF  F02D         	goto	u3031
  6246  005BFA  EF01  F02E         	goto	u3030
  6247  005BFE                     u3031:
  6248  005BFE  EF04  F02E         	goto	l2848
  6249  005C02                     u3030:
  6250  005C02  90D8               	bcf	status,0,c
  6251  005C04  EF05  F02E         	goto	l673
  6252  005C08                     l2848:
  6253  005C08  80D8               	bsf	status,0,c
  6254  005C0A                     l673:
  6255  005C0A  0012               	return		;funcret
  6256  005C0C                     __end_of___flge:
  6257                           	callstack 0
  6258                           
  6259 ;; *************** function ___fladd *****************
  6260 ;; Defined at:
  6261 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  b               4    0[COMRAM] void 
  6264 ;;  a               4    4[COMRAM] void 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  grs             1   15[COMRAM] unsigned char 
  6267 ;;  bexp            1   14[COMRAM] unsigned char 
  6268 ;;  aexp            1   13[COMRAM] unsigned char 
  6269 ;;  signs           1   12[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  4    0[COMRAM] unsigned char 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6279 ;;      Params:         8       0       0       0       0       0       0
  6280 ;;      Locals:         4       0       0       0       0       0       0
  6281 ;;      Temps:          4       0       0       0       0       0       0
  6282 ;;      Totals:        16       0       0       0       0       0       0
  6283 ;;Total ram usage:       16 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_Start
  6289 ;;		_NumJogos
  6290 ;;		_Jogador1
  6291 ;;		_Jogador2
  6292 ;;		_FimDeJogo
  6293 ;;		_main
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text26
  6298  006994                     __ptext26:
  6299                           	callstack 0
  6300  006994                     ___fladd:
  6301                           	callstack 30
  6302  006994  5004               	movf	(___fladd@b+3)^0,w,c
  6303  006996  0B80               	andlw	128
  6304  006998  6E0D               	movwf	___fladd@signs^0,c
  6305  00699A  5004               	movf	(___fladd@b+3)^0,w,c
  6306  00699C  2404               	addwf	(___fladd@b+3)^0,w,c
  6307  00699E  6E0F               	movwf	___fladd@bexp^0,c
  6308  0069A0  AE03               	btfss	(___fladd@b+2)^0,7,c
  6309  0069A2  EFD5  F034         	goto	u2601
  6310  0069A6  EFD7  F034         	goto	u2600
  6311  0069AA                     u2601:
  6312  0069AA  EFD8  F034         	goto	l2634
  6313  0069AE                     u2600:
  6314  0069AE  800F               	bsf	___fladd@bexp^0,0,c
  6315  0069B0                     l2634:
  6316  0069B0  500F               	movf	___fladd@bexp^0,w,c
  6317  0069B2  B4D8               	btfsc	status,2,c
  6318  0069B4  EFDE  F034         	goto	u2611
  6319  0069B8  EFE0  F034         	goto	u2610
  6320  0069BC                     u2611:
  6321  0069BC  EFF5  F034         	goto	l2644
  6322  0069C0                     u2610:
  6323  0069C0  280F               	incf	___fladd@bexp^0,w,c
  6324  0069C2  A4D8               	btfss	status,2,c
  6325  0069C4  EFE6  F034         	goto	u2621
  6326  0069C8  EFE8  F034         	goto	u2620
  6327  0069CC                     u2621:
  6328  0069CC  EFF0  F034         	goto	l2640
  6329  0069D0                     u2620:
  6330  0069D0  0E00               	movlw	0
  6331  0069D2  6E01               	movwf	___fladd@b^0,c
  6332  0069D4  0E00               	movlw	0
  6333  0069D6  6E02               	movwf	(___fladd@b+1)^0,c
  6334  0069D8  0E00               	movlw	0
  6335  0069DA  6E03               	movwf	(___fladd@b+2)^0,c
  6336  0069DC  0E00               	movlw	0
  6337  0069DE  6E04               	movwf	(___fladd@b+3)^0,c
  6338  0069E0                     l2640:
  6339  0069E0  8E03               	bsf	(___fladd@b+2)^0,7,c
  6340  0069E2  0E00               	movlw	0
  6341  0069E4  6E04               	movwf	(___fladd@b+3)^0,c
  6342  0069E6  EFFD  F034         	goto	l2646
  6343  0069EA                     l2644:
  6344  0069EA  0E00               	movlw	0
  6345  0069EC  6E01               	movwf	___fladd@b^0,c
  6346  0069EE  0E00               	movlw	0
  6347  0069F0  6E02               	movwf	(___fladd@b+1)^0,c
  6348  0069F2  0E00               	movlw	0
  6349  0069F4  6E03               	movwf	(___fladd@b+2)^0,c
  6350  0069F6  0E00               	movlw	0
  6351  0069F8  6E04               	movwf	(___fladd@b+3)^0,c
  6352  0069FA                     l2646:
  6353  0069FA  5008               	movf	(___fladd@a+3)^0,w,c
  6354  0069FC  0B80               	andlw	128
  6355  0069FE  6E0E               	movwf	___fladd@aexp^0,c
  6356  006A00  500D               	movf	___fladd@signs^0,w,c
  6357  006A02  180E               	xorwf	___fladd@aexp^0,w,c
  6358  006A04  B4D8               	btfsc	status,2,c
  6359  006A06  EF07  F035         	goto	u2631
  6360  006A0A  EF09  F035         	goto	u2630
  6361  006A0E                     u2631:
  6362  006A0E  EF0A  F035         	goto	l2652
  6363  006A12                     u2630:
  6364  006A12  8C0D               	bsf	___fladd@signs^0,6,c
  6365  006A14                     l2652:
  6366  006A14  5008               	movf	(___fladd@a+3)^0,w,c
  6367  006A16  2408               	addwf	(___fladd@a+3)^0,w,c
  6368  006A18  6E0E               	movwf	___fladd@aexp^0,c
  6369  006A1A  AE07               	btfss	(___fladd@a+2)^0,7,c
  6370  006A1C  EF12  F035         	goto	u2641
  6371  006A20  EF14  F035         	goto	u2640
  6372  006A24                     u2641:
  6373  006A24  EF15  F035         	goto	l2658
  6374  006A28                     u2640:
  6375  006A28  800E               	bsf	___fladd@aexp^0,0,c
  6376  006A2A                     l2658:
  6377  006A2A  500E               	movf	___fladd@aexp^0,w,c
  6378  006A2C  B4D8               	btfsc	status,2,c
  6379  006A2E  EF1B  F035         	goto	u2651
  6380  006A32  EF1D  F035         	goto	u2650
  6381  006A36                     u2651:
  6382  006A36  EF32  F035         	goto	l2668
  6383  006A3A                     u2650:
  6384  006A3A  280E               	incf	___fladd@aexp^0,w,c
  6385  006A3C  A4D8               	btfss	status,2,c
  6386  006A3E  EF23  F035         	goto	u2661
  6387  006A42  EF25  F035         	goto	u2660
  6388  006A46                     u2661:
  6389  006A46  EF2D  F035         	goto	l2664
  6390  006A4A                     u2660:
  6391  006A4A  0E00               	movlw	0
  6392  006A4C  6E05               	movwf	___fladd@a^0,c
  6393  006A4E  0E00               	movlw	0
  6394  006A50  6E06               	movwf	(___fladd@a+1)^0,c
  6395  006A52  0E00               	movlw	0
  6396  006A54  6E07               	movwf	(___fladd@a+2)^0,c
  6397  006A56  0E00               	movlw	0
  6398  006A58  6E08               	movwf	(___fladd@a+3)^0,c
  6399  006A5A                     l2664:
  6400  006A5A  8E07               	bsf	(___fladd@a+2)^0,7,c
  6401  006A5C  0E00               	movlw	0
  6402  006A5E  6E08               	movwf	(___fladd@a+3)^0,c
  6403  006A60  EF3A  F035         	goto	l2670
  6404  006A64                     l2668:
  6405  006A64  0E00               	movlw	0
  6406  006A66  6E05               	movwf	___fladd@a^0,c
  6407  006A68  0E00               	movlw	0
  6408  006A6A  6E06               	movwf	(___fladd@a+1)^0,c
  6409  006A6C  0E00               	movlw	0
  6410  006A6E  6E07               	movwf	(___fladd@a+2)^0,c
  6411  006A70  0E00               	movlw	0
  6412  006A72  6E08               	movwf	(___fladd@a+3)^0,c
  6413  006A74                     l2670:
  6414  006A74  500F               	movf	___fladd@bexp^0,w,c
  6415  006A76  5C0E               	subwf	___fladd@aexp^0,w,c
  6416  006A78  B0D8               	btfsc	status,0,c
  6417  006A7A  EF41  F035         	goto	u2671
  6418  006A7E  EF43  F035         	goto	u2670
  6419  006A82                     u2671:
  6420  006A82  EF6A  F035         	goto	l2706
  6421  006A86                     u2670:
  6422  006A86  AC0D               	btfss	___fladd@signs^0,6,c
  6423  006A88  EF48  F035         	goto	u2681
  6424  006A8C  EF4A  F035         	goto	u2680
  6425  006A90                     u2681:
  6426  006A90  EF4C  F035         	goto	l2676
  6427  006A94                     u2680:
  6428  006A94  0E80               	movlw	128
  6429  006A96  1A0D               	xorwf	___fladd@signs^0,f,c
  6430  006A98                     l2676:
  6431  006A98  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6432  006A9C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6433  006AA0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6434  006AA4  C001  F010         	movff	___fladd@b,___fladd@grs
  6435  006AA8  C005  F001         	movff	___fladd@a,___fladd@b
  6436  006AAC  C010  F005         	movff	___fladd@grs,___fladd@a
  6437  006AB0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6438  006AB4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6439  006AB8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6440  006ABC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6441  006AC0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6442  006AC4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6443  006AC8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6444  006ACC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6445  006AD0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6446  006AD4                     l2706:
  6447  006AD4  0E00               	movlw	0
  6448  006AD6  6E10               	movwf	___fladd@grs^0,c
  6449  006AD8  500F               	movf	___fladd@bexp^0,w,c
  6450  006ADA  C00E  F009         	movff	___fladd@aexp,??___fladd
  6451  006ADE  6A0A               	clrf	(??___fladd+1)^0,c
  6452  006AE0  5E09               	subwf	??___fladd^0,f,c
  6453  006AE2  0E00               	movlw	0
  6454  006AE4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6455  006AE6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6456  006AE8  EF7F  F035         	goto	u2691
  6457  006AEC  500A               	movf	(??___fladd+1)^0,w,c
  6458  006AEE  E109               	bnz	u2690
  6459  006AF0  0E1A               	movlw	26
  6460  006AF2  5C09               	subwf	??___fladd^0,w,c
  6461  006AF4  A0D8               	btfss	status,0,c
  6462  006AF6  EF7F  F035         	goto	u2691
  6463  006AFA  EF81  F035         	goto	u2690
  6464  006AFE                     u2691:
  6465  006AFE  EFB8  F035         	goto	l932
  6466  006B02                     u2690:
  6467  006B02  5001               	movf	___fladd@b^0,w,c
  6468  006B04  1002               	iorwf	(___fladd@b+1)^0,w,c
  6469  006B06  1003               	iorwf	(___fladd@b+2)^0,w,c
  6470  006B08  1004               	iorwf	(___fladd@b+3)^0,w,c
  6471  006B0A  A4D8               	btfss	status,2,c
  6472  006B0C  EF8A  F035         	goto	u2701
  6473  006B10  EF8D  F035         	goto	u2700
  6474  006B14                     u2701:
  6475  006B14  0E01               	movlw	1
  6476  006B16  EF8E  F035         	goto	u2710
  6477  006B1A                     u2700:
  6478  006B1A  0E00               	movlw	0
  6479  006B1C                     u2710:
  6480  006B1C  6E10               	movwf	___fladd@grs^0,c
  6481  006B1E  0E00               	movlw	0
  6482  006B20  6E01               	movwf	___fladd@b^0,c
  6483  006B22  0E00               	movlw	0
  6484  006B24  6E02               	movwf	(___fladd@b+1)^0,c
  6485  006B26  0E00               	movlw	0
  6486  006B28  6E03               	movwf	(___fladd@b+2)^0,c
  6487  006B2A  0E00               	movlw	0
  6488  006B2C  6E04               	movwf	(___fladd@b+3)^0,c
  6489  006B2E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6490  006B32  EFC1  F035         	goto	l931
  6491  006B36                     l933:
  6492  006B36  A010               	btfss	___fladd@grs^0,0,c
  6493  006B38  EFA0  F035         	goto	u2721
  6494  006B3C  EFA2  F035         	goto	u2720
  6495  006B40                     u2721:
  6496  006B40  EFA8  F035         	goto	l2718
  6497  006B44                     u2720:
  6498  006B44  90D8               	bcf	status,0,c
  6499  006B46  3010               	rrcf	___fladd@grs^0,w,c
  6500  006B48  0901               	iorlw	1
  6501  006B4A  6E10               	movwf	___fladd@grs^0,c
  6502  006B4C  EFAA  F035         	goto	l2720
  6503  006B50                     l2718:
  6504  006B50  90D8               	bcf	status,0,c
  6505  006B52  3210               	rrcf	___fladd@grs^0,f,c
  6506  006B54                     l2720:
  6507  006B54  A001               	btfss	___fladd@b^0,0,c
  6508  006B56  EFAF  F035         	goto	u2731
  6509  006B5A  EFB1  F035         	goto	u2730
  6510  006B5E                     u2731:
  6511  006B5E  EFB2  F035         	goto	l2724
  6512  006B62                     u2730:
  6513  006B62  8E10               	bsf	___fladd@grs^0,7,c
  6514  006B64                     l2724:
  6515  006B64  3404               	rlcf	(___fladd@b+3)^0,w,c
  6516  006B66  3204               	rrcf	(___fladd@b+3)^0,f,c
  6517  006B68  3203               	rrcf	(___fladd@b+2)^0,f,c
  6518  006B6A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6519  006B6C  3201               	rrcf	___fladd@b^0,f,c
  6520  006B6E  2A0F               	incf	___fladd@bexp^0,f,c
  6521  006B70                     l932:
  6522  006B70  500E               	movf	___fladd@aexp^0,w,c
  6523  006B72  5C0F               	subwf	___fladd@bexp^0,w,c
  6524  006B74  A0D8               	btfss	status,0,c
  6525  006B76  EFBF  F035         	goto	u2741
  6526  006B7A  EFC1  F035         	goto	u2740
  6527  006B7E                     u2741:
  6528  006B7E  EF9B  F035         	goto	l933
  6529  006B82                     u2740:
  6530  006B82                     l931:
  6531  006B82  BC0D               	btfsc	___fladd@signs^0,6,c
  6532  006B84  EFC6  F035         	goto	u2751
  6533  006B88  EFC8  F035         	goto	u2750
  6534  006B8C                     u2751:
  6535  006B8C  EF08  F036         	goto	l2752
  6536  006B90                     u2750:
  6537  006B90  500F               	movf	___fladd@bexp^0,w,c
  6538  006B92  A4D8               	btfss	status,2,c
  6539  006B94  EFCE  F035         	goto	u2761
  6540  006B98  EFD0  F035         	goto	u2760
  6541  006B9C                     u2761:
  6542  006B9C  EFDA  F035         	goto	l2734
  6543  006BA0                     u2760:
  6544  006BA0  0E00               	movlw	0
  6545  006BA2  6E01               	movwf	?___fladd^0,c
  6546  006BA4  0E00               	movlw	0
  6547  006BA6  6E02               	movwf	(?___fladd+1)^0,c
  6548  006BA8  0E00               	movlw	0
  6549  006BAA  6E03               	movwf	(?___fladd+2)^0,c
  6550  006BAC  0E00               	movlw	0
  6551  006BAE  6E04               	movwf	(?___fladd+3)^0,c
  6552  006BB0  EF29  F037         	goto	l940
  6553  006BB4                     l2734:
  6554  006BB4  5005               	movf	___fladd@a^0,w,c
  6555  006BB6  2601               	addwf	___fladd@b^0,f,c
  6556  006BB8  5006               	movf	(___fladd@a+1)^0,w,c
  6557  006BBA  2202               	addwfc	(___fladd@b+1)^0,f,c
  6558  006BBC  5007               	movf	(___fladd@a+2)^0,w,c
  6559  006BBE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6560  006BC0  5008               	movf	(___fladd@a+3)^0,w,c
  6561  006BC2  2204               	addwfc	(___fladd@b+3)^0,f,c
  6562  006BC4  A004               	btfss	(___fladd@b+3)^0,0,c
  6563  006BC6  EFE7  F035         	goto	u2771
  6564  006BCA  EFE9  F035         	goto	u2770
  6565  006BCE                     u2771:
  6566  006BCE  EF95  F036         	goto	l2788
  6567  006BD2                     u2770:
  6568  006BD2  A010               	btfss	___fladd@grs^0,0,c
  6569  006BD4  EFEE  F035         	goto	u2781
  6570  006BD8  EFF0  F035         	goto	u2780
  6571  006BDC                     u2781:
  6572  006BDC  EFF6  F035         	goto	l2742
  6573  006BE0                     u2780:
  6574  006BE0  90D8               	bcf	status,0,c
  6575  006BE2  3010               	rrcf	___fladd@grs^0,w,c
  6576  006BE4  0901               	iorlw	1
  6577  006BE6  6E10               	movwf	___fladd@grs^0,c
  6578  006BE8  EFF8  F035         	goto	l2744
  6579  006BEC                     l2742:
  6580  006BEC  90D8               	bcf	status,0,c
  6581  006BEE  3210               	rrcf	___fladd@grs^0,f,c
  6582  006BF0                     l2744:
  6583  006BF0  A001               	btfss	___fladd@b^0,0,c
  6584  006BF2  EFFD  F035         	goto	u2791
  6585  006BF6  EFFF  F035         	goto	u2790
  6586  006BFA                     u2791:
  6587  006BFA  EF00  F036         	goto	l2748
  6588  006BFE                     u2790:
  6589  006BFE  8E10               	bsf	___fladd@grs^0,7,c
  6590  006C00                     l2748:
  6591  006C00  3404               	rlcf	(___fladd@b+3)^0,w,c
  6592  006C02  3204               	rrcf	(___fladd@b+3)^0,f,c
  6593  006C04  3203               	rrcf	(___fladd@b+2)^0,f,c
  6594  006C06  3202               	rrcf	(___fladd@b+1)^0,f,c
  6595  006C08  3201               	rrcf	___fladd@b^0,f,c
  6596  006C0A  2A0F               	incf	___fladd@bexp^0,f,c
  6597  006C0C  EF95  F036         	goto	l2788
  6598  006C10                     l2752:
  6599  006C10  5005               	movf	___fladd@a^0,w,c
  6600  006C12  5C01               	subwf	___fladd@b^0,w,c
  6601  006C14  5006               	movf	(___fladd@a+1)^0,w,c
  6602  006C16  5802               	subwfb	(___fladd@b+1)^0,w,c
  6603  006C18  5007               	movf	(___fladd@a+2)^0,w,c
  6604  006C1A  5803               	subwfb	(___fladd@b+2)^0,w,c
  6605  006C1C  5004               	movf	(___fladd@b+3)^0,w,c
  6606  006C1E  0A80               	xorlw	128
  6607  006C20  6E09               	movwf	??___fladd^0,c
  6608  006C22  5008               	movf	(___fladd@a+3)^0,w,c
  6609  006C24  0A80               	xorlw	128
  6610  006C26  5809               	subwfb	??___fladd^0,w,c
  6611  006C28  B0D8               	btfsc	status,0,c
  6612  006C2A  EF19  F036         	goto	u2801
  6613  006C2E  EF1B  F036         	goto	u2800
  6614  006C32                     u2801:
  6615  006C32  EF46  F036         	goto	l2762
  6616  006C36                     u2800:
  6617  006C36  5001               	movf	___fladd@b^0,w,c
  6618  006C38  5C05               	subwf	___fladd@a^0,w,c
  6619  006C3A  6E09               	movwf	??___fladd^0,c
  6620  006C3C  5002               	movf	(___fladd@b+1)^0,w,c
  6621  006C3E  5806               	subwfb	(___fladd@a+1)^0,w,c
  6622  006C40  6E0A               	movwf	(??___fladd+1)^0,c
  6623  006C42  5003               	movf	(___fladd@b+2)^0,w,c
  6624  006C44  5807               	subwfb	(___fladd@a+2)^0,w,c
  6625  006C46  6E0B               	movwf	(??___fladd+2)^0,c
  6626  006C48  5004               	movf	(___fladd@b+3)^0,w,c
  6627  006C4A  5808               	subwfb	(___fladd@a+3)^0,w,c
  6628  006C4C  6E0C               	movwf	(??___fladd+3)^0,c
  6629  006C4E  0EFF               	movlw	255
  6630  006C50  2409               	addwf	??___fladd^0,w,c
  6631  006C52  6E01               	movwf	___fladd@b^0,c
  6632  006C54  0EFF               	movlw	255
  6633  006C56  200A               	addwfc	(??___fladd+1)^0,w,c
  6634  006C58  6E02               	movwf	(___fladd@b+1)^0,c
  6635  006C5A  0EFF               	movlw	255
  6636  006C5C  200B               	addwfc	(??___fladd+2)^0,w,c
  6637  006C5E  6E03               	movwf	(___fladd@b+2)^0,c
  6638  006C60  0EFF               	movlw	255
  6639  006C62  200C               	addwfc	(??___fladd+3)^0,w,c
  6640  006C64  6E04               	movwf	(___fladd@b+3)^0,c
  6641  006C66  0E80               	movlw	128
  6642  006C68  1A0D               	xorwf	___fladd@signs^0,f,c
  6643  006C6A  6C10               	negf	___fladd@grs^0,c
  6644  006C6C  5010               	movf	___fladd@grs^0,w,c
  6645  006C6E  A4D8               	btfss	status,2,c
  6646  006C70  EF3C  F036         	goto	u2811
  6647  006C74  EF3E  F036         	goto	u2810
  6648  006C78                     u2811:
  6649  006C78  EF4E  F036         	goto	l948
  6650  006C7C                     u2810:
  6651  006C7C  0E01               	movlw	1
  6652  006C7E  2601               	addwf	___fladd@b^0,f,c
  6653  006C80  0E00               	movlw	0
  6654  006C82  2202               	addwfc	(___fladd@b+1)^0,f,c
  6655  006C84  2203               	addwfc	(___fladd@b+2)^0,f,c
  6656  006C86  2204               	addwfc	(___fladd@b+3)^0,f,c
  6657  006C88  EF4E  F036         	goto	l948
  6658  006C8C                     l2762:
  6659  006C8C  5005               	movf	___fladd@a^0,w,c
  6660  006C8E  5E01               	subwf	___fladd@b^0,f,c
  6661  006C90  5006               	movf	(___fladd@a+1)^0,w,c
  6662  006C92  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6663  006C94  5007               	movf	(___fladd@a+2)^0,w,c
  6664  006C96  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6665  006C98  5008               	movf	(___fladd@a+3)^0,w,c
  6666  006C9A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6667  006C9C                     l948:
  6668  006C9C  5001               	movf	___fladd@b^0,w,c
  6669  006C9E  1002               	iorwf	(___fladd@b+1)^0,w,c
  6670  006CA0  1003               	iorwf	(___fladd@b+2)^0,w,c
  6671  006CA2  1004               	iorwf	(___fladd@b+3)^0,w,c
  6672  006CA4  A4D8               	btfss	status,2,c
  6673  006CA6  EF57  F036         	goto	u2821
  6674  006CAA  EF59  F036         	goto	u2820
  6675  006CAE                     u2821:
  6676  006CAE  EF8E  F036         	goto	l2786
  6677  006CB2                     u2820:
  6678  006CB2  5010               	movf	___fladd@grs^0,w,c
  6679  006CB4  A4D8               	btfss	status,2,c
  6680  006CB6  EF5F  F036         	goto	u2831
  6681  006CBA  EF61  F036         	goto	u2830
  6682  006CBE                     u2831:
  6683  006CBE  EF8E  F036         	goto	l2786
  6684  006CC2                     u2830:
  6685  006CC2  0E00               	movlw	0
  6686  006CC4  6E01               	movwf	?___fladd^0,c
  6687  006CC6  0E00               	movlw	0
  6688  006CC8  6E02               	movwf	(?___fladd+1)^0,c
  6689  006CCA  0E00               	movlw	0
  6690  006CCC  6E03               	movwf	(?___fladd+2)^0,c
  6691  006CCE  0E00               	movlw	0
  6692  006CD0  6E04               	movwf	(?___fladd+3)^0,c
  6693  006CD2  EF29  F037         	goto	l940
  6694  006CD6                     l2770:
  6695  006CD6  90D8               	bcf	status,0,c
  6696  006CD8  3601               	rlcf	___fladd@b^0,f,c
  6697  006CDA  3602               	rlcf	(___fladd@b+1)^0,f,c
  6698  006CDC  3603               	rlcf	(___fladd@b+2)^0,f,c
  6699  006CDE  3604               	rlcf	(___fladd@b+3)^0,f,c
  6700  006CE0  AE10               	btfss	___fladd@grs^0,7,c
  6701  006CE2  EF75  F036         	goto	u2841
  6702  006CE6  EF77  F036         	goto	u2840
  6703  006CEA                     u2841:
  6704  006CEA  EF78  F036         	goto	l2776
  6705  006CEE                     u2840:
  6706  006CEE  8001               	bsf	___fladd@b^0,0,c
  6707  006CF0                     l2776:
  6708  006CF0  A010               	btfss	___fladd@grs^0,0,c
  6709  006CF2  EF7D  F036         	goto	u2851
  6710  006CF6  EF7F  F036         	goto	u2850
  6711  006CFA                     u2851:
  6712  006CFA  EF83  F036         	goto	l2780
  6713  006CFE                     u2850:
  6714  006CFE  80D8               	bsf	status,0,c
  6715  006D00  3610               	rlcf	___fladd@grs^0,f,c
  6716  006D02  EF85  F036         	goto	l2782
  6717  006D06                     l2780:
  6718  006D06  90D8               	bcf	status,0,c
  6719  006D08  3610               	rlcf	___fladd@grs^0,f,c
  6720  006D0A                     l2782:
  6721  006D0A  500F               	movf	___fladd@bexp^0,w,c
  6722  006D0C  B4D8               	btfsc	status,2,c
  6723  006D0E  EF8B  F036         	goto	u2861
  6724  006D12  EF8D  F036         	goto	u2860
  6725  006D16                     u2861:
  6726  006D16  EF8E  F036         	goto	l2786
  6727  006D1A                     u2860:
  6728  006D1A  060F               	decf	___fladd@bexp^0,f,c
  6729  006D1C                     l2786:
  6730  006D1C  AE03               	btfss	(___fladd@b+2)^0,7,c
  6731  006D1E  EF93  F036         	goto	u2871
  6732  006D22  EF95  F036         	goto	u2870
  6733  006D26                     u2871:
  6734  006D26  EF6B  F036         	goto	l2770
  6735  006D2A                     u2870:
  6736  006D2A                     l2788:
  6737  006D2A  0E00               	movlw	0
  6738  006D2C  6E0E               	movwf	___fladd@aexp^0,c
  6739  006D2E  AE10               	btfss	___fladd@grs^0,7,c
  6740  006D30  EF9C  F036         	goto	u2881
  6741  006D34  EF9E  F036         	goto	u2880
  6742  006D38                     u2881:
  6743  006D38  EFB6  F036         	goto	l957
  6744  006D3C                     u2880:
  6745  006D3C  C010  F009         	movff	___fladd@grs,??___fladd
  6746  006D40  0E7F               	movlw	127
  6747  006D42  1609               	andwf	??___fladd^0,f,c
  6748  006D44  B4D8               	btfsc	status,2,c
  6749  006D46  EFA7  F036         	goto	u2891
  6750  006D4A  EFA9  F036         	goto	u2890
  6751  006D4E                     u2891:
  6752  006D4E  EFAD  F036         	goto	l958
  6753  006D52                     u2890:
  6754  006D52                     l2794:
  6755  006D52  0E01               	movlw	1
  6756  006D54  6E0E               	movwf	___fladd@aexp^0,c
  6757  006D56  EFB6  F036         	goto	l957
  6758  006D5A                     l958:
  6759  006D5A  A001               	btfss	___fladd@b^0,0,c
  6760  006D5C  EFB2  F036         	goto	u2901
  6761  006D60  EFB4  F036         	goto	u2900
  6762  006D64                     u2901:
  6763  006D64  EFB6  F036         	goto	l957
  6764  006D68                     u2900:
  6765  006D68  EFA9  F036         	goto	l2794
  6766  006D6C                     l957:
  6767  006D6C  500E               	movf	___fladd@aexp^0,w,c
  6768  006D6E  B4D8               	btfsc	status,2,c
  6769  006D70  EFBC  F036         	goto	u2911
  6770  006D74  EFBE  F036         	goto	u2910
  6771  006D78                     u2911:
  6772  006D78  EFE9  F036         	goto	l2806
  6773  006D7C                     u2910:
  6774  006D7C  0E01               	movlw	1
  6775  006D7E  2601               	addwf	___fladd@b^0,f,c
  6776  006D80  0E00               	movlw	0
  6777  006D82  2202               	addwfc	(___fladd@b+1)^0,f,c
  6778  006D84  2203               	addwfc	(___fladd@b+2)^0,f,c
  6779  006D86  2204               	addwfc	(___fladd@b+3)^0,f,c
  6780  006D88  A004               	btfss	(___fladd@b+3)^0,0,c
  6781  006D8A  EFC9  F036         	goto	u2921
  6782  006D8E  EFCB  F036         	goto	u2920
  6783  006D92                     u2921:
  6784  006D92  EFE9  F036         	goto	l2806
  6785  006D96                     u2920:
  6786  006D96  C001  F009         	movff	___fladd@b,??___fladd
  6787  006D9A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6788  006D9E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6789  006DA2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6790  006DA6  340C               	rlcf	(??___fladd+3)^0,w,c
  6791  006DA8  320C               	rrcf	(??___fladd+3)^0,f,c
  6792  006DAA  320B               	rrcf	(??___fladd+2)^0,f,c
  6793  006DAC  320A               	rrcf	(??___fladd+1)^0,f,c
  6794  006DAE  3209               	rrcf	??___fladd^0,f,c
  6795  006DB0  C009  F001         	movff	??___fladd,___fladd@b
  6796  006DB4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6797  006DB8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6798  006DBC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6799  006DC0  280F               	incf	___fladd@bexp^0,w,c
  6800  006DC2  B4D8               	btfsc	status,2,c
  6801  006DC4  EFE6  F036         	goto	u2931
  6802  006DC8  EFE8  F036         	goto	u2930
  6803  006DCC                     u2931:
  6804  006DCC  EFE9  F036         	goto	l2806
  6805  006DD0                     u2930:
  6806  006DD0  2A0F               	incf	___fladd@bexp^0,f,c
  6807  006DD2                     l2806:
  6808  006DD2  280F               	incf	___fladd@bexp^0,w,c
  6809  006DD4  B4D8               	btfsc	status,2,c
  6810  006DD6  EFEF  F036         	goto	u2941
  6811  006DDA  EFF1  F036         	goto	u2940
  6812  006DDE                     u2941:
  6813  006DDE  EFF9  F036         	goto	l2810
  6814  006DE2                     u2940:
  6815  006DE2  500F               	movf	___fladd@bexp^0,w,c
  6816  006DE4  A4D8               	btfss	status,2,c
  6817  006DE6  EFF7  F036         	goto	u2951
  6818  006DEA  EFF9  F036         	goto	u2950
  6819  006DEE                     u2951:
  6820  006DEE  EF0B  F037         	goto	l2814
  6821  006DF2                     u2950:
  6822  006DF2                     l2810:
  6823  006DF2  0E00               	movlw	0
  6824  006DF4  6E01               	movwf	___fladd@b^0,c
  6825  006DF6  0E00               	movlw	0
  6826  006DF8  6E02               	movwf	(___fladd@b+1)^0,c
  6827  006DFA  0E00               	movlw	0
  6828  006DFC  6E03               	movwf	(___fladd@b+2)^0,c
  6829  006DFE  0E00               	movlw	0
  6830  006E00  6E04               	movwf	(___fladd@b+3)^0,c
  6831  006E02  500F               	movf	___fladd@bexp^0,w,c
  6832  006E04  A4D8               	btfss	status,2,c
  6833  006E06  EF07  F037         	goto	u2961
  6834  006E0A  EF09  F037         	goto	u2960
  6835  006E0E                     u2961:
  6836  006E0E  EF0B  F037         	goto	l2814
  6837  006E12                     u2960:
  6838  006E12  0E00               	movlw	0
  6839  006E14  6E0D               	movwf	___fladd@signs^0,c
  6840  006E16                     l2814:
  6841  006E16  A00F               	btfss	___fladd@bexp^0,0,c
  6842  006E18  EF10  F037         	goto	u2971
  6843  006E1C  EF12  F037         	goto	u2970
  6844  006E20                     u2971:
  6845  006E20  EF15  F037         	goto	l2818
  6846  006E24                     u2970:
  6847  006E24  8E03               	bsf	(___fladd@b+2)^0,7,c
  6848  006E26  EF16  F037         	goto	l2820
  6849  006E2A                     l2818:
  6850  006E2A  9E03               	bcf	(___fladd@b+2)^0,7,c
  6851  006E2C                     l2820:
  6852  006E2C  90D8               	bcf	status,0,c
  6853  006E2E  300F               	rrcf	___fladd@bexp^0,w,c
  6854  006E30  6E04               	movwf	(___fladd@b+3)^0,c
  6855  006E32  AE0D               	btfss	___fladd@signs^0,7,c
  6856  006E34  EF1E  F037         	goto	u2981
  6857  006E38  EF20  F037         	goto	u2980
  6858  006E3C                     u2981:
  6859  006E3C  EF21  F037         	goto	l2826
  6860  006E40                     u2980:
  6861  006E40  8E04               	bsf	(___fladd@b+3)^0,7,c
  6862  006E42                     l2826:
  6863  006E42  C001  F001         	movff	___fladd@b,?___fladd
  6864  006E46  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6865  006E4A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6866  006E4E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6867  006E52                     l940:
  6868  006E52  0012               	return		;funcret
  6869  006E54                     __end_of___fladd:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function _Placar *****************
  6873 ;; Defined at:
  6874 ;;		line 227 in file "main.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  c1              2   14[COMRAM] unsigned int 
  6877 ;;  c2              2   16[COMRAM] unsigned int 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6889 ;;      Params:         4       0       0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0
  6892 ;;      Totals:         4       0       0       0       0       0       0
  6893 ;;Total ram usage:        4 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 4
  6896 ;; This function calls:
  6897 ;;		___lwdiv
  6898 ;;		___lwmod
  6899 ;;		_ssdDigit
  6900 ;;		_ssdUpdate
  6901 ;; This function is called by:
  6902 ;;		_FimDeJogo
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text27
  6908  0057C2                     __ptext27:
  6909                           	callstack 0
  6910  0057C2                     _Placar:
  6911                           	callstack 26
  6912  0057C2                     
  6913                           ;main.c: 228:     ssdDigit(((c1 / 10) % 10), 0);
  6914  0057C2  0E00               	movlw	0
  6915  0057C4  6E0D               	movwf	ssdDigit@pos^0,c
  6916  0057C6  0E00               	movlw	0
  6917  0057C8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6918  0057CA  0E0A               	movlw	10
  6919  0057CC  6E03               	movwf	___lwdiv@divisor^0,c
  6920  0057CE  C00F  F001         	movff	Placar@c1,___lwdiv@dividend
  6921  0057D2  C010  F002         	movff	Placar@c1+1,___lwdiv@dividend+1
  6922  0057D6  EC23  F02B         	call	___lwdiv	;wreg free
  6923  0057DA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  6924  0057DE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  6925  0057E2  0E00               	movlw	0
  6926  0057E4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  6927  0057E6  0E0A               	movlw	10
  6928  0057E8  6E0A               	movwf	___lwmod@divisor^0,c
  6929  0057EA  ECF1  F02A         	call	___lwmod	;wreg free
  6930  0057EE  5008               	movf	?___lwmod^0,w,c
  6931  0057F0  EC98  F02A         	call	_ssdDigit
  6932                           
  6933                           ;main.c: 229:     ssdDigit((c1 % 10), 1);
  6934  0057F4  0E01               	movlw	1
  6935  0057F6  6E0D               	movwf	ssdDigit@pos^0,c
  6936  0057F8  C00F  F008         	movff	Placar@c1,___lwmod@dividend
  6937  0057FC  C010  F009         	movff	Placar@c1+1,___lwmod@dividend+1
  6938  005800  0E00               	movlw	0
  6939  005802  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  6940  005804  0E0A               	movlw	10
  6941  005806  6E0A               	movwf	___lwmod@divisor^0,c
  6942  005808  ECF1  F02A         	call	___lwmod	;wreg free
  6943  00580C  5008               	movf	?___lwmod^0,w,c
  6944  00580E  EC98  F02A         	call	_ssdDigit
  6945                           
  6946                           ;main.c: 230:     ssdDigit(((c2 / 10) % 10), 2);
  6947  005812  0E02               	movlw	2
  6948  005814  6E0D               	movwf	ssdDigit@pos^0,c
  6949  005816  0E00               	movlw	0
  6950  005818  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6951  00581A  0E0A               	movlw	10
  6952  00581C  6E03               	movwf	___lwdiv@divisor^0,c
  6953  00581E  C011  F001         	movff	Placar@c2,___lwdiv@dividend
  6954  005822  C012  F002         	movff	Placar@c2+1,___lwdiv@dividend+1
  6955  005826  EC23  F02B         	call	___lwdiv	;wreg free
  6956  00582A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  6957  00582E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  6958  005832  0E00               	movlw	0
  6959  005834  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  6960  005836  0E0A               	movlw	10
  6961  005838  6E0A               	movwf	___lwmod@divisor^0,c
  6962  00583A  ECF1  F02A         	call	___lwmod	;wreg free
  6963  00583E  5008               	movf	?___lwmod^0,w,c
  6964  005840  EC98  F02A         	call	_ssdDigit
  6965                           
  6966                           ;main.c: 231:     ssdDigit((c2 % 10), 3);
  6967  005844  0E03               	movlw	3
  6968  005846  6E0D               	movwf	ssdDigit@pos^0,c
  6969  005848  C011  F008         	movff	Placar@c2,___lwmod@dividend
  6970  00584C  C012  F009         	movff	Placar@c2+1,___lwmod@dividend+1
  6971  005850  0E00               	movlw	0
  6972  005852  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  6973  005854  0E0A               	movlw	10
  6974  005856  6E0A               	movwf	___lwmod@divisor^0,c
  6975  005858  ECF1  F02A         	call	___lwmod	;wreg free
  6976  00585C  5008               	movf	?___lwmod^0,w,c
  6977  00585E  EC98  F02A         	call	_ssdDigit
  6978  005862                     
  6979                           ;main.c: 232:     ssdUpdate();
  6980  005862  ECDE  F02F         	call	_ssdUpdate	;wreg free
  6981  005866  0012               	return		;funcret
  6982  005868                     __end_of_Placar:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function _ssdUpdate *****************
  6986 ;; Defined at:
  6987 ;;		line 50 in file "ssd.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7001 ;;      Params:         0       0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0
  7003 ;;      Temps:          2       0       0       0       0       0       0
  7004 ;;      Totals:         2       0       0       0       0       0       0
  7005 ;;Total ram usage:        2 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; Hardware stack levels required when called: 3
  7008 ;; This function calls:
  7009 ;;		_digitalWrite
  7010 ;;		_soWrite
  7011 ;; This function is called by:
  7012 ;;		_Placar
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text28
  7017  005FBC                     __ptext28:
  7018                           	callstack 0
  7019  005FBC                     _ssdUpdate:
  7020                           	callstack 26
  7021  005FBC                     
  7022                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  7023  005FBC  0E00               	movlw	0
  7024  005FBE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7025  005FC0  0E18               	movlw	24
  7026  005FC2  6E01               	movwf	digitalWrite@pin^0,c
  7027  005FC4  0E00               	movlw	0
  7028  005FC6  6E04               	movwf	(digitalWrite@value+1)^0,c
  7029  005FC8  0E00               	movlw	0
  7030  005FCA  6E03               	movwf	digitalWrite@value^0,c
  7031  005FCC  EC7C  F032         	call	_digitalWrite	;wreg free
  7032                           
  7033                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  7034  005FD0  0E00               	movlw	0
  7035  005FD2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7036  005FD4  0E19               	movlw	25
  7037  005FD6  6E01               	movwf	digitalWrite@pin^0,c
  7038  005FD8  0E00               	movlw	0
  7039  005FDA  6E04               	movwf	(digitalWrite@value+1)^0,c
  7040  005FDC  0E00               	movlw	0
  7041  005FDE  6E03               	movwf	digitalWrite@value^0,c
  7042  005FE0  EC7C  F032         	call	_digitalWrite	;wreg free
  7043                           
  7044                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  7045  005FE4  0E00               	movlw	0
  7046  005FE6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7047  005FE8  0E1A               	movlw	26
  7048  005FEA  6E01               	movwf	digitalWrite@pin^0,c
  7049  005FEC  0E00               	movlw	0
  7050  005FEE  6E04               	movwf	(digitalWrite@value+1)^0,c
  7051  005FF0  0E00               	movlw	0
  7052  005FF2  6E03               	movwf	digitalWrite@value^0,c
  7053  005FF4  EC7C  F032         	call	_digitalWrite	;wreg free
  7054                           
  7055                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  7056  005FF8  0E00               	movlw	0
  7057  005FFA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7058  005FFC  0E1B               	movlw	27
  7059  005FFE  6E01               	movwf	digitalWrite@pin^0,c
  7060  006000  0E00               	movlw	0
  7061  006002  6E04               	movwf	(digitalWrite@value+1)^0,c
  7062  006004  0E00               	movlw	0
  7063  006006  6E03               	movwf	digitalWrite@value^0,c
  7064  006008  EC7C  F032         	call	_digitalWrite	;wreg free
  7065                           
  7066                           ;ssd.c: 60:     soWrite(0x00);
  7067  00600C  0E00               	movlw	0
  7068  00600E  6E08               	movwf	(soWrite@value+1)^0,c
  7069  006010  0E00               	movlw	0
  7070  006012  6E07               	movwf	soWrite@value^0,c
  7071  006014  EC1B  F02A         	call	_soWrite	;wreg free
  7072                           
  7073                           ;ssd.c: 62:     switch (display)
  7074  006018  EF76  F030         	goto	l2526
  7075  00601C                     l2498:
  7076                           
  7077                           ;ssd.c: 65:             soWrite(valor[v0]);
  7078  00601C  0EBB               	movlw	low _valor
  7079  00601E  2443               	addwf	_v0^0,w,c
  7080  006020  6EF6               	movwf	tblptrl,c
  7081  006022  6AF7               	clrf	tblptrh,c
  7082  006024  0E7D               	movlw	high _valor
  7083  006026  22F7               	addwfc	tblptrh,f,c
  7084  006028                     	if	0	;There are less than 3 active tblptr bytes
  7085  006028                     	endif
  7086  006028  0008               	tblrd		*
  7087  00602A  50F5               	movf	tablat,w,c
  7088  00602C  6E07               	movwf	soWrite@value^0,c
  7089  00602E  6A08               	clrf	(soWrite@value+1)^0,c
  7090  006030  EC1B  F02A         	call	_soWrite	;wreg free
  7091  006034                     
  7092                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  7093  006034  0E00               	movlw	0
  7094  006036  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7095  006038  0E18               	movlw	24
  7096  00603A  6E01               	movwf	digitalWrite@pin^0,c
  7097  00603C  0E00               	movlw	0
  7098  00603E  6E04               	movwf	(digitalWrite@value+1)^0,c
  7099  006040  0E01               	movlw	1
  7100  006042  6E03               	movwf	digitalWrite@value^0,c
  7101  006044  EC7C  F032         	call	_digitalWrite	;wreg free
  7102  006048                     
  7103                           ;ssd.c: 67:             display = 1;
  7104  006048  0E01               	movlw	1
  7105  00604A  6E44               	movwf	_display^0,c
  7106                           
  7107                           ;ssd.c: 68:             break;
  7108  00604C  EF93  F030         	goto	l225
  7109  006050                     l2504:
  7110                           
  7111                           ;ssd.c: 71:             soWrite(valor[v1]);
  7112  006050  0EBB               	movlw	low _valor
  7113  006052  2442               	addwf	_v1^0,w,c
  7114  006054  6EF6               	movwf	tblptrl,c
  7115  006056  6AF7               	clrf	tblptrh,c
  7116  006058  0E7D               	movlw	high _valor
  7117  00605A  22F7               	addwfc	tblptrh,f,c
  7118  00605C                     	if	0	;There are less than 3 active tblptr bytes
  7119  00605C                     	endif
  7120  00605C  0008               	tblrd		*
  7121  00605E  50F5               	movf	tablat,w,c
  7122  006060  6E07               	movwf	soWrite@value^0,c
  7123  006062  6A08               	clrf	(soWrite@value+1)^0,c
  7124  006064  EC1B  F02A         	call	_soWrite	;wreg free
  7125  006068                     
  7126                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  7127  006068  0E00               	movlw	0
  7128  00606A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7129  00606C  0E19               	movlw	25
  7130  00606E  6E01               	movwf	digitalWrite@pin^0,c
  7131  006070  0E00               	movlw	0
  7132  006072  6E04               	movwf	(digitalWrite@value+1)^0,c
  7133  006074  0E01               	movlw	1
  7134  006076  6E03               	movwf	digitalWrite@value^0,c
  7135  006078  EC7C  F032         	call	_digitalWrite	;wreg free
  7136  00607C                     
  7137                           ;ssd.c: 73:             display = 2;
  7138  00607C  0E02               	movlw	2
  7139  00607E  6E44               	movwf	_display^0,c
  7140                           
  7141                           ;ssd.c: 74:             break;
  7142  006080  EF93  F030         	goto	l225
  7143  006084                     l2510:
  7144                           
  7145                           ;ssd.c: 77:             soWrite(valor[v2]);
  7146  006084  0EBB               	movlw	low _valor
  7147  006086  2441               	addwf	_v2^0,w,c
  7148  006088  6EF6               	movwf	tblptrl,c
  7149  00608A  6AF7               	clrf	tblptrh,c
  7150  00608C  0E7D               	movlw	high _valor
  7151  00608E  22F7               	addwfc	tblptrh,f,c
  7152  006090                     	if	0	;There are less than 3 active tblptr bytes
  7153  006090                     	endif
  7154  006090  0008               	tblrd		*
  7155  006092  50F5               	movf	tablat,w,c
  7156  006094  6E07               	movwf	soWrite@value^0,c
  7157  006096  6A08               	clrf	(soWrite@value+1)^0,c
  7158  006098  EC1B  F02A         	call	_soWrite	;wreg free
  7159  00609C                     
  7160                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  7161  00609C  0E00               	movlw	0
  7162  00609E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7163  0060A0  0E1A               	movlw	26
  7164  0060A2  6E01               	movwf	digitalWrite@pin^0,c
  7165  0060A4  0E00               	movlw	0
  7166  0060A6  6E04               	movwf	(digitalWrite@value+1)^0,c
  7167  0060A8  0E01               	movlw	1
  7168  0060AA  6E03               	movwf	digitalWrite@value^0,c
  7169  0060AC  EC7C  F032         	call	_digitalWrite	;wreg free
  7170  0060B0                     
  7171                           ;ssd.c: 79:             display = 3;
  7172  0060B0  0E03               	movlw	3
  7173  0060B2  6E44               	movwf	_display^0,c
  7174                           
  7175                           ;ssd.c: 80:             break;
  7176  0060B4  EF93  F030         	goto	l225
  7177  0060B8                     l2516:
  7178                           
  7179                           ;ssd.c: 83:             soWrite(valor[v3]);
  7180  0060B8  0EBB               	movlw	low _valor
  7181  0060BA  2440               	addwf	_v3^0,w,c
  7182  0060BC  6EF6               	movwf	tblptrl,c
  7183  0060BE  6AF7               	clrf	tblptrh,c
  7184  0060C0  0E7D               	movlw	high _valor
  7185  0060C2  22F7               	addwfc	tblptrh,f,c
  7186  0060C4                     	if	0	;There are less than 3 active tblptr bytes
  7187  0060C4                     	endif
  7188  0060C4  0008               	tblrd		*
  7189  0060C6  50F5               	movf	tablat,w,c
  7190  0060C8  6E07               	movwf	soWrite@value^0,c
  7191  0060CA  6A08               	clrf	(soWrite@value+1)^0,c
  7192  0060CC  EC1B  F02A         	call	_soWrite	;wreg free
  7193  0060D0                     
  7194                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  7195  0060D0  0E00               	movlw	0
  7196  0060D2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7197  0060D4  0E1B               	movlw	27
  7198  0060D6  6E01               	movwf	digitalWrite@pin^0,c
  7199  0060D8  0E00               	movlw	0
  7200  0060DA  6E04               	movwf	(digitalWrite@value+1)^0,c
  7201  0060DC  0E01               	movlw	1
  7202  0060DE  6E03               	movwf	digitalWrite@value^0,c
  7203  0060E0  EC7C  F032         	call	_digitalWrite	;wreg free
  7204  0060E4                     l2520:
  7205                           
  7206                           ;ssd.c: 85:             display = 0;
  7207  0060E4  0E00               	movlw	0
  7208  0060E6  6E44               	movwf	_display^0,c
  7209                           
  7210                           ;ssd.c: 86:             break;
  7211  0060E8  EF93  F030         	goto	l225
  7212  0060EC                     l2526:
  7213  0060EC  5044               	movf	_display^0,w,c
  7214  0060EE  6E0A               	movwf	??_ssdUpdate^0,c
  7215  0060F0  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  7216                           
  7217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7218                           ; Switch size 1, requested type "simple"
  7219                           ; Number of cases is 1, Range of values is 0 to 0
  7220                           ; switch strategies available:
  7221                           ; Name         Instructions Cycles
  7222                           ; simple_byte            4     3 (average)
  7223                           ;	Chosen strategy is simple_byte
  7224  0060F2  500B               	movf	(??_ssdUpdate+1)^0,w,c
  7225  0060F4  0A00               	xorlw	0	; case 0
  7226  0060F6  B4D8               	btfsc	status,2,c
  7227  0060F8  EF80  F030         	goto	l3474
  7228  0060FC  EF72  F030         	goto	l2520
  7229  006100                     l3474:
  7230                           
  7231                           ; Switch size 1, requested type "simple"
  7232                           ; Number of cases is 4, Range of values is 0 to 3
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte           13     7 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  006100  500A               	movf	??_ssdUpdate^0,w,c
  7238  006102  0A00               	xorlw	0	; case 0
  7239  006104  B4D8               	btfsc	status,2,c
  7240  006106  EF0E  F030         	goto	l2498
  7241  00610A  0A01               	xorlw	1	; case 1
  7242  00610C  B4D8               	btfsc	status,2,c
  7243  00610E  EF28  F030         	goto	l2504
  7244  006112  0A03               	xorlw	3	; case 2
  7245  006114  B4D8               	btfsc	status,2,c
  7246  006116  EF42  F030         	goto	l2510
  7247  00611A  0A01               	xorlw	1	; case 3
  7248  00611C  B4D8               	btfsc	status,2,c
  7249  00611E  EF5C  F030         	goto	l2516
  7250  006122  EF72  F030         	goto	l2520
  7251  006126                     l225:
  7252  006126  0012               	return		;funcret
  7253  006128                     __end_of_ssdUpdate:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _soWrite *****************
  7257 ;; Defined at:
  7258 ;;		line 18 in file "so.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  value           2    6[COMRAM] int 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  i               1    8[COMRAM] unsigned char 
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, status,0, cstack
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7272 ;;      Params:         2       0       0       0       0       0       0
  7273 ;;      Locals:         1       0       0       0       0       0       0
  7274 ;;      Temps:          0       0       0       0       0       0       0
  7275 ;;      Totals:         3       0       0       0       0       0       0
  7276 ;;Total ram usage:        3 bytes
  7277 ;; Hardware stack levels used: 1
  7278 ;; Hardware stack levels required when called: 2
  7279 ;; This function calls:
  7280 ;;		_PulseClockData
  7281 ;;		_PulseEnClock
  7282 ;;		_digitalWrite
  7283 ;; This function is called by:
  7284 ;;		_kpDebounce
  7285 ;;		_pushNibble
  7286 ;;		_pushByte
  7287 ;;		_ssdUpdate
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text29
  7292  005436                     __ptext29:
  7293                           	callstack 0
  7294  005436                     _soWrite:
  7295                           	callstack 25
  7296  005436                     
  7297                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  7298  005436  0E00               	movlw	0
  7299  005438  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7300  00543A  0E08               	movlw	8
  7301  00543C  6E01               	movwf	digitalWrite@pin^0,c
  7302  00543E  0E00               	movlw	0
  7303  005440  6E04               	movwf	(digitalWrite@value+1)^0,c
  7304  005442  0E00               	movlw	0
  7305  005444  6E03               	movwf	digitalWrite@value^0,c
  7306  005446  EC7C  F032         	call	_digitalWrite	;wreg free
  7307  00544A                     
  7308                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  7309  00544A  0E00               	movlw	0
  7310  00544C  6E09               	movwf	soWrite@i^0,c
  7311  00544E                     l2368:
  7312                           
  7313                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  7314  00544E  0E00               	movlw	0
  7315  005450  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7316  005452  0E1E               	movlw	30
  7317  005454  6E01               	movwf	digitalWrite@pin^0,c
  7318  005456  0E80               	movlw	128
  7319  005458  1407               	andwf	soWrite@value^0,w,c
  7320  00545A  6E03               	movwf	digitalWrite@value^0,c
  7321  00545C  6A04               	clrf	(digitalWrite@value+1)^0,c
  7322  00545E  EC7C  F032         	call	_digitalWrite	;wreg free
  7323                           
  7324                           ;so.c: 23:   PulseClockData();
  7325  005462  EC80  F029         	call	_PulseClockData	;wreg free
  7326  005466                     
  7327                           ;so.c: 24:   value <<= 1;
  7328  005466  90D8               	bcf	status,0,c
  7329  005468  3607               	rlcf	soWrite@value^0,f,c
  7330  00546A  3608               	rlcf	(soWrite@value+1)^0,f,c
  7331  00546C                     
  7332                           ;so.c: 25:  }
  7333  00546C  2A09               	incf	soWrite@i^0,f,c
  7334  00546E  0E07               	movlw	7
  7335  005470  6409               	cpfsgt	soWrite@i^0,c
  7336  005472  EF3D  F02A         	goto	u2091
  7337  005476  EF3F  F02A         	goto	u2090
  7338  00547A                     u2091:
  7339  00547A  EF27  F02A         	goto	l2368
  7340  00547E                     u2090:
  7341  00547E                     
  7342                           ;so.c: 26:  PulseEnClock();
  7343  00547E  EC95  F029         	call	_PulseEnClock	;wreg free
  7344  005482  0012               	return		;funcret
  7345  005484                     __end_of_soWrite:
  7346                           	callstack 0
  7347                           
  7348 ;; *************** function _PulseEnClock *****************
  7349 ;; Defined at:
  7350 ;;		line 9 in file "so.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7364 ;;      Params:         0       0       0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0
  7367 ;;      Totals:         0       0       0       0       0       0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 1
  7371 ;; This function calls:
  7372 ;;		_digitalWrite
  7373 ;; This function is called by:
  7374 ;;		_soWrite
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text30
  7379  00532A                     __ptext30:
  7380                           	callstack 0
  7381  00532A                     _PulseEnClock:
  7382                           	callstack 25
  7383  00532A                     
  7384                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  7385  00532A  0E00               	movlw	0
  7386  00532C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7387  00532E  0E1F               	movlw	31
  7388  005330  6E01               	movwf	digitalWrite@pin^0,c
  7389  005332  0E00               	movlw	0
  7390  005334  6E04               	movwf	(digitalWrite@value+1)^0,c
  7391  005336  0E01               	movlw	1
  7392  005338  6E03               	movwf	digitalWrite@value^0,c
  7393  00533A  EC7C  F032         	call	_digitalWrite	;wreg free
  7394                           
  7395                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  7396  00533E  0E00               	movlw	0
  7397  005340  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7398  005342  0E1F               	movlw	31
  7399  005344  6E01               	movwf	digitalWrite@pin^0,c
  7400  005346  0E00               	movlw	0
  7401  005348  6E04               	movwf	(digitalWrite@value+1)^0,c
  7402  00534A  0E00               	movlw	0
  7403  00534C  6E03               	movwf	digitalWrite@value^0,c
  7404  00534E  EC7C  F032         	call	_digitalWrite	;wreg free
  7405  005352  0012               	return		;funcret
  7406  005354                     __end_of_PulseEnClock:
  7407                           	callstack 0
  7408                           
  7409 ;; *************** function _PulseClockData *****************
  7410 ;; Defined at:
  7411 ;;		line 14 in file "so.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7425 ;;      Params:         0       0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0
  7428 ;;      Totals:         0       0       0       0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 1
  7432 ;; This function calls:
  7433 ;;		_digitalWrite
  7434 ;; This function is called by:
  7435 ;;		_soWrite
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text31
  7440  005300                     __ptext31:
  7441                           	callstack 0
  7442  005300                     _PulseClockData:
  7443                           	callstack 25
  7444  005300                     
  7445                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  7446  005300  0E00               	movlw	0
  7447  005302  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7448  005304  0E08               	movlw	8
  7449  005306  6E01               	movwf	digitalWrite@pin^0,c
  7450  005308  0E00               	movlw	0
  7451  00530A  6E04               	movwf	(digitalWrite@value+1)^0,c
  7452  00530C  0E01               	movlw	1
  7453  00530E  6E03               	movwf	digitalWrite@value^0,c
  7454  005310  EC7C  F032         	call	_digitalWrite	;wreg free
  7455                           
  7456                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  7457  005314  0E00               	movlw	0
  7458  005316  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7459  005318  0E08               	movlw	8
  7460  00531A  6E01               	movwf	digitalWrite@pin^0,c
  7461  00531C  0E00               	movlw	0
  7462  00531E  6E04               	movwf	(digitalWrite@value+1)^0,c
  7463  005320  0E00               	movlw	0
  7464  005322  6E03               	movwf	digitalWrite@value^0,c
  7465  005324  EC7C  F032         	call	_digitalWrite	;wreg free
  7466  005328  0012               	return		;funcret
  7467  00532A                     __end_of_PulseClockData:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _digitalWrite *****************
  7471 ;; Defined at:
  7472 ;;		line 14 in file "io.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  pin             2    0[COMRAM] int 
  7475 ;;  value           2    2[COMRAM] int 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7487 ;;      Params:         4       0       0       0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0
  7489 ;;      Temps:          2       0       0       0       0       0       0
  7490 ;;      Totals:         6       0       0       0       0       0       0
  7491 ;;Total ram usage:        6 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_pulseEnablePin
  7497 ;;		_pushNibble
  7498 ;;		_pushByte
  7499 ;;		_PulseEnClock
  7500 ;;		_PulseClockData
  7501 ;;		_soWrite
  7502 ;;		_ssdUpdate
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text32
  7507  0064F8                     __ptext32:
  7508                           	callstack 0
  7509  0064F8                     _digitalWrite:
  7510                           	callstack 26
  7511  0064F8                     
  7512                           ;io.c: 16:     if(pin <8){
  7513  0064F8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7514  0064FA  EF8A  F032         	goto	u1890
  7515  0064FE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7516  006500  E107               	bnz	u1891
  7517  006502  0E08               	movlw	8
  7518  006504  5C01               	subwf	digitalWrite@pin^0,w,c
  7519  006506  B0D8               	btfsc	status,0,c
  7520  006508  EF88  F032         	goto	u1891
  7521  00650C  EF8A  F032         	goto	u1890
  7522  006510                     u1891:
  7523  006510  EFB4  F032         	goto	l2324
  7524  006514                     u1890:
  7525  006514                     
  7526                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  7527  006514  5003               	movf	digitalWrite@value^0,w,c
  7528  006516  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7529  006518  B4D8               	btfsc	status,2,c
  7530  00651A  EF91  F032         	goto	u1901
  7531  00651E  EF93  F032         	goto	u1900
  7532  006522                     u1901:
  7533  006522  EFA3  F032         	goto	l2322
  7534  006526                     u1900:
  7535  006526  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7536  00652A  0E01               	movlw	1
  7537  00652C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7538  00652E  2A05               	incf	??_digitalWrite^0,f,c
  7539  006530  EF9C  F032         	goto	u1914
  7540  006534                     u1915:
  7541  006534  90D8               	bcf	status,0,c
  7542  006536  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7543  006538                     u1914:
  7544  006538  2E05               	decfsz	??_digitalWrite^0,f,c
  7545  00653A  EF9A  F032         	goto	u1915
  7546  00653E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7547  006540  1280               	iorwf	128,f,c	;volatile
  7548  006542  EFA2  F033         	goto	l42
  7549  006546                     l2322:
  7550  006546  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7551  00654A  0E01               	movlw	1
  7552  00654C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7553  00654E  2A05               	incf	??_digitalWrite^0,f,c
  7554  006550  EFAC  F032         	goto	u1924
  7555  006554                     u1925:
  7556  006554  90D8               	bcf	status,0,c
  7557  006556  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7558  006558                     u1924:
  7559  006558  2E05               	decfsz	??_digitalWrite^0,f,c
  7560  00655A  EFAA  F032         	goto	u1925
  7561  00655E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7562  006560  0AFF               	xorlw	255
  7563  006562  1680               	andwf	128,f,c	;volatile
  7564  006564  EFA2  F033         	goto	l42
  7565  006568                     l2324:
  7566  006568  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7567  00656A  EFC2  F032         	goto	u1930
  7568  00656E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7569  006570  E107               	bnz	u1931
  7570  006572  0E10               	movlw	16
  7571  006574  5C01               	subwf	digitalWrite@pin^0,w,c
  7572  006576  B0D8               	btfsc	status,0,c
  7573  006578  EFC0  F032         	goto	u1931
  7574  00657C  EFC2  F032         	goto	u1930
  7575  006580                     u1931:
  7576  006580  EFF0  F032         	goto	l2332
  7577  006584                     u1930:
  7578  006584                     
  7579                           ;io.c: 20:         pin -=8;
  7580  006584  0EF8               	movlw	248
  7581  006586  2601               	addwf	digitalWrite@pin^0,f,c
  7582  006588  0EFF               	movlw	255
  7583  00658A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7584                           
  7585                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7586  00658C  5003               	movf	digitalWrite@value^0,w,c
  7587  00658E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7588  006590  B4D8               	btfsc	status,2,c
  7589  006592  EFCD  F032         	goto	u1941
  7590  006596  EFCF  F032         	goto	u1940
  7591  00659A                     u1941:
  7592  00659A  EFDF  F032         	goto	l2330
  7593  00659E                     u1940:
  7594  00659E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7595  0065A2  0E01               	movlw	1
  7596  0065A4  6E06               	movwf	(??_digitalWrite+1)^0,c
  7597  0065A6  2A05               	incf	??_digitalWrite^0,f,c
  7598  0065A8  EFD8  F032         	goto	u1954
  7599  0065AC                     u1955:
  7600  0065AC  90D8               	bcf	status,0,c
  7601  0065AE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7602  0065B0                     u1954:
  7603  0065B0  2E05               	decfsz	??_digitalWrite^0,f,c
  7604  0065B2  EFD6  F032         	goto	u1955
  7605  0065B6  5006               	movf	(??_digitalWrite+1)^0,w,c
  7606  0065B8  1281               	iorwf	129,f,c	;volatile
  7607  0065BA  EFA2  F033         	goto	l42
  7608  0065BE                     l2330:
  7609  0065BE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7610  0065C2  0E01               	movlw	1
  7611  0065C4  6E06               	movwf	(??_digitalWrite+1)^0,c
  7612  0065C6  2A05               	incf	??_digitalWrite^0,f,c
  7613  0065C8  EFE8  F032         	goto	u1964
  7614  0065CC                     u1965:
  7615  0065CC  90D8               	bcf	status,0,c
  7616  0065CE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7617  0065D0                     u1964:
  7618  0065D0  2E05               	decfsz	??_digitalWrite^0,f,c
  7619  0065D2  EFE6  F032         	goto	u1965
  7620  0065D6  5006               	movf	(??_digitalWrite+1)^0,w,c
  7621  0065D8  0AFF               	xorlw	255
  7622  0065DA  1681               	andwf	129,f,c	;volatile
  7623  0065DC  EFA2  F033         	goto	l42
  7624  0065E0                     l2332:
  7625  0065E0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7626  0065E2  EFFE  F032         	goto	u1970
  7627  0065E6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7628  0065E8  E107               	bnz	u1971
  7629  0065EA  0E18               	movlw	24
  7630  0065EC  5C01               	subwf	digitalWrite@pin^0,w,c
  7631  0065EE  B0D8               	btfsc	status,0,c
  7632  0065F0  EFFC  F032         	goto	u1971
  7633  0065F4  EFFE  F032         	goto	u1970
  7634  0065F8                     u1971:
  7635  0065F8  EF2C  F033         	goto	l2340
  7636  0065FC                     u1970:
  7637  0065FC                     
  7638                           ;io.c: 24:         pin -=16;
  7639  0065FC  0EF0               	movlw	240
  7640  0065FE  2601               	addwf	digitalWrite@pin^0,f,c
  7641  006600  0EFF               	movlw	255
  7642  006602  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7643                           
  7644                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7645  006604  5003               	movf	digitalWrite@value^0,w,c
  7646  006606  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7647  006608  B4D8               	btfsc	status,2,c
  7648  00660A  EF09  F033         	goto	u1981
  7649  00660E  EF0B  F033         	goto	u1980
  7650  006612                     u1981:
  7651  006612  EF1B  F033         	goto	l2338
  7652  006616                     u1980:
  7653  006616  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7654  00661A  0E01               	movlw	1
  7655  00661C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7656  00661E  2A05               	incf	??_digitalWrite^0,f,c
  7657  006620  EF14  F033         	goto	u1994
  7658  006624                     u1995:
  7659  006624  90D8               	bcf	status,0,c
  7660  006626  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7661  006628                     u1994:
  7662  006628  2E05               	decfsz	??_digitalWrite^0,f,c
  7663  00662A  EF12  F033         	goto	u1995
  7664  00662E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7665  006630  1282               	iorwf	130,f,c	;volatile
  7666  006632  EFA2  F033         	goto	l42
  7667  006636                     l2338:
  7668  006636  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7669  00663A  0E01               	movlw	1
  7670  00663C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7671  00663E  2A05               	incf	??_digitalWrite^0,f,c
  7672  006640  EF24  F033         	goto	u2004
  7673  006644                     u2005:
  7674  006644  90D8               	bcf	status,0,c
  7675  006646  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7676  006648                     u2004:
  7677  006648  2E05               	decfsz	??_digitalWrite^0,f,c
  7678  00664A  EF22  F033         	goto	u2005
  7679  00664E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7680  006650  0AFF               	xorlw	255
  7681  006652  1682               	andwf	130,f,c	;volatile
  7682  006654  EFA2  F033         	goto	l42
  7683  006658                     l2340:
  7684  006658  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7685  00665A  EF3A  F033         	goto	u2010
  7686  00665E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7687  006660  E107               	bnz	u2011
  7688  006662  0E20               	movlw	32
  7689  006664  5C01               	subwf	digitalWrite@pin^0,w,c
  7690  006666  B0D8               	btfsc	status,0,c
  7691  006668  EF38  F033         	goto	u2011
  7692  00666C  EF3A  F033         	goto	u2010
  7693  006670                     u2011:
  7694  006670  EF68  F033         	goto	l2348
  7695  006674                     u2010:
  7696  006674                     
  7697                           ;io.c: 28:         pin -=24;
  7698  006674  0EE8               	movlw	232
  7699  006676  2601               	addwf	digitalWrite@pin^0,f,c
  7700  006678  0EFF               	movlw	255
  7701  00667A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7702                           
  7703                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7704  00667C  5003               	movf	digitalWrite@value^0,w,c
  7705  00667E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7706  006680  B4D8               	btfsc	status,2,c
  7707  006682  EF45  F033         	goto	u2021
  7708  006686  EF47  F033         	goto	u2020
  7709  00668A                     u2021:
  7710  00668A  EF57  F033         	goto	l2346
  7711  00668E                     u2020:
  7712  00668E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7713  006692  0E01               	movlw	1
  7714  006694  6E06               	movwf	(??_digitalWrite+1)^0,c
  7715  006696  2A05               	incf	??_digitalWrite^0,f,c
  7716  006698  EF50  F033         	goto	u2034
  7717  00669C                     u2035:
  7718  00669C  90D8               	bcf	status,0,c
  7719  00669E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7720  0066A0                     u2034:
  7721  0066A0  2E05               	decfsz	??_digitalWrite^0,f,c
  7722  0066A2  EF4E  F033         	goto	u2035
  7723  0066A6  5006               	movf	(??_digitalWrite+1)^0,w,c
  7724  0066A8  1283               	iorwf	131,f,c	;volatile
  7725  0066AA  EFA2  F033         	goto	l42
  7726  0066AE                     l2346:
  7727  0066AE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7728  0066B2  0E01               	movlw	1
  7729  0066B4  6E06               	movwf	(??_digitalWrite+1)^0,c
  7730  0066B6  2A05               	incf	??_digitalWrite^0,f,c
  7731  0066B8  EF60  F033         	goto	u2044
  7732  0066BC                     u2045:
  7733  0066BC  90D8               	bcf	status,0,c
  7734  0066BE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7735  0066C0                     u2044:
  7736  0066C0  2E05               	decfsz	??_digitalWrite^0,f,c
  7737  0066C2  EF5E  F033         	goto	u2045
  7738  0066C6  5006               	movf	(??_digitalWrite+1)^0,w,c
  7739  0066C8  0AFF               	xorlw	255
  7740  0066CA  1683               	andwf	131,f,c	;volatile
  7741  0066CC  EFA2  F033         	goto	l42
  7742  0066D0                     l2348:
  7743  0066D0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7744  0066D2  EF76  F033         	goto	u2050
  7745  0066D6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7746  0066D8  E107               	bnz	u2051
  7747  0066DA  0E28               	movlw	40
  7748  0066DC  5C01               	subwf	digitalWrite@pin^0,w,c
  7749  0066DE  B0D8               	btfsc	status,0,c
  7750  0066E0  EF74  F033         	goto	u2051
  7751  0066E4  EF76  F033         	goto	u2050
  7752  0066E8                     u2051:
  7753  0066E8  EFA2  F033         	goto	l42
  7754  0066EC                     u2050:
  7755  0066EC                     
  7756                           ;io.c: 32:         pin -=32;
  7757  0066EC  0EE0               	movlw	224
  7758  0066EE  2601               	addwf	digitalWrite@pin^0,f,c
  7759  0066F0  0EFF               	movlw	255
  7760  0066F2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7761                           
  7762                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7763  0066F4  5003               	movf	digitalWrite@value^0,w,c
  7764  0066F6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7765  0066F8  B4D8               	btfsc	status,2,c
  7766  0066FA  EF81  F033         	goto	u2061
  7767  0066FE  EF83  F033         	goto	u2060
  7768  006702                     u2061:
  7769  006702  EF93  F033         	goto	l2354
  7770  006706                     u2060:
  7771  006706  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7772  00670A  0E01               	movlw	1
  7773  00670C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7774  00670E  2A05               	incf	??_digitalWrite^0,f,c
  7775  006710  EF8C  F033         	goto	u2074
  7776  006714                     u2075:
  7777  006714  90D8               	bcf	status,0,c
  7778  006716  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7779  006718                     u2074:
  7780  006718  2E05               	decfsz	??_digitalWrite^0,f,c
  7781  00671A  EF8A  F033         	goto	u2075
  7782  00671E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7783  006720  1284               	iorwf	132,f,c	;volatile
  7784  006722  EFA2  F033         	goto	l42
  7785  006726                     l2354:
  7786  006726  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7787  00672A  0E01               	movlw	1
  7788  00672C  6E06               	movwf	(??_digitalWrite+1)^0,c
  7789  00672E  2A05               	incf	??_digitalWrite^0,f,c
  7790  006730  EF9C  F033         	goto	u2084
  7791  006734                     u2085:
  7792  006734  90D8               	bcf	status,0,c
  7793  006736  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7794  006738                     u2084:
  7795  006738  2E05               	decfsz	??_digitalWrite^0,f,c
  7796  00673A  EF9A  F033         	goto	u2085
  7797  00673E  5006               	movf	(??_digitalWrite+1)^0,w,c
  7798  006740  0AFF               	xorlw	255
  7799  006742  1684               	andwf	132,f,c	;volatile
  7800  006744                     l42:
  7801  006744  0012               	return		;funcret
  7802  006746                     __end_of_digitalWrite:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function _ssdDigit *****************
  7806 ;; Defined at:
  7807 ;;		line 34 in file "ssd.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  val             1    wreg     unsigned char 
  7810 ;;  pos             1   12[COMRAM] unsigned char 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  val             1   13[COMRAM] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      void 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7822 ;;      Params:         1       0       0       0       0       0       0
  7823 ;;      Locals:         1       0       0       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0
  7825 ;;      Totals:         2       0       0       0       0       0       0
  7826 ;;Total ram usage:        2 bytes
  7827 ;; Hardware stack levels used: 1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_Placar
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text33
  7836  005530                     __ptext33:
  7837                           	callstack 0
  7838  005530                     _ssdDigit:
  7839                           	callstack 29
  7840                           
  7841                           ;incstack = 0
  7842                           ;ssdDigit@val stored from wreg
  7843  005530  6E0E               	movwf	ssdDigit@val^0,c
  7844  005532                     
  7845                           ;ssd.c: 35:     if (pos == 0) {
  7846  005532  500D               	movf	ssdDigit@pos^0,w,c
  7847  005534  A4D8               	btfss	status,2,c
  7848  005536  EF9F  F02A         	goto	u2411
  7849  00553A  EFA1  F02A         	goto	u2410
  7850  00553E                     u2411:
  7851  00553E  EFA3  F02A         	goto	l2484
  7852  005542                     u2410:
  7853  005542                     
  7854                           ;ssd.c: 36:         v0 = val;
  7855  005542  C00E  F043         	movff	ssdDigit@val,_v0
  7856  005546                     l2484:
  7857                           
  7858                           ;ssd.c: 38:     if (pos == 1) {
  7859  005546  040D               	decf	ssdDigit@pos^0,w,c
  7860  005548  A4D8               	btfss	status,2,c
  7861  00554A  EFA9  F02A         	goto	u2421
  7862  00554E  EFAB  F02A         	goto	u2420
  7863  005552                     u2421:
  7864  005552  EFAD  F02A         	goto	l2488
  7865  005556                     u2420:
  7866  005556                     
  7867                           ;ssd.c: 39:         v1 = val;
  7868  005556  C00E  F042         	movff	ssdDigit@val,_v1
  7869  00555A                     l2488:
  7870                           
  7871                           ;ssd.c: 41:     if (pos == 2) {
  7872  00555A  0E02               	movlw	2
  7873  00555C  180D               	xorwf	ssdDigit@pos^0,w,c
  7874  00555E  A4D8               	btfss	status,2,c
  7875  005560  EFB4  F02A         	goto	u2431
  7876  005564  EFB6  F02A         	goto	u2430
  7877  005568                     u2431:
  7878  005568  EFB8  F02A         	goto	l2492
  7879  00556C                     u2430:
  7880  00556C                     
  7881                           ;ssd.c: 42:         v2 = val;
  7882  00556C  C00E  F041         	movff	ssdDigit@val,_v2
  7883  005570                     l2492:
  7884                           
  7885                           ;ssd.c: 44:     if (pos == 3) {
  7886  005570  0E03               	movlw	3
  7887  005572  180D               	xorwf	ssdDigit@pos^0,w,c
  7888  005574  A4D8               	btfss	status,2,c
  7889  005576  EFBF  F02A         	goto	u2441
  7890  00557A  EFC1  F02A         	goto	u2440
  7891  00557E                     u2441:
  7892  00557E  EFC3  F02A         	goto	l215
  7893  005582                     u2440:
  7894  005582                     
  7895                           ;ssd.c: 45:         v3 = val;
  7896  005582  C00E  F040         	movff	ssdDigit@val,_v3
  7897  005586                     l215:
  7898  005586  0012               	return		;funcret
  7899  005588                     __end_of_ssdDigit:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function ___lwmod *****************
  7903 ;; Defined at:
  7904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  dividend        2    7[COMRAM] unsigned int 
  7907 ;;  divisor         2    9[COMRAM] unsigned int 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  counter         1   11[COMRAM] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  2    7[COMRAM] unsigned int 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7919 ;;      Params:         4       0       0       0       0       0       0
  7920 ;;      Locals:         1       0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0
  7922 ;;      Totals:         5       0       0       0       0       0       0
  7923 ;;Total ram usage:        5 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_Placar
  7929 ;;		_main
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text34
  7934  0055E2                     __ptext34:
  7935                           	callstack 0
  7936  0055E2                     ___lwmod:
  7937                           	callstack 30
  7938  0055E2  500A               	movf	___lwmod@divisor^0,w,c
  7939  0055E4  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  7940  0055E6  B4D8               	btfsc	status,2,c
  7941  0055E8  EFF8  F02A         	goto	u2481
  7942  0055EC  EFFA  F02A         	goto	u2480
  7943  0055F0                     u2481:
  7944  0055F0  EF1E  F02B         	goto	l904
  7945  0055F4                     u2480:
  7946  0055F4  0E01               	movlw	1
  7947  0055F6  6E0C               	movwf	___lwmod@counter^0,c
  7948  0055F8  EF02  F02B         	goto	l2560
  7949  0055FC                     l2558:
  7950  0055FC  90D8               	bcf	status,0,c
  7951  0055FE  360A               	rlcf	___lwmod@divisor^0,f,c
  7952  005600  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  7953  005602  2A0C               	incf	___lwmod@counter^0,f,c
  7954  005604                     l2560:
  7955  005604  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  7956  005606  EF07  F02B         	goto	u2491
  7957  00560A  EF09  F02B         	goto	u2490
  7958  00560E                     u2491:
  7959  00560E  EFFE  F02A         	goto	l2558
  7960  005612                     u2490:
  7961  005612                     l2562:
  7962  005612  500A               	movf	___lwmod@divisor^0,w,c
  7963  005614  5C08               	subwf	___lwmod@dividend^0,w,c
  7964  005616  500B               	movf	(___lwmod@divisor+1)^0,w,c
  7965  005618  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  7966  00561A  A0D8               	btfss	status,0,c
  7967  00561C  EF12  F02B         	goto	u2501
  7968  005620  EF14  F02B         	goto	u2500
  7969  005624                     u2501:
  7970  005624  EF18  F02B         	goto	l2566
  7971  005628                     u2500:
  7972  005628  500A               	movf	___lwmod@divisor^0,w,c
  7973  00562A  5E08               	subwf	___lwmod@dividend^0,f,c
  7974  00562C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  7975  00562E  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  7976  005630                     l2566:
  7977  005630  90D8               	bcf	status,0,c
  7978  005632  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  7979  005634  320A               	rrcf	___lwmod@divisor^0,f,c
  7980  005636  2E0C               	decfsz	___lwmod@counter^0,f,c
  7981  005638  EF09  F02B         	goto	l2562
  7982  00563C                     l904:
  7983  00563C  C008  F008         	movff	___lwmod@dividend,?___lwmod
  7984  005640  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  7985  005644  0012               	return		;funcret
  7986  005646                     __end_of___lwmod:
  7987                           	callstack 0
  7988                           
  7989 ;; *************** function ___lwdiv *****************
  7990 ;; Defined at:
  7991 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  dividend        2    0[COMRAM] unsigned int 
  7994 ;;  divisor         2    2[COMRAM] unsigned int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  quotient        2    4[COMRAM] unsigned int 
  7997 ;;  counter         1    6[COMRAM] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2    0[COMRAM] unsigned int 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8007 ;;      Params:         4       0       0       0       0       0       0
  8008 ;;      Locals:         3       0       0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0
  8010 ;;      Totals:         7       0       0       0       0       0       0
  8011 ;;Total ram usage:        7 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_Placar
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text35
  8021  005646                     __ptext35:
  8022                           	callstack 0
  8023  005646                     ___lwdiv:
  8024                           	callstack 29
  8025  005646  0E00               	movlw	0
  8026  005648  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  8027  00564A  0E00               	movlw	0
  8028  00564C  6E05               	movwf	___lwdiv@quotient^0,c
  8029  00564E  5003               	movf	___lwdiv@divisor^0,w,c
  8030  005650  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8031  005652  B4D8               	btfsc	status,2,c
  8032  005654  EF2E  F02B         	goto	u2451
  8033  005658  EF30  F02B         	goto	u2450
  8034  00565C                     u2451:
  8035  00565C  EF58  F02B         	goto	l894
  8036  005660                     u2450:
  8037  005660  0E01               	movlw	1
  8038  005662  6E07               	movwf	___lwdiv@counter^0,c
  8039  005664  EF38  F02B         	goto	l2540
  8040  005668                     l2538:
  8041  005668  90D8               	bcf	status,0,c
  8042  00566A  3603               	rlcf	___lwdiv@divisor^0,f,c
  8043  00566C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8044  00566E  2A07               	incf	___lwdiv@counter^0,f,c
  8045  005670                     l2540:
  8046  005670  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  8047  005672  EF3D  F02B         	goto	u2461
  8048  005676  EF3F  F02B         	goto	u2460
  8049  00567A                     u2461:
  8050  00567A  EF34  F02B         	goto	l2538
  8051  00567E                     u2460:
  8052  00567E                     l2542:
  8053  00567E  90D8               	bcf	status,0,c
  8054  005680  3605               	rlcf	___lwdiv@quotient^0,f,c
  8055  005682  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8056  005684  5003               	movf	___lwdiv@divisor^0,w,c
  8057  005686  5C01               	subwf	___lwdiv@dividend^0,w,c
  8058  005688  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8059  00568A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8060  00568C  A0D8               	btfss	status,0,c
  8061  00568E  EF4B  F02B         	goto	u2471
  8062  005692  EF4D  F02B         	goto	u2470
  8063  005696                     u2471:
  8064  005696  EF52  F02B         	goto	l2550
  8065  00569A                     u2470:
  8066  00569A  5003               	movf	___lwdiv@divisor^0,w,c
  8067  00569C  5E01               	subwf	___lwdiv@dividend^0,f,c
  8068  00569E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8069  0056A0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8070  0056A2  8005               	bsf	___lwdiv@quotient^0,0,c
  8071  0056A4                     l2550:
  8072  0056A4  90D8               	bcf	status,0,c
  8073  0056A6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8074  0056A8  3203               	rrcf	___lwdiv@divisor^0,f,c
  8075  0056AA  2E07               	decfsz	___lwdiv@counter^0,f,c
  8076  0056AC  EF3F  F02B         	goto	l2542
  8077  0056B0                     l894:
  8078  0056B0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8079  0056B4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8080  0056B8  0012               	return		;funcret
  8081  0056BA                     __end_of___lwdiv:
  8082                           	callstack 0
  8083                           
  8084                           	psect	rparam
  8085  0000                     
  8086                           	psect	idloc
  8087                           
  8088                           ;Config register IDLOC0 @ 0x200000
  8089                           ;	unspecified, using default values
  8090  200000                     	org	2097152
  8091  200000  FF                 	db	255
  8092                           
  8093                           ;Config register IDLOC1 @ 0x200001
  8094                           ;	unspecified, using default values
  8095  200001                     	org	2097153
  8096  200001  FF                 	db	255
  8097                           
  8098                           ;Config register IDLOC2 @ 0x200002
  8099                           ;	unspecified, using default values
  8100  200002                     	org	2097154
  8101  200002  FF                 	db	255
  8102                           
  8103                           ;Config register IDLOC3 @ 0x200003
  8104                           ;	unspecified, using default values
  8105  200003                     	org	2097155
  8106  200003  FF                 	db	255
  8107                           
  8108                           ;Config register IDLOC4 @ 0x200004
  8109                           ;	unspecified, using default values
  8110  200004                     	org	2097156
  8111  200004  FF                 	db	255
  8112                           
  8113                           ;Config register IDLOC5 @ 0x200005
  8114                           ;	unspecified, using default values
  8115  200005                     	org	2097157
  8116  200005  FF                 	db	255
  8117                           
  8118                           ;Config register IDLOC6 @ 0x200006
  8119                           ;	unspecified, using default values
  8120  200006                     	org	2097158
  8121  200006  FF                 	db	255
  8122                           
  8123                           ;Config register IDLOC7 @ 0x200007
  8124                           ;	unspecified, using default values
  8125  200007                     	org	2097159
  8126  200007  FF                 	db	255
  8127                           
  8128                           	psect	config
  8129                           
  8130                           ; Padding undefined space
  8131  300000                     	org	3145728
  8132  300000  FF                 	db	255
  8133                           
  8134                           ;Config register CONFIG1H @ 0x300001
  8135                           ;	Oscillator Selection bits
  8136                           ;	OSC = HS, HS oscillator
  8137                           ;	Fail-Safe Clock Monitor Enable bit
  8138                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8139                           ;	Internal/External Oscillator Switchover bit
  8140                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8141  300001                     	org	3145729
  8142  300001  02                 	db	2
  8143                           
  8144                           ;Config register CONFIG2L @ 0x300002
  8145                           ;	Power-up Timer Enable bit
  8146                           ;	PWRT = OFF, PWRT disabled
  8147                           ;	Brown-out Reset Enable bits
  8148                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8149                           ;	Brown Out Reset Voltage bits
  8150                           ;	BORV = 0x2E, user specified literal
  8151  300002                     	org	3145730
  8152  300002  71                 	db	369
  8153                           
  8154                           ;Config register CONFIG2H @ 0x300003
  8155                           ;	Watchdog Timer Enable bit
  8156                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8157                           ;	Watchdog Timer Postscale Select bits
  8158                           ;	WDTPS = 1, 1:1
  8159  300003                     	org	3145731
  8160  300003  00                 	db	0
  8161                           
  8162                           ; Padding undefined space
  8163  300004                     	org	3145732
  8164  300004  FF                 	db	255
  8165                           
  8166                           ;Config register CONFIG3H @ 0x300005
  8167                           ;	CCP2 MUX bit
  8168                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8169                           ;	PORTB A/D Enable bit
  8170                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8171                           ;	Low-Power Timer1 Oscillator Enable bit
  8172                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8173                           ;	MCLR Pin Enable bit
  8174                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8175  300005                     	org	3145733
  8176  300005  83                 	db	131
  8177                           
  8178                           ;Config register CONFIG4L @ 0x300006
  8179                           ;	Stack Full/Underflow Reset Enable bit
  8180                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8181                           ;	Single-Supply ICSP Enable bit
  8182                           ;	LVP = OFF, Single-Supply ICSP disabled
  8183                           ;	Extended Instruction Set Enable bit
  8184                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8185                           ;	Background Debugger Enable bit
  8186                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8187  300006                     	org	3145734
  8188  300006  80                 	db	128
  8189                           
  8190                           ; Padding undefined space
  8191  300007                     	org	3145735
  8192  300007  FF                 	db	255
  8193                           
  8194                           ;Config register CONFIG5L @ 0x300008
  8195                           ;	Code Protection bit
  8196                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8197                           ;	Code Protection bit
  8198                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8199                           ;	Code Protection bit
  8200                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8201                           ;	Code Protection bit
  8202                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8203  300008                     	org	3145736
  8204  300008  0F                 	db	15
  8205                           
  8206                           ;Config register CONFIG5H @ 0x300009
  8207                           ;	Boot Block Code Protection bit
  8208                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8209                           ;	Data EEPROM Code Protection bit
  8210                           ;	CPD = OFF, Data EEPROM not code-protected
  8211  300009                     	org	3145737
  8212  300009  C0                 	db	192
  8213                           
  8214                           ;Config register CONFIG6L @ 0x30000A
  8215                           ;	Write Protection bit
  8216                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8217                           ;	Write Protection bit
  8218                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8219                           ;	Write Protection bit
  8220                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8221                           ;	Write Protection bit
  8222                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8223  30000A                     	org	3145738
  8224  30000A  0F                 	db	15
  8225                           
  8226                           ;Config register CONFIG6H @ 0x30000B
  8227                           ;	Configuration Register Write Protection bit
  8228                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8229                           ;	Boot Block Write Protection bit
  8230                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8231                           ;	Data EEPROM Write Protection bit
  8232                           ;	WRTD = OFF, Data EEPROM not write-protected
  8233  30000B                     	org	3145739
  8234  30000B  E0                 	db	224
  8235                           
  8236                           ;Config register CONFIG7L @ 0x30000C
  8237                           ;	Table Read Protection bit
  8238                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8239                           ;	Table Read Protection bit
  8240                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8241                           ;	Table Read Protection bit
  8242                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8243                           ;	Table Read Protection bit
  8244                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8245  30000C                     	org	3145740
  8246  30000C  0F                 	db	15
  8247                           
  8248                           ;Config register CONFIG7H @ 0x30000D
  8249                           ;	Boot Block Table Read Protection bit
  8250                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8251  30000D                     	org	3145741
  8252  30000D  40                 	db	64
  8253                           tosu	equ	0xFFF
  8254                           tosh	equ	0xFFE
  8255                           tosl	equ	0xFFD
  8256                           stkptr	equ	0xFFC
  8257                           pclatu	equ	0xFFB
  8258                           pclath	equ	0xFFA
  8259                           pcl	equ	0xFF9
  8260                           tblptru	equ	0xFF8
  8261                           tblptrh	equ	0xFF7
  8262                           tblptrl	equ	0xFF6
  8263                           tablat	equ	0xFF5
  8264                           prodh	equ	0xFF4
  8265                           prodl	equ	0xFF3
  8266                           indf0	equ	0xFEF
  8267                           postinc0	equ	0xFEE
  8268                           postdec0	equ	0xFED
  8269                           preinc0	equ	0xFEC
  8270                           plusw0	equ	0xFEB
  8271                           fsr0h	equ	0xFEA
  8272                           fsr0l	equ	0xFE9
  8273                           wreg	equ	0xFE8
  8274                           indf1	equ	0xFE7
  8275                           postinc1	equ	0xFE6
  8276                           postdec1	equ	0xFE5
  8277                           preinc1	equ	0xFE4
  8278                           plusw1	equ	0xFE3
  8279                           fsr1h	equ	0xFE2
  8280                           fsr1l	equ	0xFE1
  8281                           bsr	equ	0xFE0
  8282                           indf2	equ	0xFDF
  8283                           postinc2	equ	0xFDE
  8284                           postdec2	equ	0xFDD
  8285                           preinc2	equ	0xFDC
  8286                           plusw2	equ	0xFDB
  8287                           fsr2h	equ	0xFDA
  8288                           fsr2l	equ	0xFD9
  8289                           status	equ	0xFD8

Data Sizes:
    Strings     553
    Constant    26
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_50(CODE[11]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[14]), 
		 -> STR_46(CODE[14]), STR_45(CODE[11]), STR_44(CODE[9]), STR_43(CODE[13]), 
		 -> STR_42(CODE[13]), STR_41(CODE[14]), STR_40(CODE[11]), STR_39(CODE[11]), 
		 -> STR_38(CODE[11]), STR_37(CODE[11]), STR_36(CODE[11]), STR_35(CODE[11]), 
		 -> STR_34(CODE[11]), STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[11]), 
		 -> STR_30(CODE[8]), STR_29(CODE[11]), STR_28(CODE[5]), STR_27(CODE[12]), 
		 -> STR_26(CODE[14]), STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[12]), 
		 -> STR_22(CODE[14]), STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[13]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[12]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[13]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[11]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[11]), 
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_NumJogos
    _ssdInit->_pinMode
    _kpInit->_pinMode
    _Versus->_lcdString
    _Start->_lcdString
    _NumJogos->___fladd
    _kpDebounce->_soWrite
    _Jogador2->_lcdString
    _Jogador1->_lcdString
    _FimDeJogo->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _soInit->_pinMode
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _Placar->_ssdDigit
    _ssdUpdate->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _ssdDigit->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0  584418
                                             32 COMRAM    25    25      0
                          _FimDeJogo
                           _Jogador1
                           _Jogador2
                           _NumJogos
                             _Placar
                              _Start
                             _Versus
                            ___fladd
                             ___flge
                            ___lwmod
                         _kpDebounce
                             _kpInit
                             _kpRead
                          _kpReadKey
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                          _lcdString
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _Versus                                              10     9      1  101132
                                             20 COMRAM     6     5      1
                             _Jogada
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _Jogada                                               3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Start                                                4     4      0   94516
                                             20 COMRAM     4     4      0
                            ___fladd
                             ___flge
                         _lcdCommand
                            _lcdInit
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _NumJogos                                            16    14      2   23060
                                             16 COMRAM    16    14      2
                            ___fladd
                             ___flge
                         _kpDebounce
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (1) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Jogador2                                             4     4      0   52336
                                             20 COMRAM     4     4      0
                            ___fladd
                             ___flge
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _Jogador1                                             4     4      0   52336
                                             20 COMRAM     4     4      0
                            ___fladd
                             ___flge
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _FimDeJogo                                            8     4      4  110566
                                             20 COMRAM     8     4      4
                             _Placar
                            ___fladd
                             ___flge
                         _lcdCommand
                            _lcdInit
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   22325
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   41500
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2112
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2112
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    6262
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    5276
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _Placar                                               4     0      4   16490
                                             14 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1071
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FimDeJogo
     _Placar
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ssdDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
       _ssdUpdate
         _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     ___fladd
     ___flge
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _lcdInit
       _delayMicro
       _delayMili
       _lcdCommand
       _pinMode
       _pushNibble
         _digitalWrite
         _pulseEnablePin
         _soWrite
       _soInit
         _pinMode
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
   _Jogador1
     ___fladd
     ___flge
     _lcdCommand
     _lcdString
   _Jogador2
     ___fladd
     ___flge
     _lcdCommand
     _lcdString
   _NumJogos
     ___fladd
     ___flge
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _kpReadKey
   _Placar
   _Start
     ___fladd
     ___flge
     _lcdCommand
     _lcdInit
     _lcdString
   _Versus
     _Jogada
     _lcdChar
     _lcdCommand
     _lcdInit
     _lcdString
   ___fladd
   ___flge
   ___lwmod
   _kpDebounce
   _kpInit
     _pinMode
     _soInit
   _kpRead
   _kpReadKey
   _lcdChar
   _lcdCommand
   _lcdInit
   _lcdString
   _ssdInit
     _pinMode
     _soInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      45       1       54.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      15        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 21:56:48 2021

         _pulseEnablePin 53F4             lcdString@msg 000F                       l42 6744  
                     l51 5FB6                       l46 5FBA                       l47 5FB6  
                     l76 6992                       l93 5286                       l99 5730  
                     _v0 0043                       _v1 0042                       _v2 0041  
                     _v3 0040                      l113 5E38                      l115 5E50  
                    l141 52FE                      l118 53B4                      l215 5586  
                    l135 5382                      l144 55E0                      l304 5B06  
                    l225 6126                      l129 527C                      l161 54D8  
                    l138 5434                      l170 591A                      l147 52BA  
                    l155 52D8                      l323 64F6                      l180 5352  
                    l228 552E                      l309 57C0                      l183 5328  
                    l177 53F2                      l361 5D1A                      l354 5866  
                    l290 62E6                      l188 5482                      l279 7DB8  
                    l367 6F86                      l394 746C                      l299 5A10  
                    l901 56B8                      l911 5644                      l904 563C  
                    l673 5C0A                      l931 6B82                      l940 6E52  
                    l932 6B70                      l668 5BC4                      l933 6B36  
                    l948 6C9C                      l957 6D6C                      l894 56B0  
                    l958 6D5A                      u640 56FA                      u641 56F6  
                    u650 572E                      u634 56DA                      u651 572A  
                    u635 56D4                      wreg 000FE8                     l3000 7D30  
                   l3010 6140                     l3002 7D96                     l1340 56FA  
                   l1332 56BA                     l3004 7D9A                     l1412 573E  
                   l1404 5734                     l3102 5A7C                     l3030 61E8  
                   l3014 6176                     l3006 7DA6                     l1430 5750  
                   l1406 5738                     l3110 62EA                     l2320 6526  
                   l2400 682E                     l3104 5AE2                     l1344 570E  
                   l3032 61F8                     l3024 61A6                     l3016 617A  
                   l3008 6128                     l1424 574A                     l3120 633A  
                   l3112 6304                     l2330 65BE                     l2322 6546  
                   l2410 68C2                     l2402 684A                     l3106 5AE8  
                   l1346 5712                     l1338 56C2                     l3050 6294  
                   l3034 61FC                     l3026 61DE                     l3018 619E  
                   l1418 5744                     l3122 6340                     l3130 6352  
                   l3114 6310                     l2340 6658                     l2332 65E0  
                   l2324 6568                     l2316 64F8                     l2500 6034  
                   l2420 694C                     l2412 68D4                     l2404 685C  
                   l3108 5AF4                     l1348 572E                     l3044 6288  
                   l3028 61E4                     l3036 6212                     l3204 6470  
                   l3132 635C                     l3124 634C                     l3116 6322  
                   l3300 6F92                     l2350 66EC                     l2342 6674  
                   l2334 65FC                     l2326 6584                     l2318 6514  
                   l2510 6084                     l2502 6048                     l2430 558A  
                   l2422 6970                     l2414 68F8                     l2406 6880  
                   l3230 5C0C                     l3070 591C                     l3038 627C  
                   l3206 6482                     l3150 63A4                     l3134 636E  
                   l3118 6328                     l3310 6FE4                     l3302 6F9A  
                   l2352 6706                     l2344 668E                     l2336 6616  
                   l2328 659E                     l2360 5436                     l2520 60E4  
                   l2512 609C                     l2504 6050                     l2424 5354  
                   l2416 691E                     l2408 68A6                     l2600 5484  
                   l3240 5C4E                     l3232 5C16                     l3072 5922  
                   l2440 5E96                     l2432 5E52                     l3056 62A0  
                   l3064 62AC                     l3216 64A4                     l3208 6494  
                   l3152 63B6                     l3144 6392                     l3136 6380  
                   l3224 64B4                     l3400 7356                     l3320 7014  
                   l3312 6FE8                     l3304 6F9E                     l2354 6726  
                   l2346 66AE                     l2338 6636                     l2370 5466  
                   l2362 544A                     l2514 60B0                     l2506 6068  
                   l2426 5360                     l2418 693A                     l2610 58C8  
                   l2602 5490                     l3250 5CB4                     l3242 5C5A  
                   l3234 5C22                     l3082 5986                     l3074 592E  
                   l3090 5A12                     l2450 5EFA                     l2442 5EB2  
                   l2434 5E6E                     l3170 63FA                     l3162 63D8  
                   l3154 63C8                     l3146 639E                     l3138 638C  
                   l3410 7392                     l3402 735A                     l3330 7072  
                   l3322 704C                     l3314 700C                     l3306 6FAE  
                   l2540 5670                     l2532 5646                     l2348 66D0  
                   l2356 532A                     l2372 546C                     l2516 60B8  
                   l2508 607C                     l2700 6AC8                     l2428 5364  
                   l2380 5408                     l2620 590E                     l2612 58D4  
                   l2604 54AC                     l3252 5CE8                     l3244 5C6A  
                   l3236 5C28                     l3084 59EC                     l3076 5940  
                   l3092 5A18                     l1468 5756                     l3180 641C  
                   l3172 640C                     l3420 73EA                     l3412 7398  
                   l3404 735E                     l3340 70FE                     l3324 7052  
                   l3332 7076                     l2550 56A4                     l2542 567E  
                   l2534 564E                     l2358 5300                     l2374 546E  
                   l2518 60D0                     l2526 60EC                     l2710 6B02  
                   l2702 6ACC                     l2630 69A0                     l2382 5414  
                   l2390 6794                     l2470 53B6                     l2622 5914  
                   l2614 58EE                     l2606 54B0                     l3238 5C3E  
                   l3086 59F2                     l3078 5950                     l3094 5A24  
                   l3190 6450                     l3430 7478                     l3422 73FE  
                   l3414 73A4                     l3406 736A                     l3342 70FE  
                   l3334 707A                     l3326 7056                     l3270 6E7C  
                   l2552 56AA                     l2544 5684                     l2536 5660  
                   l2560 5604                     l2480 5532                     l2376 547E  
                   l2368 544E                     l2624 57C2                     l2800 6D88  
                   l2720 6B54                     l2712 6B1E                     l2704 6AD0  
                   l2640 69E0                     l2632 69AE                     l2472 52DC  
                   l2392 67B6                     l2384 6746                     l2616 58FC  
                   l2608 5868                     l3248 5CA0                     l3088 59FE  
                   l3096 5A36                     l2464 5F6E                     l2456 5F26  
                   l2448 5EDE                     l3168 63E8                     l3432 748E  
                   l3424 7432                     l3416 73B4                     l3408 7386  
                   l3352 7150                     l3344 7106                     l3328 7062  
                   l3336 7090                     l3440 74B2                     l3280 6E90  
                   l3272 6E80                     l2546 569A                     l2538 5668  
                   l2562 5612                     l2554 55E2                     l2490 556C  
                   l2482 5542                     l2626 5862                     l2810 6DF2  
                   l2802 6D96                     l2730 6BA0                     l2722 6B62  
                   l2714 6B2E                     l2706 6AD4                     l2650 6A12  
                   l2642 69E2                     l2634 69B0                     l2378 53F4  
                   l2474 52A0                     l2394 67D2                     l2386 6762  
                   l2618 5908                     l3098 5A46                     l2466 5F8A  
                   l2458 5F42                     l2570 527E                     l3186 642C  
                   l3434 74A6                     l3426 7464                     l3370 71CE  
                   l3362 7180                     l3354 7154                     l3346 710A  
                   l3338 70FA                     l3290 6EEA                     l3282 6EA0  
                   l3274 6E84                     l2548 56A2                     l2564 5628  
                   l2556 55F4                     l2492 5570                     l2484 5546  
                   l2820 6E2C                     l2812 6E12                     l2804 6DD0  
                   l2740 6BE0                     l2724 6B64                     l2716 6B44  
                   l2708 6AD8                     l2660 6A3A                     l2652 6A14  
                   l2636 69C0                     l2644 69EA                     l2628 6994  
                   l2396 67E4                     l2388 6774                     l2476 52BE  
                   l2580 5D98                     l2572 5D1C                     l2900 7764  
                   l3188 643E                     l3436 74AE                     l3428 7470  
                   l3380 7266                     l3372 71DE                     l3364 71B8  
                   l3356 7178                     l3348 711A                     l3284 6EAC  
                   l3276 6E88                     l3268 6E54                     l2566 5630  
                   l2558 55FC                     l2494 5582                     l2486 5556  
                   l2822 6E32                     l2814 6E16                     l2806 6DD2  
                   l2750 6C0A                     l2742 6BEC                     l2734 6BB4  
                   l2726 6B6E                     l2718 6B50                     l2670 6A74  
                   l2662 6A4A                     l2654 6A1A                     l2646 69FA  
                   l2638 69D0                     l2830 5B08                     l2398 6808  
                   l2478 52CC                     l2582 5DBE                     l2590 5E0E  
                   l2574 5D2C                     l2910 77C8                     l2902 7770  
                   l3470 576A                     l3198 6460                     l3390 72A2  
                   l3382 7272                     l3366 71BE                     l3374 71E2  
                   l3294 6F20                     l3286 6EBE                     l3278 6E8C  
                   l2568 5636                     l2488 555A                     l2496 5FBC  
                   l2824 6E40                     l2816 6E24                     l2808 6DE2  
                   l2760 6C7C                     l2744 6BF0                     l2736 6BC4  
                   l2728 6B90                     l2752 6C10                     l2680 6AA0  
                   l2672 6A86                     l2664 6A5A                     l2656 6A28  
                   l2648 6A00                     l2840 5B92                     l2832 5B36  
                   l2592 5E26                     l2584 5DDC                     l3472 62C0  
                   l2912 782E                     l2904 7782                     l3392 72B2  
                   l3384 7284                     l3376 71E6                     l3368 71C2  
                   l3296 6F8E                     l3288 6EDA                     l3474 6100  
                   l2498 601C                     l2826 6E42                     l2818 6E2A  
                   l2770 6CD6                     l2754 6C36                     l2762 6C8C  
                   l2746 6BFE                     l2738 6BD2                     l2690 6AB4  
                   l2682 6AA4                     l2674 6A94                     l2666 6A5C  
                   l2658 6A2A                     l2842 5BA4                     l2834 5B46  
                   l2594 5E2C                     l2586 5E06                     l2578 5D4C  
                   l2930 7910                     l2922 7886                     l2914 7834  
                   l2906 7792                     l3466 74C6                     l3386 728C  
                   l3378 71FC                     l3298 6F92                     l2780 6D06  
                   l2772 6CE0                     l2764 6CB2                     l2756 6C6A  
                   l2748 6C00                     l2692 6AB8                     l2684 6AA8  
                   l2676 6A98                     l2668 6A64                     l2844 5BB2  
                   l2836 5B74                     l2596 5E30                     l2940 79C2  
                   l2932 7920                     l2924 78EC                     l2916 7840  
                   l2860 7506                     l3468 64C8                     l2852 5384  
                   l3396 72E8                     l3388 729E                     l2790 6D2E  
                   l2782 6D0A                     l2774 6CEE                     l2766 6CC2  
                   l2758 6C6C                     l2694 6ABC                     l2686 6AAC  
                   l2678 6A9C                     l2846 5C02                     l2838 5B84  
                   l2598 5E48                     l2950 7A7A                     l2942 79CE  
                   l2926 78F2                     l2918 7850                     l2870 756A  
                   l2862 7512                     l2854 53B0                     l3398 734E  
                   l2792 6D3C                     l2784 6D1A                     l2776 6CF0  
                   l2696 6AC0                     l2688 6AB0                     l2848 5C08  
                   l2952 7A80                     l2944 79DE                     l2936 7956  
                   l2928 78FE                     l2880 7604                     l2872 75D0  
                   l2864 7524                     l2856 54DA                     l2794 6D52  
                   l2778 6CFE                     l2786 6D1C                     l2698 6AC4  
                   l2970 7B6C                     l2962 7AE4                     l2954 7A8C  
                   l2938 79BC                     l2890 76B2                     l2874 75D6  
                   l2866 7534                     l2858 7500                     l2788 6D2A  
                   l2980 7C1A                     l2964 7B4A                     l2956 7A9E  
                   l2948 7A14                     l2892 76C2                     l2884 763A  
                   l2876 75E2                     l2798 6D7C                     l2990 7CD8  
                   l2982 7C2C                     l2974 7BA2                     l2966 7B50  
                   l2958 7AAE                     l2886 76A0                     l2878 75F4  
                   l2992 7CDE                     l2984 7C3C                     l2976 7C08  
                   l2968 7B5C                     l2896 76F8                     l2888 76A6  
                   l2994 7CEA                     l2978 7C0E                     l2898 775E  
                   l2996 7CFA                     l2988 7C72                     STR_1 7FB9  
                   STR_2 7F81                     STR_3 7F8D                     STR_4 7E19  
                   STR_5 7EB2                     STR_6 7F98                     STR_7 7E3B  
                   STR_8 7E7F                     STR_9 7F50                     u2010 6674  
                   u2011 6670                     u2020 668E                     u2004 6648  
                   u2100 6762                     u2021 668A                     u2005 6644  
                   u2101 675E                     u2110 6774                     u2111 6770  
                   u3000 5B74                     u3001 5B70                     u2050 66EC  
                   u2034 66A0                     u3010 5B92                     u2051 66E8  
                   u2035 669C                     u3011 5B8E                     u2060 6706  
                   u2044 66C0                     u3020 5BB2                     u2300 5382  
                   u2220 68C2                     u2204 6872                     u2140 67D2  
                   u2124 6786                     u3100 77C4                     u2061 6702  
                   u2045 66BC                     u3021 5BAE                     u2301 537E  
                   u2221 68BE                     u2205 686E                     u2141 67CE  
                   u2125 6782                     u3101 77C0                     u3030 5C02  
                   u2230 68D4                     u2214 6896                     u2150 67E4  
                   u2134 67A6                     u2310 5E6E                     u3110 782E  
                   u3031 5BFE                     u2231 68D0                     u2215 6892  
                   u2151 67E0                     u2135 67A2                     u2311 5E6A  
                   u3111 782A                     u3200 7B9E                     u3120 7882  
                   u3040 7566                     u3201 7B9A                     u3121 787E  
                   u3041 7562                     u2410 5542                     u2074 6718  
                   u2090 547E                     u2330 5EB2                     u3210 7C08  
                   u3130 78EC                     u3050 75D0                     u2411 553E  
                   u2075 6714                     u2091 547A                     u2331 5EAE  
                   u3211 7C04                     u3131 78E8                     u3051 75CC  
                   u2500 5628                     u2420 5556                     u2084 6738  
                   u2260 693A                     u2244 68EA                     u2180 684A  
                   u2164 67FA                     u2404 5FA0                     u2324 5E80  
                   u3300 6212                     u3220 7C6E                     u3140 7952  
                   u3060 7636                     u2501 5624                     u2421 5552  
                   u2085 6734                     u2261 6936                     u2245 68E6  
                   u2181 6846                     u2165 67F6                     u2405 5F9C  
                   u2325 5E7C                     u3301 620E                     u3221 7C6A  
                   u3141 794E                     u3061 7632                     u2430 556C  
                   u2270 694C                     u2254 690E                     u2190 685C  
                   u2174 681E                     u2350 5EFA                     u2510 5D48  
                   u3310 6278                     u3230 7CD8                     u3150 79BC  
                   u3070 76A0                     u2431 5568                     u2271 6948  
                   u2255 690A                     u2191 6858                     u2175 681A  
                   u2351 5EF6                     u2511 5D44                     u3311 6274  
                   u3231 7CD4                     u3151 79B8                     u3071 769C  
                   u2440 5582                     u2600 69AE                     u3320 5982  
                   u2344 5EC8                     u3240 7D2C                     u3160 7A10  
                   u3080 76F4                     u3400 63C8                     u2441 557E  
                   u2601 69AA                     u3321 597E                     u2345 5EC4  
                   u3241 7D28                     u3161 7A0C                     u3081 76F0  
                   u3401 63C4                     u2450 5660                     u2610 69C0  
                   u3330 59EC                     u2370 5F42                     u2530 5D98  
                   u3250 7D96                     u3170 7A7A                     u3090 775E  
                   u3410 63FA                     u2451 565C                     u2611 69BC  
                   u3331 59E8                     u2371 5F3E                     u2531 5D94  
                   u3251 7D92                     u3171 7A76                     u3091 775A  
                   u3411 63F6                     u2460 567E                     u1900 6526  
                   u2700 6B1A                     u2620 69D0                     u2284 6962  
                   u3340 5A78                     u2364 5F10                     u2524 5D68  
                   u3260 6172                     u3180 7AE0                     u3420 640C  
                   u2461 567A                     u1901 6522                     u2701 6B14  
                   u2621 69CC                     u2285 695E                     u3341 5A74  
                   u2365 5F0C                     u2525 5D62                     u3261 616E  
                   u3181 7ADC                     u3421 6408                     u2470 569A  
                   u2710 6B1C                     u2630 6A12                     u2294 6986  
                   u3350 5AE2                     u2390 5F8A                     u2550 5DDC  
                   u3270 619E                     u3190 7B4A                     u3430 643E  
                   u2471 5696                     u2631 6A0E                     u2295 6982  
                   u3351 5ADE                     u2391 5F86                     u2551 5DD8  
                   u3271 619A                     u3191 7B46                     u3431 643A  
                   u2480 55F4                     u2800 6C36                     u2720 6B44  
                   u2640 6A28                     u2384 5F58                     u2544 5DB0  
                   u3440 6450                     u3360 633A                     u3600 70F6  
                   u2481 55F0                     u2801 6C32                     u2721 6B40  
                   u2641 6A24                     u2385 5F54                     u2545 5DAA  
                   u3441 644C                     u3361 6336                     u3601 70F2  
                   u2490 5612                     u1930 6584                     u1914 6538  
                   u2810 6C7C                     u2730 6B62                     u2650 6A3A  
                   u2570 5E26                     u3290 61DE                     u3450 6482  
                   u3370 636E                     u3610 714C                     u3530 6F1C  
                   u2491 560E                     u1931 6580                     u1915 6534  
                   u2811 6C78                     u2731 6B5E                     u2651 6A36  
                   u2571 5E22                     u3291 61DA                     u3451 647E  
                   u3371 636A                     u3611 7148                     u3531 6F18  
                   u1940 659E                     u1924 6558                     u2900 6D68  
                   u2820 6CB2                     u2740 6B82                     u2660 6A4A  
                   u2580 5E48                     u2564 5DF8                     u3284 61BE  
                   u3460 6494                     u3380 6380                     u3700 734E  
                   u3620 7178                     u3540 6F86                     u1941 659A  
                   u1925 6554                     u2901 6D64                     u2821 6CAE  
                   u2741 6B7E                     u2661 6A46                     u2581 5E44  
                   u2565 5DF2                     u3285 61B8                     u3461 6490  
                   u3381 637C                     u3701 734A                     u3621 7174  
                   u3541 6F82                     u2910 6D7C                     u2830 6CC2  
                   u2750 6B90                     u2670 6A86                     u2590 54D8  
                   u3470 5C3E                     u3390 63B6                     u3710 73E6  
                   u3550 6FE0                     u2911 6D78                     u2831 6CBE  
                   u2751 6B8C                     u2671 6A82                     u2591 54D4  
                   u3471 5C3A                     u3391 63B2                     u3711 73E2  
                   u3551 6FDC                     u2920 6D96                     u2840 6CEE  
                   u2760 6BA0                     u2680 6A94                     u3480 5C9C  
                   u3720 7464                     u3640 71B8                     u3560 700C  
                   u2921 6D92                     u2841 6CEA                     u2761 6B9C  
                   u2681 6A90                     u3481 5C98                     u3721 7460  
                   u3641 71B4                     u3561 7008                     u1970 65FC  
                   u1954 65B0                     u1890 6514                     u2930 6DD0  
                   u2850 6CFE                     u2770 6BD2                     u2690 6B02  
                   u3490 5D1A                     u3730 748E                     u3650 71FC  
                   u3634 7198                     u1971 65F8                     u1955 65AC  
                   u1891 6510                     u2931 6DCC                     u2851 6CFA  
                   u2771 6BCE                     u2691 6AFE                     u3491 5D16  
                   u3731 748A                     u3651 71F8                     u3635 7192  
                   u1980 6616                     u1964 65D0                     u2940 6DE2  
                   u2860 6D1A                     u2780 6BE0                     u3660 7262  
                   u3580 704C                     u1981 6612                     u1965 65CC  
                   u2941 6DDE                     u2861 6D16                     u2781 6BDC  
                   u3661 725E                     u3581 7048                     u2950 6DF2  
                   u2870 6D2A                     u2790 6BFE                     u3670 7284  
                   u3590 7090                     u3574 702C                     u2951 6DEE  
                   u2871 6D26                     u2791 6BFA                     u3671 7280  
                   u3591 708C                     u3575 7026                     u2960 6E12  
                   u2880 6D3C                     u3680 729E                     u2961 6E0E  
                   u2881 6D38                     u3681 729A                     u1994 6628  
                   u2970 6E24                     u2890 6D52                     u3690 72E4  
                   u1995 6624                     u2971 6E20                     u2891 6D4E  
                   u3691 72E0                     u2980 6E40                     u2981 6E3C  
                   u2990 5B36                     u2991 5B32              main@partida 0030  
                   _main 6E54                     _keys 003E         ??_PulseClockData 0007  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 5436          __end_of___fladd 6E54                    ?_main 0001  
                  STR_10 7E2A                    STR_11 7EA1                    STR_12 7F5D  
                  STR_20 7DE6                    STR_13 7E5D                    STR_21 7DD5  
                  STR_30 7FEE                    STR_22 7F1B                    STR_14 7E90  
                  STR_31 7FC4                    STR_23 7F69                    STR_15 7F43  
                  STR_40 7FCF                    STR_32 7FCF                    STR_16 7E4C  
                  STR_24 7DF7                    STR_25 7DD5                    STR_33 7FC4  
                  STR_41 7EFF                    STR_17 7EC3                    STR_34 7FCF  
                  STR_50 7FDA                    STR_42 7F29                    STR_26 7F0D  
                  STR_18 7E08                    STR_35 7FC4                    STR_27 7F75  
                  STR_43 7F36                    STR_19 7E6E                    STR_36 7FCF  
                  STR_28 7FF6                    STR_44 7FE5                    STR_37 7FC4  
                  STR_45 7FAE                    STR_29 7FA3                    STR_38 7FCF  
                  STR_46 7EE3                    STR_39 7FC4                    STR_47 7EF1  
                  STR_48 7ED4                    STR_49 7FFB          __end_of___lwdiv 56BA  
        __end_of___lwmod 5646                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 7DD5                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 52DA          __end_of_lcdInit 591C                    _Start 7500  
        __end_of_pinMode 6994                    _valor 7DBB                    main@t 0036  
        __end_of_soWrite 5484                    tablat 000FF5          __end_of_ssdInit 5530  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 6746  
        __initialization 5288          ?_pulseEnablePin 0001             __end_of_main 7500  
       __end_of_Jogador1 5A12         __end_of_Jogador2 5B08       __size_of_FimDeJogo 0110  
                 ??_main 0021               NumJogos@at 0019            __activetblptr 000002  
       __end_of_NumJogos 62E8     __size_of_digitalRead 016A                   ?_Start 0001  
                 _ADCON1 000FC1                   _Jogada 5732                   _Placar 57C2  
                 _Versus 62E8                   ___flge 5B08                   Start@t 0015  
              ??___fladd 0009                ??___lwdiv 0005                ??___lwmod 000C  
                 _kpInit 5384                   _kpRead 527E                   clear_0 528E  
                 _soInit 53B6                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   main@c1 0028                   main@c2 002A  
                 main@j1 0024                   main@j2 0025         __end_of_ssdDigit 5588  
              ??_pinMode 0005             __mediumconst 7DBA                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007         __end_of_pushByte 55E2        __end_of_FimDeJogo 5D1C  
             ___flge@ff1 0001               ___flge@ff2 0005               __accesstop 0080  
__end_of__initialization 5294            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_Start 7DBA  
          __end_of_valor 7DCB       __size_of_delayMili 0030       __size_of_lcdString 0056  
                ??_Start 0015       __size_of_kpReadKey 0078              NumJogos@ant 0016  
            NumJogos@fim 0018              NumJogos@tec 001B                ?_Jogador1 0001  
              ?_Jogador2 0001    __size_of_digitalWrite 024E               _delayMicro 527C  
                ?_Jogada 0001                ?_NumJogos 0011                  ?_Placar 000F  
                ?_Versus 0015                  ?___flge 0001               _lcdCommand 529E  
                ?_kpInit 0001                  ?_kpRead 0001                  ?_soInit 0001  
             _kpDebounce 5D1C       __size_of_ssdUpdate 016C             _digitalWrite 64F8  
                Jogada@j 0003               ??_Jogador1 0015               ??_Jogador2 0015  
      __end_of_delayMili 5384         ??_pulseEnablePin 0007                  __Hparam 0000  
             ??_NumJogos 0013          __size_of_Jogada 0090                  __Lparam 0000  
              ?_ssdDigit 000D          __size_of_Placar 00A6        __end_of_lcdString 54DA  
        kpDebounce@tempo 0045          __size_of_Versus 0210        __end_of_kpReadKey 5732  
        __size_of___flge 0104                  ___fladd 6994                ?_pushByte 000A  
                ___lwdiv 5646                  ___lwmod 55E2          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 7DCB              ssdDigit@val 000E  
            ssdDigit@pos 000D                  __pcinit 5288                  _lcdChar 52BC  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 5868  
                __ptext0 6E54                  __ptext1 54DA                  __ptext2 5384  
                __ptext3 62E8                  __ptext4 5732                  __ptext5 7500  
                __ptext6 6128                  __ptext7 56BA                  __ptext8 527E  
                __ptext9 5D1C                  _display 0044                  _pinMode 6746  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 5436  
                _ssdInit 54DA                  main@ant 002D     end_of_initialization 5294  
          ?_PulseEnClock 0001            __Lmediumconst 7DBA           digitalRead@pin 0001  
            ?_delayMicro 0001        __end_of_ssdUpdate 6128               ??_ssdDigit 000E  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003              ?_kpDebounce 0001  
            ___fladd@grs 0010               _pushNibble 52DA               lcdString@i 0013  
         ??_PulseEnClock 0007               kpReadKey@i 0004                Jogador1@t 0015  
              Jogador2@t 0015                _FimDeJogo 5C0C           __end_of_Jogada 57C2  
         __end_of_Placar 5868           __end_of_Versus 64F8           __end_of___flge 5C0C  
         __end_of_kpInit 53B6           __end_of_kpRead 5288           __end_of_soInit 53F4  
    __size_of_delayMicro 0002      start_initialization 5288      __end_of_digitalRead 5FBC  
    __size_of_lcdCommand 001E                NumJogos@t 001D      __size_of_kpDebounce 0136  
             ?_FimDeJogo 0015        __size_of_Jogador1 00F6        __size_of_Jogador2 00F6  
               ??_Jogada 0001                 ??_Placar 0013        kpDebounce@oldRead 003A  
      kpDebounce@newRead 003C                 ??_Versus 0016                 ??___flge 0009  
      __size_of_NumJogos 01C0                 ??_kpInit 0007                 ??_kpRead 0003  
               ??_soInit 0007                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 003A              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 5354         ___lwdiv@dividend 0001            __pmediumconst 7DBA  
               ?___fladd 0001        __size_of_ssdDigit 0058           _PulseClockData 5300  
               ?___lwdiv 0001                 ?___lwmod 0008     __end_of_PulseEnClock 5354  
              _lcdString 5484              _digitalRead 5E52                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001                _kpReadKey 56BA  
               ?_pinMode 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
         __size_of_Start 08BA         ___lwdiv@quotient 0005             ??_delayMicro 0003  
            ??_FimDeJogo 0019               ?_delayMili 0001   __end_of_PulseClockData 532A  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                _ssdUpdate 5FBC  
             ?_lcdString 000F             ??_kpDebounce 000A               ?_kpReadKey 0001  
            FimDeJogo@c1 0015              FimDeJogo@c2 0017                main@final 0026  
        lcdCommand@value 000E                main@atual 0032                main@tecla 0034  
     __end_of_delayMicro 527E                 Placar@c1 000F                 Placar@c2 0011  
     __end_of_lcdCommand 52BC               pushByte@rs 000A             lcdChar@value 000E  
               _Jogador1 591C                 _Jogador2 5A12       __end_of_kpDebounce 5E52  
               __Hrparam 0000                 _NumJogos 6128                 __Lrparam 0000  
        ?_PulseClockData 0001               ?_ssdUpdate 0001         __size_of___fladd 04C0  
__size_of_pulseEnablePin 0042         __size_of___lwdiv 0074         __size_of___lwmod 0064  
               Versus@j1 0018                 Versus@j2 0015                 Versus@v1 0019  
               Versus@v2 001A         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 5E52                 __ptext11 5A12                 __ptext20 529E  
               __ptext12 591C                 __ptext21 5588                 __ptext13 5C0C  
               __ptext30 532A                 __ptext22 53F4                 __ptext14 5484  
               __ptext31 5300                 __ptext23 527C                 __ptext15 52BC  
               __ptext32 64F8                 __ptext24 5354                 __ptext16 5868  
               __ptext33 5530                 __ptext25 5B08                 __ptext17 53B6  
               __ptext34 55E2                 __ptext26 6994                 __ptext18 6746  
               __ptext35 5646                 __ptext27 57C2                 __ptext19 52DA  
               __ptext28 5FBC                 __ptext29 5436         __size_of_soWrite 004E  
       __size_of_ssdInit 0056            __size_of_main 06AC              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 5530              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007                 _pushByte 5588  
            ??_lcdString 0011                 main@cont 002C               FimDeJogo@t 0019  
               main@slot 002F              ??_kpReadKey 0001             ??_pushNibble 000C  
          ?_digitalWrite 0001             _PulseEnClock 532A        digitalWrite@value 0003  
       ___lwmod@dividend 0008                 soWrite@i 0009              ??_ssdUpdate 000A  
     __end_of_pushNibble 5300             ?_digitalRead 0001          ___lwmod@divisor 000A  
            kpDebounce@i 000D          ___lwmod@counter 000C           ??_digitalWrite 0005  
          ___fladd@signs 000D          digitalWrite@pin 0001             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
